{"version":3,"sources":["pages/Home.js","assets/images/bg-profile.jpg","assets/images/face-1.jpg","assets/images/face-3.jpg","assets/images/face-4.jpg","assets/images/face-5.jpeg","assets/images/face-6.jpeg","assets/images/face-2.jpg","assets/images/home-decor-1.jpeg","assets/images/home-decor-2.jpeg","assets/images/home-decor-3.jpeg","pages/Profile.js","assets/images/wekil.jpg","components/layout/Sidenav.js","components/userManagement/updateProfile.js","components/userManagement/changePassword.js","components/layout/Header.js","components/layout/Footer.js","components/layout/Main.js","services/api.js","components/drivers/driversForm.js","components/drivers/drivers.js","components/drivers/activeDrivers.js","components/passengers/passengersForm.js","components/passengers/passengers.js","components/trips/trips.js","components/company/companyForm.js","components/company/companies.js","components/trips/reservations.js","components/vehicles/vehiclesForm.js","components/vehicles/vehicles.js","components/vehicleTypes/vehicleTypesForm.js","components/vehicleTypes/vehicleTypes.js","components/initialPrices/initialPricesForm.js","components/initialPrices/initialPrices.js","components/trips/transactions.js","components/searchRadiuses/searchRadiusesForm.js","components/searchRadiuses/searchRadiuses.js","components/drivers/detail.js","components/passengers/detail.js","components/vehicles/detail.js","components/company/subscriberForm.js","components/company/detail.js","components/userManagement/userForm.js","services/api2.js","components/userManagement/user.js","components/userManagement/permissionForm.js","components/userManagement/permission.js","components/userManagement/permissionSelection.js","components/userManagement/roleForm.js","components/userManagement/role.js","components/userManagement/login.js","components/trips/detail.js","components/trips/reservationDetail.js","components/dispatch/dispatch.js","components/trips/tripRequests.js","components/trips/tripRequestDetail.js","App.js","index.js"],"names":["Chart","register","registerables","RangePicker","DatePicker","Option","Select","dummyData","userCount","driverCount","tripCount","passngerCount","Drivers","date","count","Passengers","Trips","client","teamName","firstName","No","Client","NoofPassengersubmitted","AverageValue","ChartWithDatePicker","_ref","title","dataKey","data","memoizedGetChartData","chartType","setChartType","useState","modalVisible","setModalVisible","includeTitle","setIncludeTitle","includeDatePicker","setIncludeDatePicker","exportOption","setExportOption","ChartComponent","Line","Pie","Doughnut","Bar","_jsxs","Col","xs","sm","md","lg","xl","className","children","_jsx","Card","bordered","id","concat","style","display","justifyContent","alignItems","defaultValue","width","marginLeft","onChange","value","ExportOutlined","onClick","options","maintainAspectRatio","Modal","visible","onCancel","onOk","handleExport","handleExportToExcel","excelData","map","item","workbook","XLSX","book_new","worksheet","aoa_to_sheet","book_append_sheet","handleExportToWord","htmlTable","forEach","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","async","divId","chartTitle","div","getElementById","exportButton","querySelector","titleElement","datePickers","querySelectorAll","picker","canvas","html2canvas","image","toDataURL","handleExportChart","Checkbox","checked","e","target","Radio","Group","Home","Title","Typography","counts","setCounts","allTimeSeriesData","setAllTimeSeriesData","tpByMonth","setTPByMonth","tpByTeam","setTPByTeam","rfpByTeamMember","setRfpByTeamMember","Passengersummary","setPassengersummary","averageOfferingValue","setAverageOfferingValue","getChartData","labels","entry","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","getChartDataForTPByClient","predefinedColors","clients","Set","Object","values","monthData","add","index","dataPoints","color","length","entries","_ref2","month","clientData","find","push","keys","getChartDataForTPByTeam","teams","_ref3","getChartDataForRFPByTeamMember","_ref4","useMemo","Row","gutter","key","align","DashboardOutlined","fontSize","level","_Fragment","Profile","imageURL","setImageURL","setLoading","pencil","height","viewBox","fill","xmlns","d","uploadButton","VerticalAlignTopOutlined","avatar","convesionImg","description","convesionImg2","convesionImg3","convesionImg4","convesionImg5","project","img","project1","titlesub","disciption","project2","project3","backgroundImage","BgProfile","bodyStyle","justify","span","Avatar","size","shape","src","profilavatar","Button","Switch","defaultChecked","extra","paddingTop","paddingBottom","Descriptions","Item","TwitterOutlined","FacebookOutlined","InstagramOutlined","List","itemLayout","dataSource","split","renderItem","actions","Meta","p","cover","alt","titile","Upload","name","listType","showUploadList","action","beforeUpload","file","isJpgOrPng","message","error","isLt2M","info","status","getBase64","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","imageUrl","Sidenav","pathname","useLocation","page","replace","dashboard","PieChartOutlined","profile","UsergroupAddOutlined","logo","Menu","theme","mode","defaultOpenKeys","NavLink","to","SubMenu","CheckCircleFilled","TeamOutlined","background","Password","Input","UpdateProfile","onClose","form","Form","useForm","JSON","parse","localStorage","getItem","formData","setFormData","loading","useEffect","response","axios","get","headers","Authorization","console","getUserData","setFieldsValue","lastName","email","phoneNumber","onFinish","put","success","layout","rules","required","htmlType","handleCancel","ChangePassword","newPassword","confirmPassword","pattern","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","profileIcon","fillRule","clipRule","togglerIcon","Header","placement","subName","onPress","setVisible","isProfileModalVisible","setIsProfileModalVisible","isChangePasswordModalVisible","setIsChangePasswordModalVisible","window","scrollTo","userData","hideProfileModal","hideChangePasswordModal","menu","showProfileModal","UserOutlined","showChangePasswordModal","SettingOutlined","Link","LogoutOutlined","Breadcrumb","textTransform","Drawer","mask","hideDrawer","Dropdown","overlay","trigger","preventDefault","footer","Footer","AntFooter","Layout","HeartFilled","AntHeader","Content","Sider","Main","setPlacement","sidenavColor","setSidenavColor","sidenavType","setSidenavType","fixed","setFixed","openDrawer","handleSidenavType","handleSidenavColor","handleFixedNavbar","closable","breakpoint","collapsedWidth","onCollapse","collapsed","log","Affix","useFetchWithToken","endpoint","setData","setError","history","useHistory","token","apiUrl","process","API_URL","fetchData","postData","post","putData","urlParam","deleteData","delete","postFormData","putFormData","refetchData","DriversForm","closeModal","fileList","setFileList","imageFileList","setImageFileList","licenceFileList","setLicenceFileList","_response","_response$driver","driver","resetFields","TabPane","Tabs","Search","irModalVisible","setProjectModalVisible","uploading","setUploading","selectedColumns","setSelectedColumns","defaultSelectedColumns","driversData","setDriversData","filteredData","setFilteredData","searchQuery","setSearchQuery","selectedRowDetails","setSelectedRowDetails","selectedRow","setSelectedRow","detailsVisible","setDetailsVisible","submitted","setSubmitted","handleSearch","filter","some","String","toLowerCase","includes","driversColumns","dataIndex","render","rating","Rate","disabled","Tag","toUpperCase","record","icon","EditOutlined","handleEditDriver","marginRight","InfoCircleOutlined","DynamicTable","columns","initialColumns","onRow","defaultDisplayedColumns","column","slice","displayedColumns","setDisplayedColumns","filteredColumns","overflowX","Table","pagination","pageSize","placeholder","allowClear","enterButton","SearchOutlined","onSearch","textAlign","marginTop","Spin","defaultActiveKey","tab","overflow","headStyle","position","top","zIndex","handleCloseDetails","address","DocViewer","pluginRenderers","DocViewerRenderers","documents","config","header","disableHeader","disableFileName","retainURLParams","ActiveDrivers","driversWithDetails","all","activeDrivers","driverDetails","driverId","fetchDriverDetails","ColumnSelector","selected","DownOutlined","scroll","x","y","_response$passenger","passenger","url","FormData","_ref5","append","uploadFiles","passengersData","setPassengersData","renderWithTooltip","text","maxLength","arguments","undefined","truncatedText","substring","Tooltip","whiteSpace","textOverflow","maxWidth","passengersColumns","handleEditPassenger","PassengersForm","tripsData","setTripsData","trip","tripsColumns","Date","toLocaleString","CompanyForm","_response$data","_ref6","_ref7","maxCount","UploadOutlined","Companies","companiesData","setCompaniesData","company","companiesColumns","handleEditCompany","PlusOutlined","handleAddCompany","handleRowClick","companyName","contactPerson","balance","creditLimit","startDate","toLocaleDateString","endDate","Reservations","VehiclesForm","vehicleTypes","setVehicleTypes","drivers","setDrivers","fetchVehicleTypes","fetchDrivers","selectedDriver","submitData","typeName","Vehicles","vehiclesData","setVehiclesData","vehicle","vehiclesColumns","handleEditVehicle","rowKey","handleAddVehicle","plateNumber","model","vehicleType","pricePerKM","surgePricePerKM","VehicleTypesForm","VehicleTypes","InitialPricesForm","initialPrices","InitialPrices","Transactions","SearchRadiusesForm","updatedData","SearchRadiuses","Panel","Collapse","DriversDetail","setCollapsed","previewVisible","setPreviewVisible","previewImage","setPreviewImage","useParams","driverData","driverLoading","tripData","tripsLoading","trips","handleUpload","warning","fieldName","filteredTrips","lowerCaseQuery","from","renderImage","objectFit","marginBottom","cursor","handlePreview","driverImage","accept","ToTopOutlined","hidden","driverLicence","PassengersDetail","passengerData","passengerLoading","passengerImage","VehiclesDetail","_vehicleData$trips","docFileList","setDocFileList","vehicleData","setVehicleData","setDriverData","vehicleTypeData","setVehicleTypeData","fetchVehicleData","vehicleResponse","manufacturedYear","vehicleImage","SubscriberForm","companyId","passengers","setPassengers","fetchPassengers","CompanyDetails","isModalVisible","setIsModalVisible","companyData","setCompanyData","subscribersData","setSubscribersData","companyResponse","subscribersResponse","fetchCompanyDetails","handleModalClose","filteredSubscribers","subscriber","companyImage","companyLicence","handleAddSubscriber","UserForm","roles","rolesLoading","rolesError","role","User","userModalVisible","setUserModalVisible","userColumns","handleEditUser","DeleteOutlined","handleAddUser","PermissionForm","handleSavePermission","Permission","permissionData","setPermissionData","permissionModalVisible","setPermissionModalVisible","permissionColumns","fetchPermissions","fetch","method","json","ok","handleAddPermission","PermissionSelection","permissions","selectedPermissions","permission","RoleForm","setSelectedPermissions","responseData","Role","roleModalVisible","setRoleModalVisible","roleData","roleColumns","flexDirection","flexWrap","padding","borderRadius","handleEditRole","handleAddRole","Login","Component","constructor","body","stringify","setItem","Permissions","this","props","onFinishFailed","errorInfo","offset","valuePropName","signinbg","withRouter","TripDetail","directionsResponse","setDirectionsResponse","tripLoading","isMounted","setIsMounted","coordinates","lat","parseFloat","fromLat","lng","fromLon","toLat","toLon","google","maps","DirectionsService","route","origin","destination","travelMode","TravelMode","DRIVING","DirectionsStatus","OK","distance","price","pickUpTime","dropOffTime","driverRating","passengerRatinf","driverFeedback","passengerFeedback","ReservationDetail","setSelectedDriver","reservationLoading","driversLoading","isLoading","reservation","pickUpDate","updatedAt","passengerRating","location","reload","Dispatch","setResponse","accepted","setAccepted","fromPlace","setFromPlace","toPlace","setToPlace","fromCoords","setFromCoords","toCoords","setToCoords","selectedPassenger","setSelectedPassenger","selectedVehicleType","setSelectedVehicleType","fromAutocompleteRef","useRef","toAutocompleteRef","socketRef","res","current","io","on","disconnect","handlePlaceSelect","autocomplete","setCoords","setPlace","place","getPlace","geometry","formatted_address","LoadScript","googleMapsApiKey","libraries","Autocomplete","onLoad","onPlaceChanged","showSearch","filterOption","input","option","indexOf","sendRequest","requestData","passengerId","vehicleTypeId","emit","arrivingInfo","eta","TripRequests","TripRequestDetail","estimatedPrice","App","Route","path","exact","component","ReactDOM","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.7a91f5d8.chunk.js","sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { Card, Col, Row, Typography, Table, Tooltip, Select, DatePicker, Radio, Modal, Checkbox } from 'antd';\nimport html2canvas from 'html2canvas';\nimport { Bar, Pie, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { DashboardOutlined, UserOutlined, ExportOutlined, FileTextOutlined, FileDoneOutlined, DeploymentUnitOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { Document, Packer, Paragraph, ImageRun } from 'docx';\nimport fileDownload from 'js-file-download';\n\nChart.register(...registerables);\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nconst dummyData = {\n  counts: {\n    userCount: 100,\n    driverCount: 150,\n    tripCount: 200,\n    passngerCount: 250,\n   \n  },\n  timeSeriesData: {\n    Drivers: [\n      { date: '2023-01-01', count: 5 },\n      { date: '2023-02-01', count: 10 },\n    ],\n    Passengers: [\n      { date: '2023-01-01', count: 15 },\n      { date: '2023-02-01', count: 20 },\n    ],\n    Trips: [\n      { date: '2023-01-01', count: 25 },\n      { date: '2023-02-01', count: 30 },\n    ],\n  \n  },\n  tpByMonth: {\n    '2023-01': [\n      { date: '2023-01-01', client: 'Client A', count: 5 },\n      { date: '2023-01-15', client: 'Client B', count: 10 },\n    ],\n    '2023-02': [\n      { date: '2023-02-01', client: 'Client A', count: 15 },\n      { date: '2023-02-15', client: 'Client B', count: 20 },\n    ],\n  },\n  tpByTeam: {\n    '2023-01': [\n      { date: '2023-01-01', teamName: 'Team A', count: 5 },\n      { date: '2023-01-15', teamName: 'Team B', count: 10 },\n    ],\n    '2023-02': [\n      { date: '2023-02-01', teamName: 'Team A', count: 15 },\n      { date: '2023-02-15', teamName: 'Team B', count: 20 },\n    ],\n  },\n  rfpByTeamMember: {\n    '2023-01': [\n      { date: '2023-01-01', firstName: 'John', count: 5 },\n      { date: '2023-01-15', firstName: 'Doe', count: 10 },\n    ],\n    '2023-02': [\n      { date: '2023-02-01', firstName: 'John', count: 15 },\n      { date: '2023-02-15', firstName: 'Doe', count: 20 },\n    ],\n  },\n  Passengersummary: [\n    { No: 1, Client: 'Client A', NoofPassengersubmitted: 5, AverageValue: 100 },\n    { No: 2, Client: 'Client B', NoofPassengersubmitted: 10, AverageValue: 200 },\n  ],\n  averageOfferingValue: 150,\n};\n\nconst ChartWithDatePicker = ({ title, dataKey, data, memoizedGetChartData }) => {\n  const [chartType, setChartType] = useState('Bar');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [includeTitle, setIncludeTitle] = useState(true);\n  const [includeDatePicker, setIncludeDatePicker] = useState(true);\n  const [exportOption, setExportOption] = useState(\"excel\");\n\n  const handleChartTypeChange = (value) => {\n    setChartType(value);\n  };\n\n  const handleExportChart = async (divId, chartTitle) => {\n    const div = document.getElementById(divId);\n    const exportButton = div.querySelector('.export-icon');\n    const titleElement = div.querySelector('h2');\n    const datePickers = div.querySelectorAll('.ant-picker');\n\n    if (exportButton) exportButton.style.display = 'none';\n    if (titleElement && !includeTitle) titleElement.style.display = 'none';\n    if (datePickers && !includeDatePicker) datePickers.forEach(picker => picker.style.display = 'none');\n\n    const canvas = await html2canvas(div);\n\n    if (exportButton) exportButton.style.display = 'block';\n    if (titleElement && !includeTitle) titleElement.style.display = 'block';\n    if (datePickers && !includeDatePicker) datePickers.forEach(picker => picker.style.display = 'block');\n\n    const image = canvas.toDataURL('image/png');\n    const link = document.createElement('a');\n    link.href = image;\n    link.download = `${chartTitle}.png`;\n    link.click();\n  };\n\n  const handleExportToExcel = () => {\n    const excelData = data.map(item => [item.date, item.count]);\n    const workbook = XLSX.utils.book_new();\n    const worksheet = XLSX.utils.aoa_to_sheet([['Date', 'Count'], ...excelData]);\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\n    XLSX.writeFile(workbook, 'data.xlsx');\n  };\n\n  const handleExportToWord = () => {\n    let htmlTable = '<table><thead><tr><th>Date</th><th>Count</th></tr></thead><tbody>';\n    data.forEach(item => {\n      htmlTable += `<tr><td>${item.date}</td><td>${item.count}</td></tr>`;\n    });\n    htmlTable += '</tbody></table>';\n    const blob = new Blob(['<!DOCTYPE html><html><head><meta charset=\"UTF-8\"></head><body>' + htmlTable + '</body></html>'], { type: 'text/html' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'data.docx';\n    link.click();\n  };\n\n  const handleExport = () => {\n    setModalVisible(false);\n    switch (exportOption) {\n      case 'excel':\n        handleExportToExcel();\n        break;\n      case 'word':\n        handleExportToWord();\n        break;\n      case 'image':\n        handleExportChart(`div-${dataKey}`, title);\n        break;\n      default:\n        break;\n    }\n  };\n\n  let ChartComponent;\n  switch (chartType) {\n    case 'Line':\n      ChartComponent = Line;\n      break;\n    case 'Pie':\n      ChartComponent = Pie;\n      break;\n    case 'Doughnut':\n      ChartComponent = Doughnut;\n      break;\n    case 'Bar':\n    default:\n      ChartComponent = Bar;\n      break;\n  }\n\n  return (\n    <Col xs={24} sm={24} md={12} lg={12} xl={10} className=\"mb-24\">\n      <Card bordered={false} className=\"criclebox h-full\">\n        <div id={`div-${dataKey}`}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <h2>{title}</h2>\n            <div>\n              <RangePicker />\n              <Select defaultValue=\"Bar\" style={{ width: 100, marginLeft: 10 }} onChange={handleChartTypeChange}>\n                <Option value=\"Bar\">Bar</Option>\n                <Option value=\"Line\">Line</Option>\n                <Option value=\"Pie\">Pie</Option>\n                <Option value=\"Doughnut\">Doughnut</Option>\n              </Select>\n              <ExportOutlined className=\"export-icon\" style={{ marginLeft: 10 }} onClick={() => setModalVisible(true)} />\n            </div>\n          </div>\n          {data && <ChartComponent data={memoizedGetChartData(data)} options={{ maintainAspectRatio: true }} />}\n        </div>\n      </Card>\n      <Modal\n        title=\"Export Options\"\n        visible={modalVisible}\n        onCancel={() => setModalVisible(false)}\n        onOk={handleExport}\n      >\n        <Checkbox checked={includeTitle} onChange={(e) => setIncludeTitle(e.target.checked)}>Include Title</Checkbox>\n        <Checkbox checked={includeDatePicker} onChange={(e) => setIncludeDatePicker(e.target.checked)}>Include Date Picker</Checkbox>\n        <Radio.Group value={exportOption} onChange={(e) => setExportOption(e.target.value)}>\n          <Radio value=\"excel\">Export to Excel</Radio>\n          <Radio value=\"word\">Export to Word</Radio>\n          <Radio value=\"image\">Export as Image</Radio>\n        </Radio.Group>\n      </Modal>\n    </Col>\n  );\n};\n\nfunction Home() {\n  const { Title } = Typography;\n  const [counts, setCounts] = useState(dummyData.counts);\n  const [allTimeSeriesData, setAllTimeSeriesData] = useState(dummyData.timeSeriesData);\n  const [tpByMonth, setTPByMonth] = useState(dummyData.tpByMonth);\n  const [tpByTeam, setTPByTeam] = useState(dummyData.tpByTeam);\n  const [rfpByTeamMember, setRfpByTeamMember] = useState(dummyData.rfpByTeamMember);\n  const [Passengersummary, setPassengersummary] = useState(dummyData.Passengersummary);\n  const [averageOfferingValue, setAverageOfferingValue] = useState(dummyData.averageOfferingValue);\n  const [chartType, setChartType] = useState('Bar');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [includeTitle, setIncludeTitle] = useState(true);\n  const [includeDatePicker, setIncludeDatePicker] = useState(true);\n  const [exportOption, setExportOption] = useState(\"excel\");\n\n  const groupDataByMonth = (data) => {\n    const groupedData = {};\n    data.forEach((entry) => {\n      if (!groupedData[entry.date]) {\n        groupedData[entry.date] = [];\n      }\n      groupedData[entry.date].push({ client: entry.client, count: parseInt(entry.count) });\n    });\n    return groupedData;\n  };\n\n  const groupDataByMonthTeam = (data) => {\n    const groupedData = {};\n    data.forEach((entry) => {\n      const { date, teamName, count } = entry;\n      if (!groupedData[date]) {\n        groupedData[date] = {};\n      }\n      if (!groupedData[date][teamName]) {\n        groupedData[date][teamName] = parseInt(count);\n      } else {\n        groupedData[date][teamName] += parseInt(count);\n      }\n    });\n    return groupedData;\n  };\n\n  const groupDataByMonthTeamMember = (data) => {\n    const groupedData = {};\n    data.forEach((entry) => {\n      const { date, firstName, count } = entry;\n      if (!groupedData[date]) {\n        groupedData[date] = {};\n      }\n      if (!groupedData[date][firstName]) {\n        groupedData[date][firstName] = parseInt(count);\n      } else {\n        groupedData[date][firstName] += parseInt(count);\n      }\n    });\n    return groupedData;\n  };\n\n  const getChartData = (data) => {\n    return {\n      labels: data.map((entry) => entry.date),\n      datasets: [\n        {\n          label: 'Count',\n          backgroundColor: '#470c8c',\n          borderColor: 'rgba(75,192,192,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n          hoverBorderColor: 'rgba(75,192,192,1)',\n          data: data.map((entry) => entry.count),\n        },\n      ],\n    };\n  };\n\n  const getChartDataForTPByClient = (data) => {\n    const predefinedColors = [\n      '#FF6384', '#36A2EB', '#FFCE56', '#8D6E63', '#66BB6A', '#AB47BC',\n      '#EC407A', '#42A5F5', '#26C6DA', '#7E57C2', '#26A69A', '#D4E157',\n      '#5C6BC0', '#7CB342', '#F06292', '#9575CD', '#64B5F6', '#81C784',\n      '#E57373', '#5C6BC0', '#7CB342', '#F06292', '#9575CD', '#64B5F6'\n    ];\n\n    const datasets = [];\n    const clients = new Set();\n    Object.values(data).forEach((monthData) => {\n      monthData.forEach((entry) => {\n        clients.add(entry.client);\n      });\n    });\n\n    clients.forEach((client, index) => {\n      const dataPoints = [];\n      const color = predefinedColors[index % predefinedColors.length];\n      Object.entries(data).forEach(([month, monthData]) => {\n        const clientData = monthData.find((entry) => entry.client === client);\n        dataPoints.push(clientData ? clientData.count : 0);\n      });\n      datasets.push({\n        label: client,\n        backgroundColor: color,\n        borderColor: color,\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        hoverBorderColor: color,\n        data: dataPoints,\n      });\n    });\n\n    return {\n      labels: Object.keys(data),\n      datasets,\n    };\n  };\n\n  const getChartDataForTPByTeam = (data) => {\n    const predefinedColors = [\n      '#FF6384', '#36A2EB', '#FFCE56', '#8D6E63', '#66BB6A', '#AB47BC',\n      '#EC407A', '#42A5F5', '#26C6DA', '#7E57C2', '#26A69A', '#D4E157',\n      '#5C6BC0', '#7CB342', '#F06292', '#9575CD', '#64B5F6', '#81C784',\n      '#E57373', '#5C6BC0', '#7CB342', '#F06292', '#9575CD', '#64B5F6'\n    ];\n\n    const datasets = [];\n    const teams = new Set();\n    Object.values(data).forEach((monthData) => {\n      Object.keys(monthData).forEach((teamName) => {\n        teams.add(teamName);\n      });\n    });\n\n    teams.forEach((teamName, index) => {\n      const dataPoints = [];\n      const color = predefinedColors[index % predefinedColors.length];\n      Object.entries(data).forEach(([month, monthData]) => {\n        dataPoints.push(monthData[teamName] || 0);\n      });\n      datasets.push({\n        label: teamName,\n        backgroundColor: color,\n        borderColor: color,\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        hoverBorderColor: color,\n        data: dataPoints,\n      });\n    });\n\n    return {\n      labels: Object.keys(data),\n      datasets,\n    };\n  };\n\n  const getChartDataForRFPByTeamMember = (data) => {\n    const predefinedColors = [\n      '#FF6384', '#36A2EB', '#FFCE56', '#8D6E63', '#66BB6A', '#AB47BC',\n      '#EC407A', '#42A5F5', '#26C6DA', '#7E57C2', '#26A69A', '#D4E157',\n      '#5C6BC0', '#7CB342', '#F06292', '#9575CD', '#64B5F6', '#81C784',\n      '#E57373', '#5C6BC0', '#7CB342', '#F06292', '#9575CD', '#64B5F6'\n    ];\n\n    const datasets = [];\n    const teams = new Set();\n    Object.values(data).forEach((monthData) => {\n      Object.keys(monthData).forEach((firstName) => {\n        teams.add(firstName);\n      });\n    });\n\n    teams.forEach((firstName, index) => {\n      const dataPoints = [];\n      const color = predefinedColors[index % predefinedColors.length];\n      Object.entries(data).forEach(([month, monthData]) => {\n        dataPoints.push(monthData[firstName] || 0);\n      });\n      datasets.push({\n        label: firstName,\n        backgroundColor: color,\n        borderColor: color,\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        hoverBorderColor: color,\n        data: dataPoints,\n      });\n    });\n\n    return {\n      labels: Object.keys(data),\n      datasets,\n    };\n  };\n\n  const memoizedGetChartData = useMemo(() => getChartData, []);\n  const memoizedGetChartDataForTPByClient = useMemo(() => getChartDataForTPByClient, []);\n  const memoizedGetChartDataForTPByTeam = useMemo(() => getChartDataForTPByTeam, []);\n  const memoizedGetChartDataForRFPByTeamMember = useMemo(() => getChartDataForRFPByTeamMember, []);\n\n  const columns = [\n    { title: 'No', dataIndex: 'No', key: 'No' },\n    { title: 'Client', dataIndex: 'Client', key: 'Client', render: (text) => <Tooltip title={text}>{text.length > 5 ? `${text.substring(0, 5)}...` : text}</Tooltip> },\n    { title: 'No Of TP Submitted', dataIndex: 'NoofPassengersubmitted', key: 'NoofPassengersubmitted' },\n    { title: 'Average Value', dataIndex: 'AverageValue', key: 'AverageValue' },\n  ];\n\n  const renderChart = (type, data) => {\n    switch (type) {\n      case 'Line':\n        return <Line data={data} options={{ maintainAspectRatio: true }} />;\n      case 'Doughnut':\n        return <Doughnut data={data} options={{ maintainAspectRatio: true }} />;\n      case 'Pie':\n        return <Pie data={data} options={{ maintainAspectRatio: true }} />;\n      case 'Bar':\n      default:\n        return <Bar data={data} options={{ maintainAspectRatio: true }} />;\n    }\n  };\n\n  return (\n    <div className=\"layout-content\">\n      <Row className=\"rowgap-vbox\" gutter={[24, 0]}>\n        {counts &&\n          Object.keys(counts).map((key) => (\n            <Col key={key} xs={24} sm={24} md={12} lg={6} xl={6} className=\"mb-24\">\n              <Card bordered={false} className=\"criclebox\">\n                <div className=\"number\">\n                  <Row align=\"middle\" gutter={[24, 0]}>\n                    <Col xs={6}>\n                      <DashboardOutlined style={{ fontSize: '34px' }} />\n                    </Col>\n                    <Col xs={18}>\n                      <span>{key}</span>\n                      <Title level={3}>{counts[key]}</Title>\n                    </Col>\n                  </Row>\n                </div>\n              </Card>\n            </Col>\n          ))}\n      </Row>\n      <Row gutter={[24, 0]}>\n        {allTimeSeriesData && (\n          <>\n            <ChartWithDatePicker\n              title=\"Drivers\"\n              dataKey=\"Drivers\"\n              data={allTimeSeriesData.Drivers}\n              memoizedGetChartData={memoizedGetChartData}\n            />\n            <ChartWithDatePicker\n              title=\"Passengers\"\n              dataKey=\"Passengers\"\n              data={allTimeSeriesData.Passengers}\n              memoizedGetChartData={memoizedGetChartData}\n            />\n            <ChartWithDatePicker\n              title=\"Trips\"\n              dataKey=\"Trips\"\n              data={allTimeSeriesData.Trips}\n              memoizedGetChartData={memoizedGetChartData}\n            />\n          \n          </>\n        )}\n        {/* <Col xs={24} sm={24} md={12} lg={12} xl={10} className=\"mb-24\">\n          <Card bordered={false} title={'TP Summary'} className=\"criclebox h-full\">\n            <div>\n              <Table\n                columns={columns}\n                dataSource={Passengersummary}\n                rowKey=\"No\"\n                footer={() => (\n                  <div>\n                    <p><b>Average Offering Value: </b>{averageOfferingValue}</p>\n                  </div>\n                )}\n              />\n            </div>\n          </Card>\n        </Col> */}\n      </Row>\n   \n    </div>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/bg-profile.9c36abe7.jpg\";","export default __webpack_public_path__ + \"static/media/face-1.d85d07a1.jpg\";","export default __webpack_public_path__ + \"static/media/face-3.e08fd425.jpg\";","export default __webpack_public_path__ + \"static/media/face-4.03453a44.jpg\";","export default __webpack_public_path__ + \"static/media/face-5.e725aef8.jpeg\";","export default __webpack_public_path__ + \"static/media/face-6.b75146da.jpeg\";","export default __webpack_public_path__ + \"static/media/face-2.efe2e35c.jpg\";","export default __webpack_public_path__ + \"static/media/home-decor-1.05e218fd.jpeg\";","export default __webpack_public_path__ + \"static/media/home-decor-2.b4e5397c.jpeg\";","export default __webpack_public_path__ + \"static/media/home-decor-3.74d13fcb.jpeg\";","/*!\n  =========================================================\n  * Muse Ant Design Dashboard - v1.0.0\n  =========================================================\n  * Product Page: https://www.creative-tim.com/product/muse-ant-design-dashboard\n  * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n  * Licensed under MIT (https://github.com/creativetimofficial/muse-ant-design-dashboard/blob/main/LICENSE.md)\n  * Coded by Creative Tim\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  List,\n  Descriptions,\n  Avatar,\n  Radio,\n  Switch,\n  Upload,\n  message,\n} from \"antd\";\n\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  InstagramOutlined,\n  VerticalAlignTopOutlined,\n} from \"@ant-design/icons\";\n\nimport BgProfile from \"../assets/images/bg-profile.jpg\";\nimport profilavatar from \"../assets/images/face-1.jpg\";\nimport convesionImg from \"../assets/images/face-3.jpg\";\nimport convesionImg2 from \"../assets/images/face-4.jpg\";\nimport convesionImg3 from \"../assets/images/face-5.jpeg\";\nimport convesionImg4 from \"../assets/images/face-6.jpeg\";\nimport convesionImg5 from \"../assets/images/face-2.jpg\";\nimport project1 from \"../assets/images/home-decor-1.jpeg\";\nimport project2 from \"../assets/images/home-decor-2.jpeg\";\nimport project3 from \"../assets/images/home-decor-3.jpeg\";\n\nfunction Profile() {\n  const [imageURL, setImageURL] = useState(false);\n  const [, setLoading] = useState(false);\n\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(false);\n      return;\n    }\n    if (info.file.status === \"done\") {\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setLoading(false);\n        setImageURL(false);\n      });\n    }\n  };\n\n  const pencil = [\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        d=\"M13.5858 3.58579C14.3668 2.80474 15.6332 2.80474 16.4142 3.58579C17.1953 4.36683 17.1953 5.63316 16.4142 6.41421L15.6213 7.20711L12.7929 4.37868L13.5858 3.58579Z\"\n        className=\"fill-gray-7\"\n      ></path>\n      <path\n        d=\"M11.3787 5.79289L3 14.1716V17H5.82842L14.2071 8.62132L11.3787 5.79289Z\"\n        className=\"fill-gray-7\"\n      ></path>\n    </svg>,\n  ];\n\n  const uploadButton = (\n    <div className=\"ant-upload-text font-semibold text-dark\">\n      {<VerticalAlignTopOutlined style={{ width: 20, color: \"#000\" }} />}\n      <div>Upload New Project</div>\n    </div>\n  );\n\n  const data = [\n    {\n      title: \"Sophie B.\",\n      avatar: convesionImg,\n      description: \"Hi! I need more information…\",\n    },\n    {\n      title: \"Anne Marie\",\n      avatar: convesionImg2,\n      description: \"Awesome work, can you…\",\n    },\n    {\n      title: \"Ivan\",\n      avatar: convesionImg3,\n      description: \"About files I can…\",\n    },\n    {\n      title: \"Peterson\",\n      avatar: convesionImg4,\n      description: \"Have a great afternoon…\",\n    },\n    {\n      title: \"Nick Daniel\",\n      avatar: convesionImg5,\n      description: \"Hi! I need more information…\",\n    },\n  ];\n\n  const project = [\n    {\n      img: project1,\n      titlesub: \"Project #1\",\n      title: \"Modern\",\n      disciption:\n        \"As Uber works through a huge amount of internal management turmoil.\",\n    },\n    {\n      img: project2,\n      titlesub: \"Project #2\",\n      title: \"Scandinavian\",\n      disciption:\n        \"Music is something that every person has his or her own specific opinion about.\",\n    },\n    {\n      img: project3,\n      titlesub: \"Project #3\",\n      title: \"Minimalist\",\n      disciption:\n        \"Different people have different taste, and various types of music, Zimbali Resort\",\n    },\n  ];\n\n  return (\n    <>\n      <div\n        className=\"profile-nav-bg\"\n        style={{ backgroundImage: \"url(\" + BgProfile + \")\" }}\n      ></div>\n\n      <Card\n        className=\"card-profile-head\"\n        bodyStyle={{ display: \"none\" }}\n        title={\n          <Row justify=\"space-between\" align=\"middle\" gutter={[24, 0]}>\n            <Col span={24} md={12} className=\"col-info\">\n              <Avatar.Group>\n                <Avatar size={74} shape=\"square\" src={profilavatar} />\n\n                <div className=\"avatar-info\">\n                  <h4 className=\"font-semibold m-0\">Sarah Jacob</h4>\n                  <p>CEO / Co-Founder</p>\n                </div>\n              </Avatar.Group>\n            </Col>\n            <Col\n              span={24}\n              md={12}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Radio.Group defaultValue=\"a\">\n                <Radio.Button value=\"a\">OVERVIEW</Radio.Button>\n                <Radio.Button value=\"b\">TEAMS</Radio.Button>\n                <Radio.Button value=\"c\">PROJECTS</Radio.Button>\n              </Radio.Group>\n            </Col>\n          </Row>\n        }\n      ></Card>\n\n      <Row gutter={[24, 0]}>\n        <Col span={24} md={8} className=\"mb-24 \">\n          <Card\n            bordered={false}\n            className=\"header-solid h-full\"\n            title={<h6 className=\"font-semibold m-0\">Platform Settings</h6>}\n          >\n            <ul className=\"list settings-list\">\n              <li>\n                <h6 className=\"list-header text-sm text-muted\">ACCOUNT</h6>\n              </li>\n              <li>\n                <Switch defaultChecked />\n\n                <span>Email me when someone follows me</span>\n              </li>\n              <li>\n                <Switch />\n                <span>Email me when someone answers me</span>\n              </li>\n              <li>\n                <Switch defaultChecked />\n                <span>Email me when someone mentions me</span>\n              </li>\n              <li>\n                <h6 className=\"list-header text-sm text-muted m-0\">\n                  APPLICATION\n                </h6>\n              </li>\n              <li>\n                <Switch defaultChecked />\n                <span>New launches and projects</span>\n              </li>\n              <li>\n                <Switch defaultChecked />\n                <span>Monthly product updates</span>\n              </li>\n              <li>\n                <Switch defaultChecked />\n                <span>Subscribe to newsletter</span>\n              </li>\n            </ul>\n          </Card>\n        </Col>\n        <Col span={24} md={8} className=\"mb-24\">\n          <Card\n            bordered={false}\n            title={<h6 className=\"font-semibold m-0\">Profile Information</h6>}\n            className=\"header-solid h-full card-profile-information\"\n            extra={<Button type=\"link\">{pencil}</Button>}\n            bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n          >\n            <p className=\"text-dark\">\n              {\" \"}\n              Hi, I’m Alec Thompson, Decisions: If you can’t decide, the answer\n              is no. If two equally difficult paths, choose the one more painful\n              in the short term (pain avoidance is creating an illusion of\n              equality).{\" \"}\n            </p>\n            <hr className=\"my-25\" />\n            <Descriptions title=\"Oliver Liam\">\n              <Descriptions.Item label=\"Full Name\" span={3}>\n                Sarah Emily Jacob\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Mobile\" span={3}>\n                (44) 123 1234 123\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Email\" span={3}>\n                sarahjacob@mail.com\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Location\" span={3}>\n                USA\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Social\" span={3}>\n                <a href=\"#pablo\" className=\"mx-5 px-5\">\n                  {<TwitterOutlined />}\n                </a>\n                <a href=\"#pablo\" className=\"mx-5 px-5\">\n                  {<FacebookOutlined style={{ color: \"#344e86\" }} />}\n                </a>\n                <a href=\"#pablo\" className=\"mx-5 px-5\">\n                  {<InstagramOutlined style={{ color: \"#e1306c\" }} />}\n                </a>\n              </Descriptions.Item>\n            </Descriptions>\n          </Card>\n        </Col>\n        <Col span={24} md={8} className=\"mb-24\">\n          <Card\n            bordered={false}\n            title={<h6 className=\"font-semibold m-0\">Conversations</h6>}\n            className=\"header-solid h-full\"\n            bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={data}\n              split={false}\n              className=\"conversations-list\"\n              renderItem={(item) => (\n                <List.Item actions={[<Button type=\"link\">REPLY</Button>]}>\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar shape=\"square\" size={48} src={item.avatar} />\n                    }\n                    title={item.title}\n                    description={item.description}\n                  />\n                </List.Item>\n              )}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Card\n        bordered={false}\n        className=\"header-solid mb-24\"\n        title={\n          <>\n            <h6 className=\"font-semibold\">Projects</h6>\n            <p>Architects design houses</p>\n          </>\n        }\n      >\n        <Row gutter={[24, 24]}>\n          {project.map((p, index) => (\n            <Col span={24} md={12} xl={6} key={index}>\n              <Card\n                bordered={false}\n                className=\"card-project\"\n                cover={<img alt=\"example\" src={p.img} />}\n              >\n                <div className=\"card-tag\">{p.titlesub}</div>\n                <h5>{p.titile}</h5>\n                <p>{p.disciption}</p>\n                <Row gutter={[6, 0]} className=\"card-footer\">\n                  <Col span={12}>\n                    <Button type=\"button\">VIEW PROJECT</Button>\n                  </Col>\n                  <Col span={12} className=\"text-right\">\n                    <Avatar.Group className=\"avatar-chips\">\n                      <Avatar size=\"small\" src={profilavatar} />\n                      <Avatar size=\"small\" src={convesionImg} />\n                      <Avatar size=\"small\" src={convesionImg2} />\n                      <Avatar size=\"small\" src={convesionImg3} />\n                    </Avatar.Group>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          ))}\n          <Col span={24} md={12} xl={6}>\n            <Upload\n              name=\"avatar\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader projects-uploader\"\n              showUploadList={false}\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              beforeUpload={beforeUpload}\n              onChange={handleChange}\n            >\n              {imageURL ? (\n                <img src={imageURL} alt=\"avatar\" style={{ width: \"100%\" }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n}\n\nexport default Profile;\n","export default __webpack_public_path__ + \"static/media/wekil.806d29b3.jpg\";","import { Menu, Button } from \"antd\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport logo from \"../../assets/images/wekil.jpg\";\nimport { PieChartOutlined, CheckCircleFilled, UsergroupAddOutlined, TeamOutlined } from \"@ant-design/icons\";\n\nfunction Sidenav({ color }) {\n  const { pathname } = useLocation();\n  const page = pathname.replace(\"/\", \"\");\n\n  const dashboard = (\n    <PieChartOutlined style={{ color: page === \"dashboard\" ? color : \"\" }} />\n  );\n\n  const profile = (\n    <UsergroupAddOutlined style={{ color: page === \"profile\" ? color : \"\" }} />\n  );\n\n  return (\n    <>\n      <div className=\"brand\">\n        <img src={logo} width={40} height={40} alt=\"\" />\n        <span>Wekil Zewari</span>\n      </div>\n      <hr />\n      <Menu theme=\"light\" mode=\"inline\" defaultOpenKeys={['general-management']}>\n        <Menu.Item key=\"1\">\n          <NavLink to=\"/dashboard\">\n            <span className=\"icon\">{dashboard}</span>\n            <span className=\"label\">Dashboard</span>\n          </NavLink>\n        </Menu.Item>\n\n        <Menu.SubMenu key=\"general-management\" title=\"General Management\">\n          <Menu.Item key=\"drivers\">\n            <NavLink to=\"/drivers\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Drivers</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"activeDrivers\">\n            <NavLink to=\"/activeDrivers\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Active Drivers</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"passengers\">\n            <NavLink to=\"/passengers\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Passengers</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"vehicles\">\n            <NavLink to=\"/vehicles\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Vehicles</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"tripRequests\">\n            <NavLink to=\"/tripRequests\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Trip Requests</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"trips\">\n            <NavLink to=\"/trips\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Trips</span>\n            </NavLink>\n          </Menu.Item>\n\n          <Menu.Item key=\"reservations\">\n            <NavLink to=\"/reservations\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Reservations</span>\n            </NavLink>\n          </Menu.Item>\n\n          <Menu.Item key=\"dispatch\">\n            <NavLink to=\"/dispatch\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Dispatch</span>\n            </NavLink>\n          </Menu.Item>\n\n          <Menu.Item key=\"transactions\">\n            <NavLink to=\"/transactions\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Transactions</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"companies\">\n            <NavLink to=\"/companies\">\n              <span className=\"icon\">{profile}</span>\n              <span className=\"label\">Companies</span>\n            </NavLink>\n          </Menu.Item>\n        </Menu.SubMenu>\n     \n \n\n        <Menu.SubMenu key=\"configuration\" title=\"Configuration\">\n          <Menu.Item key=\"vehicleTypes\">\n            <NavLink to=\"/vehicleTypes\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Vehicle Types</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"initialPrices\">\n            <NavLink to=\"/initialPrices\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Initial Prices</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"searchRadiuses\">\n            <NavLink to=\"/searchRadiuses\">\n              <span className=\"icon\">\n                <CheckCircleFilled style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Search Radius</span>\n            </NavLink>\n          </Menu.Item>\n        </Menu.SubMenu>\n\n    \n        <Menu.SubMenu key=\"user-management\" title=\"User Management\">\n          <Menu.Item key=\"users\">\n            <NavLink to=\"/users\">\n              <span className=\"icon\">{profile}</span>\n              <span className=\"label\">Users</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"roles\">\n            <NavLink to=\"/roles\">\n              <span className=\"icon\">\n                <UsergroupAddOutlined style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Roles</span>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"permissions\">\n            <NavLink to=\"/permissions\">\n              <span className=\"icon\">\n                <TeamOutlined style={{ color: \"blue\" }} />\n              </span>\n              <span className=\"label\">Permissions</span>\n            </NavLink>\n          </Menu.Item>\n        </Menu.SubMenu>\n      </Menu>\n      <div className=\"aside-footer\">\n        <div className=\"footer-box\" style={{ background: color }}>\n          <span className=\"icon\" style={{ color }}>\n            {dashboard}\n          </span>\n          <h6>Need Help?</h6>\n          <p>Please check our docs</p>\n          <Button type=\"primary\" className=\"ant-btn-sm ant-btn-block\">\n            DOCUMENTATION\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Sidenav;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\n\nconst { Password } = Input;\n\nconst UpdateProfile = ({ onClose, onOk }) => {\n  const [form] = Form.useForm();\n  const userData = JSON.parse(localStorage.getItem('userData'));\n  const id = userData.id;\n\n  const [formData, setFormData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const response = await axios.get(`http://194.164.72.21:5001/users/${id}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        setFormData(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n\n    getUserData();\n  }, [id]);\n\n  useEffect(() => {\n    if (formData) {\n      form.setFieldsValue({\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        phoneNumber: formData.phoneNumber,\n      });\n    }\n  }, [formData, form]);\n\n  const onFinish = async (values) => {\n    try {\n      await axios.put(`http://194.164.72.21:5001/users/updateProfile/${id}`, values, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      const response = await axios.get(`http://194.164.72.21:5001/users/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      message.success(\"Update Successful.\");\n\n      setFormData(response.data);\n      onOk(); // Close the modal on successful submission\n\n    } catch (error) {\n      console.error('Error updating data:', error);\n    }\n  };\n\n  const handleCancel = () => {\n    onClose(); // Close the modal on cancel\n  };\n  const handleOk = () => {\n    onOk(); // Close the modal on cancel\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Form.Item label=\"First Name\" name=\"firstName\" rules={[{ required: true, message: 'Please enter a First Name' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Last Name\" name=\"lastName\" rules={[{ required: true, message: 'Please enter a Last Name' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Email\" name=\"email\" rules={[{ required: true, message: 'Please enter an Email' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Phone Number\" name=\"phoneNumber\" rules={[{ required: true, message: 'Please enter a Phone Number' }]}>\n        <Input />\n      </Form.Item>\n    \n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button onClick={handleCancel} style={{ marginLeft: 8 }}>\n          Cancel\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default UpdateProfile;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\n\nconst { Password } = Input;\n\nconst ChangePassword = ({ onClose, onOk }) => {\n  const [form] = Form.useForm();\n  const userData = JSON.parse(localStorage.getItem('userData'));\n  const id = userData.id;\n\n  const [formData, setFormData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const response = await axios.get(`http://194.164.72.21:5001/users/${id}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        setFormData(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        message.error('Error fetching user data');\n      }\n    };\n\n    getUserData();\n  }, [id]);\n\n  useEffect(() => {\n    if (formData) {\n      form.setFieldsValue({\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        phoneNumber: formData.phoneNumber,\n      });\n    }\n  }, [formData, form]);\n\n  const onFinish = async (values) => {\n    if (values.newPassword !== values.confirmPassword) {\n      message.error('New Password and Confirm Password do not match');\n      return;\n    }\n\n    try {\n      await axios.put(`http://194.164.72.21:5001/users/change-password/${id}`, values, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      const response = await axios.get(`http://194.164.72.21:5001/users/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      message.success(\"Update Successful.\");\n\n      setFormData(response.data);\n      onOk(); // Close the modal on successful submission\n\n    } catch (error) {\n      console.error('Error updating data:', error);\n      if (error.response || error.response.data || error.response.data.message) {\n        message.error('Invalid current Password');\n      } else {\n        message.error('Error updating password');\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    onClose(); // Close the modal on cancel\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Form.Item \n        label=\"Current Password\" \n        name=\"currentPassword\" \n        rules={[{ required: true, message: 'Please enter your current password' }]}>\n        <Password />\n      </Form.Item>\n      <Form.Item \n        label=\"New Password\" \n        name=\"newPassword\" \n        rules={[\n          { required: true, message: 'Please enter your new password' },\n          { \n            pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, \n            message: 'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character'\n          }\n        ]}>\n        <Password />\n      </Form.Item>\n      <Form.Item \n        label=\"Confirm Password\" \n        name=\"confirmPassword\" \n        dependencies={['newPassword']} \n        rules={[\n          { required: true, message: 'Please confirm your new password' },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('newPassword') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error('The two passwords that you entered do not match'));\n            },\n          }),\n        ]}>\n        <Password />\n      </Form.Item>\n    \n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button onClick={handleCancel} style={{ marginLeft: 8 }}>\n          Cancel\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Breadcrumb, Button, Drawer, Dropdown, Menu, Modal } from \"antd\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { UserOutlined, SettingOutlined, LogoutOutlined } from '@ant-design/icons';\nimport UpdateProfile from '../userManagement/updateProfile'; // Adjust the import path as necessary\nimport ChangePassword from '../userManagement/changePassword'; // Adjust the import path as necessary\n\n\nconst profileIcon = (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    key={0}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10ZM12 7C12 8.10457 11.1046 9 10 9C8.89543 9 8 8.10457 8 7C8 5.89543 8.89543 5 10 5C11.1046 5 12 5.89543 12 7ZM9.99993 11C7.98239 11 6.24394 12.195 5.45374 13.9157C6.55403 15.192 8.18265 16 9.99998 16C11.8173 16 13.4459 15.1921 14.5462 13.9158C13.756 12.195 12.0175 11 9.99993 11Z\"\n      fill=\"#111827\"\n    ></path>\n  </svg>\n);\n\nconst togglerIcon = (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 448 512\"\n    key={0}\n  >\n    <path d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"></path>\n  </svg>\n);\n\nfunction Header({ placement, name, subName, onPress }) {\n  const [visible, setVisible] = useState(false);\n  const [isProfileModalVisible, setIsProfileModalVisible] = useState(false);\n  const [isChangePasswordModalVisible, setIsChangePasswordModalVisible] = useState(false);\n\n  useEffect(() => window.scrollTo(0, 0), []);\n\n  const showDrawer = () => setVisible(true);\n  const hideDrawer = () => setVisible(false);\n  const userData = JSON.parse(localStorage.getItem('userData'))\n\n  const showProfileModal = () => setIsProfileModalVisible(true);\n  const hideProfileModal = () => setIsProfileModalVisible(false);\n\n  const showChangePasswordModal = () => setIsChangePasswordModalVisible(true);\n  const hideChangePasswordModal = () => setIsChangePasswordModalVisible(false);\n\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"0\" onClick={showProfileModal}>\n        <UserOutlined /> Update Profile\n      </Menu.Item>\n      <Menu.Item key=\"1\" onClick={showChangePasswordModal}>\n        <SettingOutlined /> Change Password\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Link to=\"/login\">\n          <LogoutOutlined /> Logout\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <>\n      <Row gutter={[24, 0]}>\n        <Col span={24} md={6}>\n          <Breadcrumb>\n            <Breadcrumb.Item>\n              <NavLink to=\"/\">Pages</NavLink>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item style={{ textTransform: \"capitalize\" }}>\n              {name.replace(\"/\", \"\")}\n            </Breadcrumb.Item>\n          </Breadcrumb>\n          <div className=\"ant-page-header-heading\">\n            <span\n              className=\"ant-page-header-heading-title\"\n              style={{ textTransform: \"capitalize\" }}\n            >\n              {subName.replace(\"/\", \"\")}\n            </span>\n          </div>\n        </Col>\n        <Col span={24} md={18} className=\"header-control\">\n          <Button type=\"link\" className=\"sidebar-toggler\" onClick={() => onPress()}>\n            {togglerIcon}\n          </Button>\n          <Drawer\n            className=\"settings-drawer\"\n            mask={true}\n            width={360}\n            onClose={hideDrawer}\n            placement={placement}\n            visible={visible}\n          ></Drawer>\n          <Dropdown overlay={menu} trigger={['click']}>\n            <Link to=\"#\" className=\"ant-dropdown-link btn-sign-in\" onClick={(e) => e.preventDefault()}>\n              {profileIcon}\n              <span>{userData.firstName}</span>\n            </Link>\n          </Dropdown>\n        </Col>\n      </Row>\n      <Modal title=\"Update Profile\" visible={isProfileModalVisible} onCancel={hideProfileModal} footer={null}>\n        <UpdateProfile onClose={hideProfileModal} onOk={hideProfileModal} />\n      </Modal>\n\n      <Modal title=\"Change Password\" visible={isChangePasswordModalVisible} onCancel={hideChangePasswordModal} footer={null}>\n        <ChangePassword onClose={hideChangePasswordModal} onOk={hideChangePasswordModal} />\n      </Modal>\n    </>\n  );\n}\n\nexport default Header;\n","/*!\n  =========================================================\n  * Muse Ant Design Dashboard - v1.0.0\n  =========================================================\n  * Product Page: https://www.creative-tim.com/product/muse-ant-design-dashboard\n  * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n  * Licensed under MIT (https://github.com/creativetimofficial/muse-ant-design-dashboard/blob/main/LICENSE.md)\n  * Coded by Creative Tim\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { Layout, Row, Col } from \"antd\";\nimport { HeartFilled } from \"@ant-design/icons\";\n\nfunction Footer() {\n  const { Footer: AntFooter } = Layout;\n\n  return (\n    <AntFooter style={{ background: \"#fafafa\" }}>\n      <Row className=\"just\">\n        <Col xs={24} md={12} lg={12}>\n          <div className=\"copyright\">\n            © 2024, made with\n            {<HeartFilled />} by\n            <a href=\"#pablo\" className=\"font-weight-bold\" target=\"_blank\">\nWekil Zewari            </a>\n            \n          </div>\n        </Col>\n    \n      </Row>\n    </AntFooter>\n  );\n}\n\nexport default Footer;\n","/*!\n  =========================================================\n  * Muse Ant Design Dashboard - v1.0.0\n  =========================================================\n  * Product Page: https://www.creative-tim.com/product/muse-ant-design-dashboard\n  * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n  * Licensed under MIT (https://github.com/creativetimofficial/muse-ant-design-dashboard/blob/main/LICENSE.md)\n  * Coded by Creative Tim\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Layout, Drawer, Affix } from \"antd\";\nimport Sidenav from \"./Sidenav\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst { Header: AntHeader, Content, Sider } = Layout;\n\nfunction Main({ children }) {\n  const [visible, setVisible] = useState(false);\n  const [placement, setPlacement] = useState(\"right\");\n  const [sidenavColor, setSidenavColor] = useState(\"#1890ff\");\n  const [sidenavType, setSidenavType] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n\n  const openDrawer = () => setVisible(!visible);\n  const handleSidenavType = (type) => setSidenavType(type);\n  const handleSidenavColor = (color) => setSidenavColor(color);\n  const handleFixedNavbar = (type) => setFixed(type);\n\n  let { pathname } = useLocation();\n  pathname = pathname.replace(\"/\", \"\");\n\n  useEffect(() => {\n    if (pathname === \"rtl\") {\n      setPlacement(\"left\");\n    } else {\n      setPlacement(\"right\");\n    }\n  }, [pathname]);\n\n  return (\n    <Layout\n      className={`layout-dashboard ${\n        pathname === \"profile\" ? \"layout-profile\" : \"\"\n      } ${pathname === \"rtl\" ? \"layout-dashboard-rtl\" : \"\"}`}\n    >\n      <Drawer\n        title={false}\n        placement={placement === \"right\" ? \"left\" : \"right\"}\n        closable={false}\n        onClose={() => setVisible(false)}\n        visible={visible}\n        key={placement === \"right\" ? \"left\" : \"right\"}\n        width={250}\n        className={`drawer-sidebar ${\n          pathname === \"rtl\" ? \"drawer-sidebar-rtl\" : \"\"\n        } `}\n      >\n        <Layout\n          className={`layout-dashboard ${\n            pathname === \"rtl\" ? \"layout-dashboard-rtl\" : \"\"\n          }`}\n        >\n          <Sider\n            trigger={null}\n            width={250}\n            theme=\"light\"\n            className={`sider-primary ant-layout-sider-primary ${\n              sidenavType === \"#fff\" ? \"active-route\" : \"\"\n            }`}\n            style={{ background: sidenavType }}\n          >\n            <Sidenav color={sidenavColor} />\n          </Sider>\n        </Layout>\n      </Drawer>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        onCollapse={(collapsed, type) => {\n          console.log(collapsed, type);\n        }}\n        trigger={null}\n        width={250}\n        theme=\"light\"\n        className={`sider-primary ant-layout-sider-primary ${\n          sidenavType === \"#fff\" ? \"active-route\" : \"\"\n        }`}\n        style={{ background: sidenavType }}\n      >\n        <Sidenav color={sidenavColor} />\n      </Sider>\n      <Layout>\n        {fixed ? (\n          <Affix>\n            <AntHeader className={`${fixed ? \"ant-header-fixed\" : \"\"}`}>\n              <Header\n                onPress={openDrawer}\n                name={pathname}\n                subName={pathname}\n                handleSidenavColor={handleSidenavColor}\n                handleSidenavType={handleSidenavType}\n                handleFixedNavbar={handleFixedNavbar}\n              />\n            </AntHeader>\n          </Affix>\n        ) : (\n          <AntHeader className={`${fixed ? \"ant-header-fixed\" : \"\"}`}>\n            <Header\n              onPress={openDrawer}\n              name={pathname}\n              subName={pathname}\n              handleSidenavColor={handleSidenavColor}\n              handleSidenavType={handleSidenavType}\n              handleFixedNavbar={handleFixedNavbar}\n            />\n          </AntHeader>\n        )}\n        <Content className=\"content-ant\">{children}</Content>\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Main;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table, Card, Upload, message, Input, Row, Col,Dropdown, Modal, Button, Checkbox , Tag, Tabs, Spin} from \"antd\";\nimport { useHistory } from 'react-router-dom'; // Assuming you're using react-router for navigation\n\nconst useFetchWithToken = (endpoint) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory(); // Initialize useHistory hook for redirection\n\n  const token = localStorage.getItem('token');\n  if (!token) {\n    // Redirect to login page if token is not found\n    history.push('/login');\n  }  const apiUrl = process.env.API_URL || 'http://194.164.72.21:5001'; \n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.get(`${apiUrl}/${endpoint}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'tennant':'web'\n        },\n      });\n      setData(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 401 || error.response.status === 403) {\n        // Redirect to login page if status code is 401\n        history.push('/login');\n      } else {\n        setError(error.message);\n        message.error(\"Something went wrong!\");\n      }\n     \n      \n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(); // eslint-disable-next-line\n  }, [endpoint, token]);\n\n  const postData = async (postData) => {\n    try {\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.post(`${apiUrl}/${endpoint}`, postData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'tennant':'web'\n\n        },\n      });\n      setData(response.data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const postFormData = async (formData, endpoint) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      \n      const response = await axios.post(`${apiUrl}/${endpoint}`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data',\n          'tennant':'web'\n\n        },\n      });\n      \n      return response.data;\n    } catch (error) {\n      throw new Error(error.message || 'Failed to upload data');\n    }\n  };\n  const putFormData = async (formData, endpoint) => {\n    console.log(\"fff\", formData)\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      \n      const response = await axios.put(`${apiUrl}/${endpoint}`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data',\n          'tennant':'web'\n\n        },\n      });\n      \n      return response.data;\n    } catch (error) {\n      throw new Error(error.message || 'Failed to upload data');\n    }\n  };\n  \n  const putData = async (putData, urlParam) => {\n    console.log(\"url\",urlParam)\n    try {\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.put(`${apiUrl}/${endpoint}/${urlParam}`, putData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'tennant':'web'\n\n        },\n      });\n      setData(response.data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const refetchData = async () => {\n    // Simply refetch the data using the existing fetchData function\n    fetchData();\n  };\n\n  const deleteData = async (urlParam) => {\n    try {\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.delete(`${apiUrl}/${endpoint}/${urlParam}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'tennant':'web'\n\n        },\n      });\n      setData(response.data); // No data returned after delete\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return { data, error, loading, postData, putData, deleteData, postFormData , putFormData, refetchData, token};\n};\n\nexport default useFetchWithToken;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Upload, Select, Row, Col, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport useFetchWithToken from '../../services/api';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst DriversForm = ({ formData, setFormData, closeModal, refetchData }) => {\n  const [form] = Form.useForm();\n  const [fileList, setFileList] = useState([]);\n  const [imageFileList, setImageFileList] = useState([]);\n  const [licenceFileList, setLicenceFileList] = useState([]);\n  const { postFormData, putFormData } = useFetchWithToken('drivers');\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n  }, [formData, form]);\n\n  const handleFileChange = ({ fileList }) => setFileList(fileList);\n  const handleImageFileChange = ({ fileList }) => setImageFileList(fileList);\n  const handleLicenceFileChange = ({ fileList }) => setLicenceFileList(fileList);\n\n  const uploadFiles = async (url, driverId) => {\n    const formData = new FormData();\n\n    fileList.forEach(({ originFileObj }) => {\n      formData.append(\"documents\", originFileObj);\n    });\n\n    imageFileList.forEach(({ originFileObj }) => {\n      formData.append(\"driverImage\", originFileObj);\n    });\n\n    licenceFileList.forEach(({ originFileObj }) => {\n      formData.append(\"driverLicence\", originFileObj);\n    });\n\n    await axios.put(url, formData, {\n      headers: { 'Content-Type': 'multipart/form-data', 'tennant':'web' },\n    });\n  };\n\n  const onFinish = async (values) => {\n    try {\n      let response;\n\n      if (formData.id) {\n        // Update driver\n        response = await putFormData(values, `drivers/${formData.id}`);\n      } else {\n        // Add new driver\n        response = await postFormData(values, 'drivers');\n      }\n\n      if (response?.driver?.id) {\n      //  await uploadFiles(`http://194.164.72.21:5001/drivers/updateDocuments/${response.driver.id}`, response.driver.id);\n\n      message.success('Driver saved successfully');\n    } else {\n        message.success('Driver saved successfully');\n      }\n\n      setFormData({});\n      closeModal();\n      refetchData(); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n      // message.error('Failed to save driver');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"First Name\" name=\"firstName\" rules={[{ required: true, message: 'Please enter a first name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Last Name\" name=\"lastName\" rules={[{ required: true, message: 'Please enter a last name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Phone Number\" name=\"phoneNumber\" rules={[{ required: true, message: 'Please enter a phone number' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Status\" name=\"status\">\n            <Select>\n              <Option value=\"Pending\">Pending</Option>\n              <Option value=\"Active\">Active</Option>\n              <Option value=\"Inactive\">Inactive</Option>\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n     \n   \n    \n      {/* <Row gutter={16}>\n        <Col span={8}>\n          <Form.Item label=\"Documents\" rules={[{ required: false, message: 'Please enter a first name' }]} name=\"documents\">\n            <Upload\n              beforeUpload={() => false}\n              fileList={fileList}\n              onChange={handleFileChange}\n              maxCount={3}\n            >\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Driver Image\" rules={[{ required: false, message: 'Please enter a first name' }]} name=\"driverImage\">\n            <Upload\n              beforeUpload={() => false}\n              fileList={imageFileList}\n              onChange={handleImageFileChange}\n              maxCount={1}\n            >\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Driver Licence\" rules={[{ required: false, message: 'Please enter a first name' }]} name=\"driverLicence\">\n            <Upload\n              beforeUpload={() => false}\n              fileList={licenceFileList}\n              onChange={handleLicenceFileChange}\n              maxCount={1}\n            >\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n          </Form.Item>\n        </Col>\n      </Row> */}\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default DriversForm;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col,Rate,Tag, message, Input, Tabs, Button, Table, Modal, Upload, Checkbox, Dropdown, Tooltip, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, DeleteOutlined, InfoCircleOutlined, ToTopOutlined, DownOutlined } from '@ant-design/icons';\nimport DriversForm from './driversForm'; // Import the DriversForm component\nimport useFetchWithToken from '../../services/api';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { useHistory } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst Drivers = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['firstName', 'lastName', 'phoneNumber', 'email', 'status', 'actions']; // Default selected columns\n  const [driversData, setDriversData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRowDetails, setSelectedRowDetails] = useState(null); // State to hold selected row details\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const handleAddDriver = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false)\n    } catch (error) {\n      // Handle upload error\n      console.log(error)\n      message.error(`${file.name} upload failed.`);\n      setUploading(false)\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true)\n      const response = await axios.get(\"http://194.164.72.21:5001/drivers\");\n      setDriversData(response.data);\n      setFilteredData(response.data);\n      setLoading(false)\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = driversData.filter(driver =>\n      Object.keys(driver).some(key =>\n        String(driver[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const driversColumns = [\n    { title: 'First Name', dataIndex: 'firstName', key: 'firstName', width: '20%' },\n    { title: 'Last Name', dataIndex: 'lastName', key: 'lastName' , width: '20%'},\n    { title: 'Phone Number', dataIndex: 'phoneNumber', key: 'phoneNumber', width: '20%' },\n    // { title: 'Email', dataIndex: 'email', key: 'email' , width: '10%'},\n    {\n      title: 'Rating',\n      dataIndex: 'rating',\n      key: 'rating',\n      width: '20%',\n      render: (rating) => <Rate disabled value={rating} />,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '20%',\n      render: (status) => {\n        let color = '';\n        switch (status) {\n          case 'Active':\n            color = 'darkgreen';\n            break;\n          case 'Pending':\n            color = 'darkorange';\n            break;\n          case 'Inactive':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray'; // Fallback color if status doesn't match any case\n        }\n        return <Tag color={color}>{status.toUpperCase()}</Tag>;\n      },\n    },    {\n      title: 'Actions',\n       width: '20%',\n      key: 'actions',\n      \n      render: (_, record) => (\n        <>\n          <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditDriver(record)} style={{ marginRight: 8 }}>Edit</Button>\n          <Button type=\"link\"><NavLink to={`/driverDetails/${record.id}`} style={{ color: 'green' }}><InfoCircleOutlined /> &nbsp;Details</NavLink></Button>\n        </>\n      ),\n    },\n  ];\n\n  const handleEditDriver = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={driversColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const defaultDisplayedColumns = initialColumns.map(column => column.key).slice(0, 7); // Select first two columns by default\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    const handleColumnChange = (selectedColumns) => {\n      setDisplayedColumns(selectedColumns);\n    };\n\n    const filteredColumns = initialColumns.filter(column => displayedColumns.includes(column.key));\n\n    return (\n      <>\n        {/* <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={defaultDisplayedColumns}\n              onChange={handleColumnChange}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown> */}\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            // scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n        {/* <Col span={12} style={{ textAlign: 'left' }}>\n            <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddDriver}>\n              Add Driver\n            </Button>\n          </Col> */}\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Drivers\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n         \n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable onRow={(record) => ({\n                // onClick: () => handleRowClick(record),\n              })} columns={driversColumns} data={filteredData} pagination={{ pageSize: 5 }} />\n            )}\n          </Col>\n          <Col xs={24} xl={12}>\n            {selectedRow && (\n              <div className=\"tabled\">\n                <Tabs defaultActiveKey=\"1\">\n                  <TabPane tab=\"Details\" key=\"1\">\n                    <Card\n                      title={`Details of ${selectedRow.firstName} ${selectedRow.lastName}`}\n                      style={{ height: \"500px\", overflow: \"auto\" }}\n                      headStyle={{ position: 'sticky', top: '0', zIndex: '1', background: '#fff' }}\n                      extra={\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                          <Button type=\"link\" onClick={handleCloseDetails} style={{ color: 'red' }}>Close</Button>\n                          <Button type=\"link\" onClick={() => history.push(`/driverDetails/${selectedRow.id}`)} style={{ color: 'green' }}>Details</Button>\n                        </div>\n                      }\n                    >\n                      <p>Phone Number: {selectedRow.phoneNumber}</p>\n                      <p>Email: {selectedRow.email}</p>\n                      <p>Status: {selectedRow.status}</p>\n                      <p>Address: {selectedRow.address}</p>\n                      <p>Rating: {selectedRow.rating}</p>\n                    </Card>\n                  </TabPane>\n                  <TabPane tab=\"File Preview\" key=\"2\">\n                    <Card bordered={false} className=\"header-solid h-full\">\n                      <h4>Driver Preview:</h4>\n                      <div style={{ width: \"100%\", height: \"400px\" }}>\n                        <DocViewer\n                          pluginRenderers={DocViewerRenderers}\n                          documents={selectedRow.documents ? `http://194.164.72.21:5001${selectedRow.documents}` : []}\n                          config={{\n                            header: {\n                              disableHeader: false,\n                              disableFileName: true,\n                              retainURLParams: false\n                            }\n                          }}\n                          style={{ height: 400 }}\n                        />\n                      </div>\n                    </Card>\n                  </TabPane>\n                </Tabs>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Card>\n  \n      <Modal\n        title={formData.id ? 'Edit Driver' : 'Add Driver'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <DriversForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Drivers;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Tag,Input, Tabs, Button, Table, Modal, Upload, Checkbox, Dropdown, Tooltip, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, DeleteOutlined, InfoCircleOutlined, ToTopOutlined, DownOutlined } from '@ant-design/icons';\nimport DriversForm from './driversForm'; // Import the DriversForm component\nimport useFetchWithToken from '../../services/api';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { useHistory } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst ActiveDrivers = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['driverId', 'vehicleTypeId', 'socketId', 'currentLat', 'currentLon', 'queueNumber', 'status', 'actions']; // Default selected columns\n  const [driversData, setDriversData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const fetchDriverDetails = async (driverId) => {\n    try {\n        const response = await axios.get(`http://194.164.72.21:5001/drivers/${driverId}`, {\n            headers: { 'tennant': 'web' }\n        });\n        const { status, ...driverDetails } = response.data.driver;  // Exclude status\n        return driverDetails;  // Return details without status\n    } catch (error) {\n        console.error(`Unable to fetch driver details for driverId ${driverId}`, error);\n        return null;\n    }\n};\n\nconst fetchData = async () => {\n  try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/drivers/active\");\n\n      const driversWithDetails = await Promise.all(response.data.activeDrivers.map(async driver => {\n          const driverDetails = await fetchDriverDetails(driver.driverId);\n          return { ...driver, ...driverDetails, key: driver.id }; // Do not override status\n      }));\n\n      setDriversData(driversWithDetails);\n      setFilteredData(driversWithDetails);\n      setLoading(false);\n  } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n  }\n};\n\n\n  const handleAddDriver = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false);\n    } catch (error) {\n      // Handle upload error\n      console.log(error);\n      message.error(`${file.name} upload failed.`);\n      setUploading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = driversData.filter(driver =>\n      Object.keys(driver).some(key =>\n        String(driver[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  // const driversColumns = [\n  //   { title: 'Driver ID', dataIndex: 'driverId', key: 'driverId' },\n  //   { title: 'First Name', dataIndex: 'firstName', key: 'firstName' },\n  //   { title: 'Last Name', dataIndex: 'lastName', key: 'lastName' },\n\n\n  //   // { title: 'Vehicle Type ID', dataIndex: 'vehicleTypeId', key: 'vehicleTypeId' },\n  //   // { title: 'Socket ID', dataIndex: 'socketId', key: 'socketId' },\n  //   { title: 'Lattitude', dataIndex: 'currentLat', key: 'currentLat' },\n  //   { title: 'Longitude', dataIndex: 'currentLon', key: 'currentLon' },\n  //   { title: 'Queue Number', dataIndex: 'queueNumber', key: 'queueNumber' },\n  //   { title: 'Status', dataIndex: 'status', key: 'status' },\n  //   {\n  //     title: 'Actions',\n  //     key: 'actions',\n  //     render: (_, record) => (\n  //       <>\n  //         <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditDriver(record)} style={{ marginRight: 8 }}>Edit</Button>\n  //         <Button type=\"link\"><NavLink to={`/driverDetails/${record.driverId}`} style={{ color: 'green' }}><InfoCircleOutlined /> &nbsp;Details</NavLink></Button>\n  //       </>\n  //     ),\n  //   },\n  // ];\n\n  const driversColumns = [\n    { title: 'Driver ID', dataIndex: 'driverId', key: 'driverId' },\n    { title: 'First Name', dataIndex: 'firstName', key: 'firstName' },\n    { title: 'Last Name', dataIndex: 'lastName', key: 'lastName' },\n    { title: 'Lattitude', dataIndex: 'currentLat', key: 'currentLat' },\n    { title: 'Longitude', dataIndex: 'currentLon', key: 'currentLon' },\n    { title: 'Queue Number', dataIndex: 'queueNumber', key: 'queueNumber' },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status) => (\n          <Tag color={status === 'Ready' ? 'green' : status === 'Busy' ? 'red' : 'gray'}>\n              {status}\n          </Tag>\n      ),\n  },    {\n        title: 'Actions',\n        key: 'actions',\n        render: (_, record) => (\n            <>\n                <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditDriver(record)} style={{ marginRight: 8 }}>Edit</Button>\n                <Button type=\"link\"><NavLink to={`/driverDetails/${record.driverId}`} style={{ color: 'green' }}><InfoCircleOutlined /> &nbsp;Details</NavLink></Button>\n            </>\n        ),\n    },\n];\n\n  const handleEditDriver = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={driversColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const defaultDisplayedColumns = initialColumns.map(column => column.key); // Select all columns by default\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    const handleColumnChange = (selectedColumns) => {\n      setDisplayedColumns(selectedColumns);\n    };\n\n    const filteredColumns = initialColumns.filter(column => displayedColumns.includes(column.key));\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={defaultDisplayedColumns}\n              onChange={handleColumnChange}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown>\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable\n                onRow={(record) => ({\n                  // onClick: () => handleRowClick(record),\n                })}\n                columns={driversColumns}\n                data={filteredData}\n                pagination={{ pageSize: 5 }}\n              />\n            )}\n          </Col>\n          <Col xs={24} xl={12}>\n            {selectedRow && (\n              <div className=\"tabled\">\n                <Tabs defaultActiveKey=\"1\">\n                  <TabPane tab=\"Details\" key=\"1\">\n                    <Card\n                      title={`Details of Driver ID ${selectedRow.driverId}`}\n                      style={{ height: \"500px\", overflow: \"auto\" }}\n                      headStyle={{ position: 'sticky', top: '0', zIndex: '1', background: '#fff' }}\n                      extra={\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                          <Button type=\"link\" onClick={handleCloseDetails} style={{ color: 'red' }}>Close</Button>\n                          <Button type=\"link\" onClick={() => history.push(`/driverDetails/${selectedRow.driverId}`)} style={{ color: 'green' }}>Details</Button>\n                        </div>\n                      }\n                    >\n                      <p>Phone Number: {selectedRow.phoneNumber}</p>\n                      <p>Email: {selectedRow.email}</p>\n                      <p>Status: {selectedRow.status}</p>\n                      <p>Address: {selectedRow.address}</p>\n                      <p>Rating: {selectedRow.rating}</p>\n                    </Card>\n                  </TabPane>\n                  <TabPane tab=\"File Preview\" key=\"2\">\n                    <Card bordered={false} className=\"header-solid h-full\">\n                      <h4>Driver Preview:</h4>\n                      <div style={{ width: \"100%\", height: \"400px\" }}>\n                        <DocViewer\n                          pluginRenderers={DocViewerRenderers}\n                          documents={selectedRow.documents ? `http://194.164.72.21:5001${selectedRow.documents}` : []}\n                          config={{\n                            header: {\n                              disableHeader: false,\n                              disableFileName: true,\n                              retainURLParams: false\n                            }\n                          }}\n                          style={{ height: 400 }}\n                        />\n                      </div>\n                    </Card>\n                  </TabPane>\n                </Tabs>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Card>\n\n      <Modal\n        title={formData.id ? 'Edit Driver' : 'Add Driver'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <DriversForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default ActiveDrivers;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Upload, Select, Row, Col, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport useFetchWithToken from '../../services/api';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst DriversForm = ({ formData, setFormData, closeModal, refetchData }) => {\n  const [form] = Form.useForm();\n  const [fileList, setFileList] = useState([]);\n  const [imageFileList, setImageFileList] = useState([]);\n  const [licenceFileList, setLicenceFileList] = useState([]);\n  const { postFormData, putFormData } = useFetchWithToken('passengers');\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n  }, [formData, form]);\n\n  const handleFileChange = ({ fileList }) => setFileList(fileList);\n  const handleImageFileChange = ({ fileList }) => setImageFileList(fileList);\n  const handleLicenceFileChange = ({ fileList }) => setLicenceFileList(fileList);\n\n  const uploadFiles = async (url, passengerId) => {\n    const formData = new FormData();\n\n    \n    imageFileList.forEach(({ originFileObj }) => {\n      formData.append(\"passengerImage\", originFileObj);\n    });\n\n \n    await axios.put(url, formData, {\n      headers: { 'Content-Type': 'multipart/form-data', 'tennant':'web' },\n    });\n  };\n\n  const onFinish = async (values) => {\n    try {\n      let response;\n\n      if (formData.id) {\n        // Update passenger\n        response = await putFormData(values, `passengers/${formData.id}`);\n      } else {\n        // Add new passenger\n        response = await postFormData(values, 'passengers');\n      }\n\n      if (response?.passenger?.id) {\n        await uploadFiles(`http://194.164.72.21:5001/passengers/updateDocuments/${response.passenger.id}`, response.passenger.id);\n\n        message.success('Passenger and documents uploaded successfully');\n      } else {\n        message.success('Passenger saved successfully');\n      }\n\n      setFormData({});\n      closeModal();\n      refetchData(); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to save passenger');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"First Name\" name=\"firstName\" rules={[{ required: true, message: 'Please enter a first name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Last Name\" name=\"lastName\" rules={[{ required: true, message: 'Please enter a last name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Phone Number\" name=\"phoneNumber\" rules={[{ required: true, message: 'Please enter a phone number' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n     \n        <Col span={12}>\n          <Form.Item label=\"Status\" name=\"status\">\n            <Select>\n              <Option value=\"Pending\">Pending</Option>\n              <Option value=\"Active\">Active</Option>\n              <Option value=\"Inactive\">Inactive</Option>\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n    \n \n   \n  \n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default DriversForm;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Tooltip, Tag, Col, message, Input, Tabs, Button, Table, Modal, Upload, Checkbox, Dropdown, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, DeleteOutlined, InfoCircleOutlined, ToTopOutlined, DownOutlined } from '@ant-design/icons';\nimport PassengersForm from './passengersForm'; // Import the PassengersForm component\nimport useFetchWithToken from '../../services/api';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { useHistory } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst Passengers = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['firstName', 'lastName', 'phoneNumber', 'email', 'status', 'actions']; // Default selected columns\n  const [passengersData, setPassengersData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRowDetails, setSelectedRowDetails] = useState(null); // State to hold selected row details\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const handleAddPassenger = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false)\n    } catch (error) {\n      // Handle upload error\n      console.log(error)\n      message.error(`${file.name} upload failed.`);\n      setUploading(false)\n    }\n  };\n  const renderWithTooltip = (text, maxLength = 20) => {\n    const truncatedText = text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    return (\n      <Tooltip title={text}>\n        <span style={{\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          display: 'inline-block',\n          maxWidth: '100%',\n        }}>\n          {truncatedText}\n        </span>\n      </Tooltip>\n    );\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true)\n      const response = await axios.get(\"http://194.164.72.21:5001/passengers\");\n      setPassengersData(response.data);\n      setFilteredData(response.data);\n      setLoading(false)\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = passengersData.filter(passenger =>\n      Object.keys(passenger).some(key =>\n        String(passenger[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const passengersColumns = [\n    { title: 'First Name', dataIndex: 'firstName', key: 'firstName' , width: '20%'},\n    { title: 'Last Name', dataIndex: 'lastName', key: 'lastName' , width: '20%'},\n    { title: 'Phone Number', dataIndex: 'phoneNumber', key: 'phoneNumber', width: '20%' },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '10%',\n      render: status => {\n        let color = '';\n        switch (status) {\n          case 'Active':\n            color = 'darkgreen';\n            break;\n          case 'Pending':\n            color = 'darkorange';\n            break;\n          case 'Inactive':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray';\n        }\n        return (\n          <Tooltip title={status.toUpperCase()}>\n            <Tag color={color}>{renderWithTooltip(status.toUpperCase(), 10)}</Tag>\n          </Tooltip>\n        );\n      },\n    },    {\n      title: 'Actions',\n      width: '20%',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditPassenger(record)} style={{ marginRight: 8 }}>Edit</Button>\n          <Button type=\"link\"><NavLink to={`/passengerDetails/${record.id}`} style={{ color: 'green' }}><InfoCircleOutlined /> &nbsp;Details</NavLink></Button>\n        </>\n      ),\n    },\n  ];\n\n  const handleEditPassenger = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={passengersColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const defaultDisplayedColumns = initialColumns.map(column => column.key).slice(0, 7); // Select first two columns by default\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    const handleColumnChange = (selectedColumns) => {\n      setDisplayedColumns(selectedColumns);\n    };\n\n    const filteredColumns = initialColumns.filter(column => displayedColumns.includes(column.key));\n\n    return (\n      <>\n        {/* <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={defaultDisplayedColumns}\n              onChange={handleColumnChange}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown> */}\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            // scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n            {/* <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddPassenger}>\n              Add Passenger\n            </Button> */}\n          </Col>\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Passengers\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n         \n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable onRow={(record) => ({\n                // onClick: () => handleRowClick(record),\n              })} columns={passengersColumns} data={filteredData} pagination={{ pageSize: 5 }} />\n            )}\n          </Col>\n          <Col xs={24} xl={12}>\n            {selectedRow && (\n              <div className=\"tabled\">\n                <Tabs defaultActiveKey=\"1\">\n                  <TabPane tab=\"Details\" key=\"1\">\n                    <Card\n                      title={`Details of ${selectedRow.firstName} ${selectedRow.lastName}`}\n                      style={{ height: \"500px\", overflow: \"auto\" }}\n                      headStyle={{ position: 'sticky', top: '0', zIndex: '1', background: '#fff' }}\n                      extra={\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                          <Button type=\"link\" onClick={handleCloseDetails} style={{ color: 'red' }}>Close</Button>\n                          <Button type=\"link\" onClick={() => history.push(`/passengerDetails/${selectedRow.id}`)} style={{ color: 'green' }}>Details</Button>\n                        </div>\n                      }\n                    >\n                      <p>Phone Number: {selectedRow.phoneNumber}</p>\n                      <p>Email: {selectedRow.email}</p>\n                      <p>Status: {selectedRow.status}</p>\n                      <p>Address: {selectedRow.address}</p>\n                      <p>Rating: {selectedRow.rating}</p>\n                    </Card>\n                  </TabPane>\n                  <TabPane tab=\"File Preview\" key=\"2\">\n                    <Card bordered={false} className=\"header-solid h-full\">\n                      <h4>Passenger Preview:</h4>\n                      <div style={{ width: \"100%\", height: \"400px\" }}>\n                        <DocViewer\n                          pluginRenderers={DocViewerRenderers}\n                          documents={selectedRow.documents ? `http://194.164.72.21:5001${selectedRow.documents}` : []}\n                          config={{\n                            header: {\n                              disableHeader: false,\n                              disableFileName: true,\n                              retainURLParams: false\n                            }\n                          }}\n                          style={{ height: 400 }}\n                        />\n                      </div>\n                    </Card>\n                  </TabPane>\n                </Tabs>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Card>\n  \n      <Modal\n        title={formData.id ? 'Edit Passenger' : 'Add Passenger'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <PassengersForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Passengers;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Button, Table, Spin, Tag, Rate, Tooltip } from 'antd';\nimport { SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst { Search } = Input;\n\nconst Trips = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // State for selected columns\n  const defaultSelectedColumns = ['id', 'from', 'to', 'pickUpTime', 'distance', 'price', 'status', 'driverName', 'driverPhone', 'actions']; // Default selected columns\n  const [tripsData, setTripsData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [submitted]);\n\n  const handleAddTrip = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      message.error(`${file.name} upload failed.`);\n      setUploading(false);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/trips\");\n      setTripsData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = tripsData.filter(trip =>\n      Object.keys(trip).some(key =>\n        String(trip[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const renderWithTooltip = (text, maxLength = 10) => {\n    const truncatedText = text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    return (\n      <Tooltip title={text}>\n        <span>{truncatedText}</span>\n      </Tooltip>\n    );\n  };\n\n  const tripsColumns = [\n    {\n      title: 'Trip ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: '10%'\n    },\n    {\n      title: 'Driver Name',\n      dataIndex: ['driver', 'firstName'],\n      key: 'driverName',\n      width: '10%',\n      render: (text, record) => renderWithTooltip(`${record.driver.firstName} ${record.driver.lastName}`, 15),\n    },\n    {\n      title: 'Passenger Name',\n      dataIndex: ['passenger', 'firstName'],\n      key: 'passengerName',\n      width: '10%',\n      render: (text, record) => renderWithTooltip(`${record.passenger.firstName} ${record.passenger.lastName}`, 15),\n    },\n    {\n      title: 'Start Location',\n      dataIndex: 'from',\n      key: 'from',\n      width: '10%',\n      render: text => renderWithTooltip(text, 20),\n    },\n    {\n      title: 'End Location',\n      dataIndex: 'to',\n      key: 'to',\n      width: '10%',\n      render: text => renderWithTooltip(text, 20),\n    },\n    {\n      title: 'Date',\n      dataIndex: 'pickUpTime',\n      key: 'pickUpTime',\n      width: '10%',\n      render: text => renderWithTooltip(new Date(text).toLocaleString(), 20),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '10%',\n      render: status => {\n        let color = '';\n        switch (status) {\n          case 'Ended':\n            color = 'darkgreen';\n            break;\n          case 'Active':\n            color = 'darkorange';\n            break;\n          case 'inactive':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray';\n        }\n        return (\n          <Tooltip title={status.toUpperCase()}>\n            <Tag color={color}>{renderWithTooltip(status.toUpperCase(), 7)}</Tag>\n          </Tooltip>\n        );\n      },\n    },\n\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: '10%',\n      render: (_, record) => (\n        <Button type=\"link\">\n          <NavLink to={`/tripDetails/${record.id}`} style={{ color: 'green' }}>\n            <InfoCircleOutlined /> &nbsp;Details\n          </NavLink>\n        </Button>\n      ),\n    },\n  ];\n\n  const DynamicTable = ({ columns: initialColumns, data }) => {\n    const defaultDisplayedColumns = initialColumns.map(column => column.key);\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    useEffect(() => {\n      setDisplayedColumns(defaultDisplayedColumns);\n    }, [defaultDisplayedColumns]);\n\n    const filteredColumns = initialColumns.filter(column => displayedColumns.includes(column.key));\n\n    return (\n      <div style={{ overflowX: 'auto' }}>\n        <Table\n          columns={filteredColumns}\n          dataSource={data}\n          pagination={{ pageSize: 5 }}\n          className=\"ant-border-space\"\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          <Col span={12}>\n          </Col>\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Trips\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable columns={tripsColumns} data={filteredData} />\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default Trips;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Upload, Select, Row, Col, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst CompanyForm = ({ formData, setFormData, closeModal, refetchData }) => {\n  const [form] = Form.useForm();\n  const [fileList, setFileList] = useState([]);\n  const [imageFileList, setImageFileList] = useState([]);\n  const [licenceFileList, setLicenceFileList] = useState([]);\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n  }, [formData, form]);\n\n  const handleFileChange = ({ fileList }) => setFileList(fileList);\n  const handleImageFileChange = ({ fileList }) => setImageFileList(fileList);\n  const handleLicenceFileChange = ({ fileList }) => setLicenceFileList(fileList);\n\n  const uploadFiles = async (url, companyId) => {\n    const formData = new FormData();\n\n    fileList.forEach(({ originFileObj }) => {\n      formData.append(\"documents\", originFileObj);\n    });\n\n    imageFileList.forEach(({ originFileObj }) => {\n      formData.append(\"companyImage\", originFileObj);\n    });\n\n    licenceFileList.forEach(({ originFileObj }) => {\n      formData.append(\"companyLicence\", originFileObj);\n    });\n\n    await axios.put(url, formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n  };\n\n  const onFinish = async (values) => {\n    try {\n      let response;\n\n      if (formData.id) {\n        // Update company\n        response = await axios.put(`http://194.164.72.21:5001/companies/${formData.id}`, values);\n      } else {\n        // Add new company\n        response = await axios.post('http://194.164.72.21:5001/companies', values);\n      }\n\n      if (response?.data?.id) {\n        await uploadFiles(`http://194.164.72.21:5001/companies/updateDocuments/${response.data.id}`, response.data.id);\n\n        message.success('Company and documents uploaded successfully');\n      } else {\n        message.success('Company saved successfully');\n      }\n\n      setFormData({});\n      closeModal();\n      refetchData(); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to save company');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Company Name\" name=\"companyName\" rules={[{ required: true, message: 'Please enter a company name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Contact Person\" name=\"contactPerson\" rules={[{ required: true, message: 'Please enter a contact person' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Phone Number\" name=\"phoneNumber\" rules={[{ required: true, message: 'Please enter a phone number' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Address\" name=\"address\" rules={[{ required: true, message: 'Please enter an address' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Balance\" name=\"balance\" rules={[{ required: true, message: 'Please enter a balance' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Credit Limit\" name=\"creditLimit\" rules={[{ required: true, message: 'Please enter a credit limit' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Start Date\" name=\"startDate\" rules={[{ required: true, message: 'Please enter a start date' }]}>\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"End Date\" name=\"endDate\" rules={[{ required: true, message: 'Please enter an end date' }]}>\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Status\" name=\"status\">\n            <Select>\n              <Option value=\"Pending\">Pending</Option>\n              <Option value=\"Active\">Active</Option>\n              <Option value=\"Inactive\">Inactive</Option>\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={8}>\n          <Form.Item label=\"Documents\" rules={[{ required: false, message: 'Please enter a phone number' }]} name=\"documents\">\n            <Upload\n              beforeUpload={() => false}\n              fileList={fileList}\n              onChange={handleFileChange}\n              maxCount={3}\n            >\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Company Image\" rules={[{ required: false, message: 'Please enter a phone number' }]} name=\"companyImage\">\n            <Upload\n              beforeUpload={() => false}\n              fileList={imageFileList}\n              onChange={handleImageFileChange}\n              maxCount={1}\n            >\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Company Licence\" rules={[{ required: false, message: 'Please enter a phone number' }]} name=\"companyLicence\">\n            <Upload\n              beforeUpload={() => false}\n              fileList={licenceFileList}\n              onChange={handleLicenceFileChange}\n              maxCount={1}\n            >\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default CompanyForm;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Tabs, Button, Table, Modal, Upload, Checkbox, Dropdown, Tooltip, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, DeleteOutlined, InfoCircleOutlined, ToTopOutlined, DownOutlined } from '@ant-design/icons';\nimport CompanyForm from './companyForm'; // Import the CompanyForm component\nimport useFetchWithToken from '../../services/api';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst Companies = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['companyName', 'contactPerson', 'phoneNumber', 'balance', 'creditLimit', 'status', 'actions']; // Default selected columns\n  const [companiesData, setCompaniesData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRowDetails, setSelectedRowDetails] = useState(null); // State to hold selected row details\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const handleAddCompany = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n    setDetailsVisible(false);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false);\n    } catch (error) {\n      // Handle upload error\n      console.log(error);\n      message.error(`${file.name} upload failed.`);\n      setUploading(false);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/companies\");\n      setCompaniesData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = companiesData.filter(company =>\n      Object.keys(company).some(key =>\n        String(company[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const companiesColumns = [\n    { title: 'Company Name', dataIndex: 'companyName', key: 'companyName' },\n    { title: 'Contact Person', dataIndex: 'contactPerson', key: 'contactPerson' },\n    { title: 'Phone Number', dataIndex: 'phoneNumber', key: 'phoneNumber' },\n    { title: 'Balance', dataIndex: 'balance', key: 'balance' },\n    { title: 'Credit Limit', dataIndex: 'creditLimit', key: 'creditLimit' },\n    { title: 'Status', dataIndex: 'status', key: 'status' },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditCompany(record)} style={{ marginRight: 8 }}>Edit</Button>\n          <Button type=\"link\"><NavLink to={`/companyDetails/${record.id}`} style={{ color: 'green' }}><InfoCircleOutlined /> &nbsp;Details</NavLink></Button>\n        </>\n      ),\n    },\n  ];\n\n  const handleEditCompany = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={companiesColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const defaultDisplayedColumns = initialColumns.map(column => column.key).slice(0, 7); // Select first seven columns by default\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    const handleColumnChange = (selectedColumns) => {\n      setDisplayedColumns(selectedColumns);\n    };\n\n    const filteredColumns = initialColumns.filter(column => displayedColumns.includes(column.key));\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={defaultDisplayedColumns}\n              onChange={handleColumnChange}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown>\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            // scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          <Col span={12} style={{ textAlign: 'left' }}>\n            <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddCompany}>\n              Add Company\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Companies\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable onRow={(record) => ({\n                onClick: () => handleRowClick(record),\n              })} columns={companiesColumns} data={filteredData} pagination={{ pageSize: 5 }} />\n            )}\n          </Col>\n          <Col xs={24} xl={12}>\n            {selectedRow && (\n              <div className=\"tabled\">\n                <Tabs defaultActiveKey=\"1\">\n                  <TabPane tab=\"Details\" key=\"1\">\n                    <Card\n                      title={`Details of ${selectedRow.companyName}`}\n                      style={{ height: \"500px\", overflow: \"auto\" }}\n                      headStyle={{ position: 'sticky', top: '0', zIndex: '1', background: '#fff' }}\n                      extra={\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                          <Button type=\"link\" onClick={handleCloseDetails} style={{ color: 'red' }}>Close</Button>\n                          <Button type=\"link\" onClick={() => history.push(`/companyDetails/${selectedRow.id}`)} style={{ color: 'green' }}>Details</Button>\n                        </div>\n                      }\n                    >\n                      <p>Contact Person: {selectedRow.contactPerson}</p>\n                      <p>Phone Number: {selectedRow.phoneNumber}</p>\n                      <p>Balance: {selectedRow.balance}</p>\n                      <p>Credit Limit: {selectedRow.creditLimit}</p>\n                      <p>Status: {selectedRow.status}</p>\n                      <p>Address: {selectedRow.address}</p>\n                      <p>Start Date: {new Date(selectedRow.startDate).toLocaleDateString()}</p>\n                      <p>End Date: {new Date(selectedRow.endDate).toLocaleDateString()}</p>\n                    </Card>\n                  </TabPane>\n                 \n                </Tabs>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Card>\n  \n      <Modal\n        title={formData.id ? 'Edit Company' : 'Add Company'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <CompanyForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Companies;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Button, Table, Spin,Tag, Tooltip } from 'antd';\nimport { SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst { Search } = Input;\n\nconst Reservations = () => {\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // State for selected columns\n  const defaultSelectedColumns = ['id', 'from', 'to', 'pickUpTime', 'distance', 'price', 'status', 'driverName', 'driverPhone', 'actions']; // Default selected columns\n  const [tripsData, setTripsData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [submitted]);\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n    setDetailsVisible(false);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      message.error(`${file.name} upload failed.`);\n      setUploading(false);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/reservations\");\n      setTripsData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = tripsData.filter(trip =>\n      Object.keys(trip).some(key =>\n        String(trip[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const renderWithTooltip = (text, maxLength = 20) => {\n    const truncatedText = text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    return (\n      <Tooltip title={text}>\n        <span style={{\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          display: 'inline-block',\n          maxWidth: '100%',\n        }}>\n          {truncatedText}\n        </span>\n      </Tooltip>\n    );\n  };\n  \n\n  const tripsColumns = [\n    {\n      title: 'Trip ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: '5%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n    {\n      title: 'Driver Name',\n      dataIndex: ['driver', 'firstName'],\n      key: 'driverName',\n      width: '10%',\n      render: (text, record) => renderWithTooltip(record.driver ? `${record.driver.firstName} ${record.driver.lastName}` : 'N/A', 10), // Limit to 15 characters\n    },\n    {\n      title: 'Passenger Name',\n      dataIndex: 'passengerId',\n      key: 'passengerId',\n      width: '10%',\n      render: (text, record) => renderWithTooltip(record.passenger ? `${record.passenger.firstName} ${record.passenger.lastName}` : 'N/A', 10), // Limit to 15 characters\n    },\n    {\n      title: 'Start Location',\n      dataIndex: 'from',\n      key: 'from',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 20 characters\n    },\n    {\n      title: 'End Location',\n      dataIndex: 'to',\n      key: 'to',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 20 characters\n    },\n    {\n      title: 'Date',\n      dataIndex: 'pickUpDate',\n      key: 'pickUpDate',\n      width: '10%',\n      render: text => renderWithTooltip(text ? new Date(text).toLocaleString() : 'N/A', 15), // Limit to 19 characters\n    },\n    {\n      title: 'Distance',\n      dataIndex: 'distance',\n      key: 'distance',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '10%',\n      render: status => {\n        let color = '';\n        switch (status) {\n          case 'Started':\n            color = 'darkgreen';\n            break;\n          case 'Accepted':\n            color = 'darkorange';\n            break;\n          case 'Pending':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray';\n        }\n        return (\n          <Tooltip title={status.toUpperCase()}>\n            <Tag color={color}>{renderWithTooltip(status.toUpperCase(), 10)}</Tag>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: '10%',\n      render: (_, record) => (\n        <Button type=\"link\">\n          <NavLink to={`/reservationDetails/${record.id}`} style={{ color: 'green' }}>\n            <InfoCircleOutlined /> &nbsp;Details\n          </NavLink>\n        </Button>\n      ),\n    },\n  ];\n  \n\n  const DynamicTable = ({ columns: initialColumns, data }) => {\n    const defaultDisplayedColumns = initialColumns.map(column => column.key);\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    useEffect(() => {\n      setDisplayedColumns(defaultDisplayedColumns);\n    }, [defaultDisplayedColumns]);\n\n    const filteredColumns = initialColumns.filter(column => displayedColumns.includes(column.key));\n\n    return (\n      <div style={{ overflowX: 'auto' }}>\n        <Table\n          columns={filteredColumns}\n          dataSource={data}\n          pagination={{ pageSize: 5 }}\n          className=\"ant-border-space\"\n          // scroll={{ x: 2000, y: 400 }}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          <Col span={12}>\n          </Col>\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Trips\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable columns={tripsColumns} data={filteredData} />\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default Reservations;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Select, Row, Col, message } from 'antd';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst VehiclesForm = ({ formData, setFormData, closeModal, setSubmitted }) => {\n  const [form] = Form.useForm();\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n\n  useEffect(() => {\n    fetchVehicleTypes();\n    fetchDrivers();\n  }, []);\n\n  useEffect(() => {\n    if (formData) {\n      form.setFieldsValue({\n        ...formData,\n        driverId: formData.driverId, // Set the driver ID correctly\n      });\n    }\n  }, [formData, form]);\n\n  const fetchVehicleTypes = async () => {\n    try {\n      const response = await axios.get(\"http://194.164.72.21:5001/vehicleTypes\");\n      setVehicleTypes(response.data);\n    } catch (error) {\n      message.error(\"Unable to load vehicle types\");\n    }\n  };\n\n  const fetchDrivers = async () => {\n    try {\n      const response = await axios.get(\"http://194.164.72.21:5001/drivers\");\n      setDrivers(response.data);\n\n      // Map driverId to the correct driver name when editing a vehicle\n      if (formData && formData.driverId) {\n        const selectedDriver = response.data.find(driver => driver.id === formData.driverId);\n        if (selectedDriver) {\n          form.setFieldsValue({\n            ...formData,\n            driverId: selectedDriver.id, // This will match the ID in the dropdown\n          });\n        }\n      }\n    } catch (error) {\n      message.error(\"Unable to load drivers\");\n    }\n  };\n\n  const onFinish = async (values) => {\n    const submitData = new FormData();\n\n    Object.keys(values).forEach(key => {\n      submitData.append(key, values[key]);\n    });\n\n    try {\n      let response;\n      if (formData.id) {\n        // Update vehicle\n        response = await axios.put(`http://194.164.72.21:5001/vehicles/${formData.id}`, submitData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // Add new vehicle\n        response = await axios.post('http://194.164.72.21:5001/vehicles', submitData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      }\n\n      if (response.data.id) {\n        message.success('Vehicle and documents uploaded successfully');\n      } else {\n        message.success('Vehicle saved successfully');\n      }\n\n      setFormData({});\n      closeModal();\n      setSubmitted(true); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to save vehicle');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Plate Number\" name=\"plateNumber\" rules={[{ required: true, message: 'Please enter a plate number' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Model\" name=\"model\" rules={[{ required: true, message: 'Please enter a model' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Color\" name=\"color\" rules={[{ required: true, message: 'Please enter a color' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Manufactured Year\" rules={[{ required: true, message: 'Please enter a year' }]} name=\"manufacturedYear\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Vehicle Type\" name=\"vehicleTypeId\" rules={[{ required: true, message: 'Please select a vehicle type' }]}>\n            <Select>\n              {vehicleTypes.map(type => (\n                <Option key={type.id} value={type.id}>{type.typeName}</Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Driver\" name=\"driverId\" rules={[{ required: true, message: 'Please select a driver' }]}>\n            <Select>\n              {drivers.map(driver => (\n                <Option key={driver.id} value={driver.id}>{`${driver.firstName} ${driver.lastName}`}</Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Status\" name=\"status\">\n            <Select>\n              <Option value=\"Pending\">Pending</Option>\n              <Option value=\"Active\">Active</Option>\n              <Option value=\"Inactive\">Inactive</Option>\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n   \n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default VehiclesForm;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Tabs, Button, Table, Modal, Dropdown, Checkbox, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, InfoCircleOutlined, DownOutlined } from '@ant-design/icons';\nimport VehiclesForm from './vehiclesForm'; // Import the VehiclesForm component\nimport axios from 'axios';\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { useHistory, NavLink } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst Vehicles = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['plateNumber', 'model', 'color', 'driver','vehicleType', 'actions']; // Default selected columns\n  const [vehiclesData, setVehiclesData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const handleAddVehicle = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n    setDetailsVisible(false);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false)\n    } catch (error) {\n      // Handle upload error\n      console.log(error)\n      message.error(`${file.name} upload failed.`);\n      setUploading(false)\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/vehicles\");\n      setVehiclesData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = vehiclesData.filter(vehicle =>\n      Object.keys(vehicle).some(key =>\n        String(vehicle[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const vehiclesColumns = [\n    { title: 'Plate Number', dataIndex: 'plateNumber', key: 'plateNumber',      width:'20%',\n  },\n    { title: 'Model', dataIndex: 'model', key: 'model',       width:'20%',\n  },\n    { title: 'Color', dataIndex: 'color', key: 'color',       width:'20%',\n  },\n    { title: 'Driver', dataIndex: ['driver', 'firstName'],       width:'20%',\n    key: 'driver', render: (text, record) => record.driver ? `${record.driver.firstName} ${record.driver.lastName}` : 'N/A' },\n\n    { title: 'Status', dataIndex: 'status', key: 'status',      width:'10%',\n  },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditVehicle(record)} style={{ marginRight: 8 }}>Edit</Button>\n          <Button type=\"link\"><NavLink to={`/vehicleDetails/${record.id}`} style={{ color: 'green' }}><InfoCircleOutlined /> &nbsp;Details</NavLink></Button>\n        </>\n      ),\n    },\n  ];\n\n  const handleEditVehicle = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={vehiclesColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const filteredColumns = initialColumns.filter(column => selectedColumns.includes(column.key));\n\n    return (\n      <>\n        {/* <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={selectedColumns}\n              onChange={setSelectedColumns}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown> */}\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            // scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n            rowKey=\"id\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          <Col span={12} style={{ textAlign: 'left' }}>\n            <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddVehicle}>\n              Add Vehicle\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Vehicles\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable onRow={(record) => ({\n                // onClick: () => handleRowClick(record),\n              })} columns={vehiclesColumns} data={filteredData} />\n            )}\n          </Col>\n          <Col xs={24} xl={12}>\n            {selectedRow && (\n              <div className=\"tabled\">\n                <Tabs defaultActiveKey=\"1\">\n                  <TabPane tab=\"Details\" key=\"1\">\n                    <Card\n                      title={`Details of ${selectedRow.plateNumber}`}\n                      style={{ height: \"500px\", overflow: \"auto\" }}\n                      headStyle={{ position: 'sticky', top: '0', zIndex: '1', background: '#fff' }}\n                      extra={\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                          <Button type=\"link\" onClick={handleCloseDetails} style={{ color: 'red' }}>Close</Button>\n                          <Button type=\"link\" onClick={() => history.push(`/vehicleDetails/${selectedRow.id}`)} style={{ color: 'green' }}>Details</Button>\n                        </div>\n                      }\n                    >\n                      <p>Plate Number: {selectedRow.plateNumber}</p>\n                      <p>Model: {selectedRow.model}</p>\n                      <p>Color: {selectedRow.color}</p>\n                      <p>Driver ID: {selectedRow.driverId}</p>\n                      <p>Status: {selectedRow.status}</p>\n                      {selectedRow.vehicleType && (\n                        <>\n                          <p>Vehicle Type: {selectedRow.vehicleType.typeName}</p>\n                          <p>Price Per KM: {selectedRow.vehicleType.pricePerKM}</p>\n                          <p>Surge Price Per KM: {selectedRow.vehicleType.surgePricePerKM}</p>\n                        </>\n                      )}\n                      {selectedRow.driver && (\n                        <>\n                          <p>Driver Name: {selectedRow.driver.firstName} {selectedRow.driver.lastName}</p>\n                          <p>Phone Number: {selectedRow.driver.phoneNumber}</p>\n                          <p>Email: {selectedRow.driver.email}</p>\n                          <p>Address: {selectedRow.driver.address}</p>\n                          <p>Status: {selectedRow.driver.status}</p>\n                        </>\n                      )}\n                    </Card>\n                  </TabPane>\n                  <TabPane tab=\"File Preview\" key=\"2\">\n                    <Card bordered={false} className=\"header-solid h-full\">\n                      <h4>Vehicle Preview:</h4>\n                      <div style={{ width: \"100%\", height: \"400px\" }}>\n                        <DocViewer\n                          pluginRenderers={DocViewerRenderers}\n                          documents={selectedRow.documents ? [`http://194.164.72.21:5001${selectedRow.documents}`] : []}\n                          config={{\n                            header: {\n                              disableHeader: false,\n                              disableFileName: true,\n                              retainURLParams: false\n                            }\n                          }}\n                          style={{ height: 400 }}\n                        />\n                      </div>\n                    </Card>\n                  </TabPane>\n                </Tabs>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Card>\n\n      <Modal\n        title={formData.id ? 'Edit Vehicle' : 'Add Vehicle'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <VehiclesForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Vehicles;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Upload, Select, Row, Col, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst VehicleTypesForm = ({ formData, setFormData, closeModal, setSubmitted }) => {\n  const [form] = Form.useForm();\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n  }, [formData, form]);\n\n  useEffect(() => {\n    fetchVehicleTypes();\n  }, []);\n\n  const fetchVehicleTypes = async () => {\n    try {\n      const response = await axios.get(\"http://194.164.72.21:5001/vehicleTypes\");\n      setVehicleTypes(response.data);\n    } catch (error) {\n      message.error(\"Unable to load vehicle types\");\n    }\n  };\n\n\n\n  const onFinish = async (values) => {\n    const formData = new FormData();\n\n    Object.keys(values).forEach(key => {\n      formData.append(key, values[key]);\n    });\n\n \n\n  \n\n    try {\n      let response;\n      if (formData.id) {\n        // Update vehicle\n        response = await axios.put(`http://194.164.72.21:5001/vehicleTypes/${formData.id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // Add new vehicle\n        response = await axios.post('http://194.164.72.21:5001/vehicleTypes', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      }\n\n      if (response.data.id) {\n        message.success('Vehicle and documents uploaded successfully');\n      } else {\n        message.success('Vehicle saved successfully');\n      }\n\n      setFormData({});\n      closeModal();\n      setSubmitted(true); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to save vehicleTypes');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Type Name\" name=\"typeName\" rules={[{ required: true, message: 'Please enter type name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Price Per KM\" name=\"pricePerKM\" rules={[{ required: true, message: 'Please enter pricePerKM' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Surge Price Per KM\" name=\"surgePricePerKM\" rules={[{ required: true, message: 'Please enter SurgePricePerKM' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n       \n      </Row>\n   \n \n \n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default VehicleTypesForm;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Tabs, Button, Table, Modal, Dropdown, Checkbox, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, InfoCircleOutlined, DownOutlined } from '@ant-design/icons';\nimport VehicleTypesForm from './vehicleTypesForm'; // Import the VehiclesForm component\nimport axios from 'axios';\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { useHistory, NavLink } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst VehicleTypes = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['typeName', 'surgePricePerKM', 'pricePerKM','actions']; // Default selected columns\n  const [vehiclesData, setVehiclesData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const handleAddVehicle = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n    setDetailsVisible(false);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false)\n    } catch (error) {\n      // Handle upload error\n      console.log(error)\n      message.error(`${file.name} upload failed.`);\n      setUploading(false)\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/vehicleTypes\");\n      setVehiclesData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = vehiclesData.filter(vehicle =>\n      Object.keys(vehicle).some(key =>\n        String(vehicle[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const vehiclesColumns = [\n    { title: 'Name', dataIndex: 'typeName', key: 'typeName' },\n    { title: 'Price Per KM', dataIndex: 'pricePerKM', key: 'pricePerKM' },\n    { title: 'Surge Price Per KM', dataIndex: 'surgePricePerKM', key: 'surgePricePerKM' },\n\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditVehicle(record)} style={{ marginRight: 8 }}>Edit</Button>\n        </>\n      ),\n    },\n  ];\n\n  const handleEditVehicle = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={vehiclesColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const filteredColumns = initialColumns.filter(column => selectedColumns.includes(column.key));\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={selectedColumns}\n              onChange={setSelectedColumns}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown>\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            // scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n            rowKey=\"id\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          <Col span={12} style={{ textAlign: 'left' }}>\n            <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddVehicle}>\n              Add Vehicle Type\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Vehicles\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable onRow={(record) => ({\n                onClick: () => handleRowClick(record),\n              })} columns={vehiclesColumns} data={filteredData} />\n            )}\n          </Col>\n         \n        </Row>\n      </Card>\n\n      <Modal\n        title={formData.id ? 'Edit Vehicle' : 'Add Vehicle'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <VehicleTypesForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default VehicleTypes;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Upload, Select, Row, Col, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst InitialPricesForm = ({ formData, setFormData, closeModal, setSubmitted }) => {\n  const [form] = Form.useForm();\n  const [initialPrices, setVehicleTypes] = useState([]);\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n  }, [formData, form]);\n\n  useEffect(() => {\n    fetchVehicleTypes();\n  }, []);\n\n  const fetchVehicleTypes = async () => {\n    try {\n      const response = await axios.get(\"http://194.164.72.21:5001/initialPrices\");\n      setVehicleTypes(response.data);\n    } catch (error) {\n      message.error(\"Unable to load vehicle types\");\n    }\n  };\n\n\n\n  const onFinish = async (values) => {\n    const formData = new FormData();\n\n    Object.keys(values).forEach(key => {\n      formData.append(key, values[key]);\n    });\n\n \n\n  \n\n    try {\n      let response;\n      if (formData.id) {\n        // Update vehicle\n        response = await axios.put(`http://194.164.72.21:5001/initialPrices/${formData.id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // Add new vehicle\n        response = await axios.post('http://194.164.72.21:5001/initialPrices', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      }\n\n      if (response.data.id) {\n        message.success('Vehicle and documents uploaded successfully');\n      } else {\n        message.success('Vehicle saved successfully');\n      }\n\n      setFormData({});\n      closeModal();\n      setSubmitted(true); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to save initialPrices');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please enter type name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Amount\" name=\"amount\" rules={[{ required: true, message: 'Please enter amount' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Status\" name=\"status\" rules={[{ required: true, message: 'Please enter Status' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        \n      </Row>\n \n   \n \n \n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default InitialPricesForm;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Tabs, Button, Table, Modal, Dropdown, Checkbox, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, InfoCircleOutlined, DownOutlined } from '@ant-design/icons';\nimport InitialPricesForm from './initialPricesForm'; // Import the VehiclesForm component\nimport axios from 'axios';\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { useHistory, NavLink } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst InitialPrices = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['name', 'amount', 'status','actions']; // Default selected columns\n  const [vehiclesData, setVehiclesData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const handleAddVehicle = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n    setDetailsVisible(false);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false)\n    } catch (error) {\n      // Handle upload error\n      console.log(error)\n      message.error(`${file.name} upload failed.`);\n      setUploading(false)\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/initialPrices\");\n      setVehiclesData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = vehiclesData.filter(vehicle =>\n      Object.keys(vehicle).some(key =>\n        String(vehicle[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const vehiclesColumns = [\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    { title: 'amount', dataIndex: 'amount', key: 'amount' },\n    { title: 'Status', dataIndex: 'status', key: 'status' },\n\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditVehicle(record)} style={{ marginRight: 8 }}>Edit</Button>\n        </>\n      ),\n    },\n  ];\n\n  const handleEditVehicle = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={vehiclesColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const filteredColumns = initialColumns.filter(column => selectedColumns.includes(column.key));\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={selectedColumns}\n              onChange={setSelectedColumns}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown>\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            // scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n            rowKey=\"id\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          {/* <Col span={12} style={{ textAlign: 'left' }}>\n            <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddVehicle}>\n              Add Vehicle Type\n            </Button>\n          </Col> */}\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Vehicles\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable onRow={(record) => ({\n                onClick: () => handleRowClick(record),\n              })} columns={vehiclesColumns} data={filteredData} />\n            )}\n          </Col>\n         \n        </Row>\n      </Card>\n\n      <Modal\n        title={formData.id ? 'Edit Vehicle' : 'Add Vehicle'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <InitialPricesForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default InitialPrices;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Button, Table, Spin } from 'antd';\nimport { SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst { Search } = Input;\n\nconst Transactions = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // State for selected columns\n  const defaultSelectedColumns = ['id', 'from', 'to', 'pickUpTime', 'distance', 'price', 'status', 'driverName', 'driverPhone', 'actions']; // Default selected columns\n  const [tripsData, setTripsData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [submitted]);\n\n  const handleAddTrip = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      message.error(`${file.name} upload failed.`);\n      setUploading(false);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/trips\");\n      setTripsData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = tripsData.filter(trip =>\n      Object.keys(trip).some(key =>\n        String(trip[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const tripsColumns = [\n    {\n      title: 'Trip ID',\n      dataIndex: 'id',\n      key: 'id',\n      width:'10%',\n\n    },\n    {\n      title: 'Driver Name',\n      dataIndex: ['driver', 'firstName'],\n      key: 'driverName',\n      width:'10%',\n\n      render: (text, record) => `${record.driver.firstName} ${record.driver.lastName}`,\n    },\n    {\n      title: 'Passenger Name',\n      dataIndex: ['passenger', 'passengerName'],\n      key: 'driverName',\n      width:'10%',\n\n      render: (text, record) => `${record.passenger.firstName} ${record.passenger.lastName}`,\n    },\n    {\n        title: 'Price',\n        dataIndex: 'price',\n        key: 'price',\n        width:'10%',\n\n      },\n  \n\n    {\n      title: 'Date',\n      dataIndex: 'pickUpTime',\n      key: 'pickUpTime',\n      width:'10%',\n\n      render: (text) => new Date(text).toLocaleString(),\n    },\n   \n    {\n      title: 'Payment Method',\n      dataIndex: 'paymentMethod',\n      width:'10%',\n\n      key: 'paymentMethod',\n      render: (text) => text || 'Cash',\n\n    },\n\n    {\n      title: 'Actions',\n      key: 'actions',\n      width:'10%',\n\n      render: (_, record) => (\n        <>\n          <Button type=\"link\">\n            <NavLink to={`/tripDetails/${record.id}`} style={{ color: 'green' }}>\n              <InfoCircleOutlined /> &nbsp;Details\n            </NavLink>\n          </Button>\n        </>\n      ),\n    },\n  ];\n\n  const DynamicTable = ({ columns: initialColumns, data }) => {\n    // Initialize displayed columns with all available columns\n    const defaultDisplayedColumns = initialColumns.map(column => column.key);\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    useEffect(() => {\n      setDisplayedColumns(defaultDisplayedColumns);\n    }, [defaultDisplayedColumns]);\n\n    const filteredColumns = initialColumns.filter(column => displayedColumns.includes(column.key));\n\n    return (\n      <div style={{ overflowX: 'auto' }}>\n        <Table\n          columns={filteredColumns}\n          dataSource={data}\n          pagination={{ pageSize: 5 }}\n          className=\"ant-border-space\"\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          <Col span={12}>\n          </Col>\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Trips\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={e => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable columns={tripsColumns} data={filteredData} />\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default Transactions;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button,Select, Row, Col, message } from 'antd';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst SearchRadiusesForm = ({ formData, setFormData, closeModal, setSubmitted }) => {\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n  }, [formData, form]);\n\n  const onFinish = async (values) => {\n    try {\n      // Prepare form data, including the existing ID for update\n      const updatedData = { ...formData, ...values };\n\n      // Use axios to make the PUT request with the existing ID\n      const response = await axios.put(`http://194.164.72.21:5001/searchRadius/${formData.id}`, updatedData, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      setFormData({});\n      closeModal();\n      setSubmitted(true); // Trigger refetch after successful form submission\n      message.success('Search Radius updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to save search radius');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please enter type name' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Distance\" name=\"distance\" rules={[{ required: true, message: 'Please enter distance' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Status\" name=\"status\" rules={[{ required: true, message: 'Please enter Status' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SearchRadiusesForm;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Tooltip, Tag, message, Input, Tabs, Button, Table, Modal, Dropdown, Checkbox, Spin } from 'antd';\nimport { PlusOutlined, SearchOutlined, EditOutlined, InfoCircleOutlined, DownOutlined } from '@ant-design/icons';\nimport SearchRadiusesForm from './searchRadiusesForm'; // Import the VehiclesForm component\nimport axios from 'axios';\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { useHistory, NavLink } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nconst SearchRadiuses = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]); // Add state for selected columns\n  const defaultSelectedColumns = ['name', 'distance', 'status','actions']; // Default selected columns\n  const [vehiclesData, setVehiclesData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n  }, []);\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component mounts\n  }, [submitted]);\n\n  const handleAddVehicle = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n    setDetailsVisible(false);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Handle successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false)\n    } catch (error) {\n      // Handle upload error\n      console.log(error)\n      message.error(`${file.name} upload failed.`);\n      setUploading(false)\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://194.164.72.21:5001/searchRadius\");\n      setVehiclesData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n      setLoading(false);\n    }\n  };\n  const renderWithTooltip = (text, maxLength = 20) => {\n    const truncatedText = text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    return (\n      <Tooltip title={text}>\n        <span style={{\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          display: 'inline-block',\n          maxWidth: '100%',\n        }}>\n          {truncatedText}\n        </span>\n      </Tooltip>\n    );\n  };\n  \n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = vehiclesData.filter(vehicle =>\n      Object.keys(vehicle).some(key =>\n        String(vehicle[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const vehiclesColumns = [\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    { title: 'distance', dataIndex: 'distance', key: 'distance' },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '10%',\n      render: status => {\n        let color = '';\n        switch (status) {\n          case 'Ended':\n            color = 'darkgreen';\n            break;\n          case 'Accepted':\n            color = 'darkorange';\n            break;\n          case 'Pending':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray';\n        }\n        return (\n          <Tooltip title={status.toUpperCase()}>\n            <Tag color={color}>{renderWithTooltip(status.toUpperCase(), 10)}</Tag>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEditVehicle(record)} style={{ marginRight: 8 }}>Edit</Button>\n        </>\n      ),\n    },\n  ];\n\n  const handleEditVehicle = (record) => {\n    setFormData(record);\n    setProjectModalVisible(true);\n  };\n\n  const ColumnSelector = () => (\n    <Checkbox.Group\n      options={vehiclesColumns.map(column => ({ label: column.title, value: column.key }))}\n      value={selectedColumns}\n      onChange={(selected) => setSelectedColumns(selected)}\n    />\n  );\n\n  const DynamicTable = ({ columns: initialColumns, data, onRow }) => {\n    const filteredColumns = initialColumns.filter(column => selectedColumns.includes(column.key));\n\n    return (\n      <>\n        {/* <Dropdown\n          overlay={\n            <ColumnSelector\n              columns={initialColumns.map((column) => ({\n                label: column.title,\n                value: column.key,\n              }))}\n              selectedColumns={selectedColumns}\n              onChange={setSelectedColumns}\n            />\n          }\n          trigger={[\"click\"]}\n        >\n          <Button>\n            Select Columns <DownOutlined />\n          </Button>\n        </Dropdown> */}\n        <div style={{ overflowX: 'auto' }}>\n          <Table\n            columns={filteredColumns}\n            dataSource={data}\n            pagination={{ pageSize: 5 }}\n            className=\"ant-border-space\"\n            // scroll={{ x: 1500, y: 400 }} // Adjust the scroll properties as needed\n            onRow={onRow} // Pass the onRow prop to the Table component\n            rowKey=\"id\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n \n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable onRow={(record) => ({\n                onClick: () => handleRowClick(record),\n              })} columns={vehiclesColumns} data={filteredData} />\n            )}\n          </Col>\n         \n        </Row>\n      </Card>\n\n      <Modal\n        title={formData.id ? 'Edit Search Radius' : 'Edit Search Radius'}\n        visible={irModalVisible}\n        onCancel={() => setProjectModalVisible(false)}\n        footer={null}\n        width={800} // Adjust the width here as needed\n      >\n        <SearchRadiusesForm formData={formData} setFormData={setFormData} closeModal={() => setProjectModalVisible(false)} setSubmitted={setSubmitted} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default SearchRadiuses;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Tooltip, Card,Tag, Rate, Upload, message, Descriptions, Button, Collapse, Spin, Table, Tabs, Avatar, Modal, Input } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { ToTopOutlined, UserOutlined,InfoCircleOutlined, SearchOutlined } from '@ant-design/icons';\nimport useFetchWithToken from '../../services/api'; // Import the useFetchWithToken hook\nimport { NavLink } from \"react-router-dom\";\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nfunction DriversDetail() {\n  const [collapsed, setCollapsed] = useState(false);\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const { id } = useParams();\n  const { data: driverData, loading: driverLoading, postFormData, putFormData } = useFetchWithToken(`drivers/${id}`); // Fetch driver details using useFetchWithToken hook\n  const { data: tripData, loading: tripsLoading } = useFetchWithToken(`trips/driver/${id}`); // Fetch driver trips using useFetchWithToken hook\n  const trips = tripData?.trips.map(item => ({ ...item.trip, passenger: item.passenger, driver: item.driver })) || [];\n  const driver = driverData?.driver;\n\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const beforeUpload = (file) => {\n    setFileList([file]);\n    return false; // Returning false prevents default upload behavior\n  };\n\n  const handleUpload = async (fieldName) => {\n    if (!fileList.length) {\n      message.warning(\"Please select a file to upload.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(fieldName, fileList[0]);\n\n    try {\n      await putFormData(formData, `drivers/updateDocuments/${id}`);\n      message.success(`${fieldName} uploaded successfully!`);\n      setFileList([]);\n    } catch (error) {\n      message.error(`Failed to upload ${fieldName}`);\n      setFileList([]);\n    }\n  };\n\n  const handlePreview = (src) => {\n    setPreviewImage(src);\n    setPreviewVisible(true);\n  };\n\n  const filteredTrips = trips.filter(trip => {\n    const lowerCaseQuery = searchQuery.toLowerCase();\n    return (\n      trip.from.toLowerCase().includes(lowerCaseQuery) ||\n      trip.to.toLowerCase().includes(lowerCaseQuery) ||\n      trip.status.toLowerCase().includes(lowerCaseQuery) ||\n      trip.passenger.firstName.toLowerCase().includes(lowerCaseQuery) ||\n      trip.passenger.lastName.toLowerCase().includes(lowerCaseQuery)\n    );\n  });\n  const renderWithTooltip = (text, maxLength = 20) => {\n    const truncatedText = text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    return (\n      <Tooltip title={text}>\n        <span style={{\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          display: 'inline-block',\n          maxWidth: '100%',\n        }}>\n          {truncatedText}\n        </span>\n      </Tooltip>\n    );\n  };\n  const tripsColumns = [\n    {\n      title: 'Trip ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: '5%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n  \n    {\n      title: 'Passenger Name',\n      dataIndex: 'passengerId',\n      key: 'passengerId',\n      width: '10%',\n      render: (text, record) => renderWithTooltip(record.passenger ? `${record.passenger.firstName} ${record.passenger.lastName}` : 'N/A', 15), // Limit to 15 characters\n    },\n    {\n      title: 'Start Location',\n      dataIndex: 'from',\n      key: 'from',\n      width: '10%',\n      render: text => renderWithTooltip(text, 15), // Limit to 20 characters\n    },\n    {\n      title: 'End Location',\n      dataIndex: 'to',\n      key: 'to',\n      width: '10%',\n      render: text => renderWithTooltip(text, 15), // Limit to 20 characters\n    },\n    {\n      title: 'Date',\n      dataIndex: 'pickUpTime',\n      key: 'pickUpTime',\n      width: '10%',\n      render: text => renderWithTooltip(text ? text : 'N/A', 10), // Limit to 19 characters\n    },\n    {\n      title: 'Distance',\n      dataIndex: 'distance',\n      key: 'distance',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '20%',\n      render: (status) => {\n        let color = '';\n        switch (status) {\n          case 'Completed':\n            color = 'darkgreen';\n            break;\n          case 'Active':\n            color = 'darkorange';\n            break;\n          case 'Inactive':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray'; // Fallback color if status doesn't match any case\n        }\n        return <Tag color={color}>{status.toUpperCase()}</Tag>;\n      },\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: '10%',\n      render: (_, record) => (\n        <Button type=\"link\">\n          <NavLink to={`/tripDetails/${record.id}`} style={{ color: 'green' }}>\n            <InfoCircleOutlined /> &nbsp;Details\n          </NavLink>\n        </Button>\n      ),\n    },\n  ];\n  \n\n  const renderImage = (src, alt) => (\n    src ? <img src={`http://194.164.72.21:5001${src}`} alt={alt} style={{ width: \"100%\", height: \"400px\", objectFit: \"cover\", marginBottom: \"10px\", cursor: 'pointer' }} onClick={() => handlePreview(`http://194.164.72.21:5001${src}`)} />\n      : <Avatar shape=\"square\" icon={<UserOutlined />} style={{ width: \"100%\", height: \"400px\", marginBottom: \"10px\" }} />\n  );\n\n  return (\n    <>\n      {driverLoading || tripsLoading ? (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Driver Details\" key=\"1\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <div style={{ height: \"100%\" }}>\n                  <Card\n                    bordered={false}\n                    title={<h6 className=\"font-semibold m-0\">Driver Details</h6>}\n                    className=\"header-solid h-full card-profile-information\"\n                    bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                  >\n                    <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"First Name\" span={3}>\n                        {driver && driver.firstName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Last Name\" span={3}>\n                        {driver && driver.lastName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {driver && driver.phoneNumber}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Status\" span={3}>\n    {driver && (\n      <Tag color={\n        driver.status === 'Active' ? 'darkgreen' :\n        driver.status === 'Pending' ? 'darkorange' :\n        driver.status === 'Inactive' ? 'darkred' : 'gray'\n      }>\n        {driver.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n\n  <Descriptions.Item label=\"Rating\" span={3}>\n    {driver && <Rate disabled value={driver.rating} />}\n  </Descriptions.Item>\n  \n\n  \n                    </Descriptions>\n                  </Card>\n                </div>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Driver Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Driver Image\" key=\"1\">\n                      {renderImage(driver?.driverImage, \"Driver Image\")}\n                      <div className=\"mt-4\">\n                        <Upload\n                          beforeUpload={beforeUpload}\n                          fileList={fileList}\n                          maxCount={1}\n                          accept=\".docx,.pdf, .png, .jpg, .jpeg\"\n                        >\n                          <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                            Upload Driver Image\n                          </Button>\n                        </Upload>\n                        <Button onClick={() => handleUpload(\"driverImage\")} hidden={!fileList.length}>Submit</Button>\n                      </div>\n                    </TabPane>\n                    <TabPane tab=\"Documents\" key=\"2\">\n                      {renderImage(driver?.documents, \"Driver Documents\")}\n                      <div className=\"mt-4\">\n                        <Upload\n                          beforeUpload={beforeUpload}\n                          fileList={fileList}\n                          maxCount={1}\n                          accept=\".docx,.pdf, .png, .jpg, .jpeg\"\n                        >\n                          <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                            Upload Documents\n                          </Button>\n                        </Upload>\n                        <Button onClick={() => handleUpload(\"documents\")} hidden={!fileList.length}>Submit</Button>\n                      </div>\n                    </TabPane>\n                    <TabPane tab=\"Driver Licence\" key=\"3\">\n                      {renderImage(driver?.driverLicence, \"Driver Licence\")}\n                      <div className=\"mt-4\">\n                        <Upload\n                          beforeUpload={beforeUpload}\n                          fileList={fileList}\n                          maxCount={1}\n                          accept=\".docx,.pdf, .png, .jpg, .jpeg\"\n                        >\n                          <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                            Upload Driver Licence\n                          </Button>\n                        </Upload>\n                        <Button onClick={() => handleUpload(\"driverLicence\")} hidden={!fileList.length}>Submit</Button>\n                      </div>\n                    </TabPane>\n                  </Tabs>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tab=\"Trips\" key=\"2\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Trips</h6>}\n                  className=\"header-solid h-full\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <Search\n                    placeholder=\"Search trips\"\n                    allowClear\n                    enterButton={<SearchOutlined />}\n                    onChange={e => setSearchQuery(e.target.value)}\n                    style={{ marginBottom: 16 }}\n                  />\n                  <Table columns={tripsColumns} dataSource={filteredTrips} rowKey=\"id\" />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      )}\n      <Modal\n        visible={previewVisible}\n        title=\"Image Preview\"\n        footer={null}\n        onCancel={() => setPreviewVisible(false)}\n      >\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n    </>\n  );\n}\n\nexport default DriversDetail;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col,Tag,Tooltip, Card, Upload, message, Rate,Descriptions, Button, Collapse, Spin, Table, Tabs, Avatar, Modal, Input } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { ToTopOutlined,InfoCircleOutlined, UserOutlined, SearchOutlined } from '@ant-design/icons';\nimport useFetchWithToken from '../../services/api'; // Import the useFetchWithToken hook\nimport { NavLink } from \"react-router-dom\";\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nfunction PassengersDetail() {\n  const [collapsed, setCollapsed] = useState(false);\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const { id } = useParams();\n  const { data: passengerData, loading: passengerLoading, postFormData } = useFetchWithToken(`passengers/${id}`); // Fetch passenger details using useFetchWithToken hook\n  const { data: tripData, loading: tripsLoading } = useFetchWithToken(`trips/passenger/${id}`); // Fetch passenger trips using useFetchWithToken hook\n  const trips = tripData?.trips.map(item => ({ ...item.trip, passenger: item.passenger, driver: item.driver })) || [];\n\n  const passenger = passengerData?.passenger;\n\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const beforeUpload = (file) => {\n    setFileList([file]);\n    return false; // Returning false prevents default upload behavior\n  };\n  const renderWithTooltip = (text, maxLength = 20) => {\n    const truncatedText = text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    return (\n      <Tooltip title={text}>\n        <span style={{\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          display: 'inline-block',\n          maxWidth: '100%',\n        }}>\n          {truncatedText}\n        </span>\n      </Tooltip>\n    );\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", fileList[0]);\n\n    try {\n      await postFormData(formData, `uploadDriverDocument/${id}`); // Upload passenger document using postFormData function from useFetchWithToken hook\n      message.success(\"File uploaded successfully!\");\n      setFileList([]);\n    } catch (error) {\n      message.error(\"Failed to upload file\");\n      setFileList([]);\n    }\n  };\n\n  const handlePreview = (src) => {\n    setPreviewImage(src);\n    setPreviewVisible(true);\n  };\n\n  const filteredTrips = trips?.filter(trip => {\n    const lowerCaseQuery = searchQuery.toLowerCase();\n    return (\n      trip.from.toLowerCase().includes(lowerCaseQuery) ||\n      trip.to.toLowerCase().includes(lowerCaseQuery) ||\n      trip.status.toLowerCase().includes(lowerCaseQuery) ||\n      trip.passenger.firstName.toLowerCase().includes(lowerCaseQuery) ||\n      trip.passenger.lastName.toLowerCase().includes(lowerCaseQuery)\n    );\n  });\n\n  const tripsColumns = [\n    {\n      title: 'Trip ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: '5%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n  \n    {\n      title: 'Passenger Name',\n      dataIndex: 'passengerId',\n      key: 'passengerId',\n      width: '10%',\n      render: (text, record) => renderWithTooltip(record.passenger ? `${record.passenger.firstName} ${record.passenger.lastName}` : 'N/A', 15), // Limit to 15 characters\n    },\n    {\n      title: 'Start Location',\n      dataIndex: 'from',\n      key: 'from',\n      width: '10%',\n      render: text => renderWithTooltip(text, 15), // Limit to 20 characters\n    },\n    {\n      title: 'End Location',\n      dataIndex: 'to',\n      key: 'to',\n      width: '10%',\n      render: text => renderWithTooltip(text, 15), // Limit to 20 characters\n    },\n    {\n      title: 'Date',\n      dataIndex: 'pickUpTime',\n      key: 'pickUpTime',\n      width: '10%',\n      render: text => renderWithTooltip(text ? text : 'N/A', 10), // Limit to 19 characters\n    },\n    {\n      title: 'Distance',\n      dataIndex: 'distance',\n      key: 'distance',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      width: '10%',\n      render: text => renderWithTooltip(text, 10), // Limit to 10 characters\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '20%',\n      render: (status) => {\n        let color = '';\n        switch (status) {\n          case 'Completed':\n            color = 'darkgreen';\n            break;\n          case 'Active':\n            color = 'darkorange';\n            break;\n          case 'Inactive':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray'; // Fallback color if status doesn't match any case\n        }\n        return <Tag color={color}>{status.toUpperCase()}</Tag>;\n      },\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: '10%',\n      render: (_, record) => (\n        <Button type=\"link\">\n          <NavLink to={`/tripDetails/${record.id}`} style={{ color: 'green' }}>\n            <InfoCircleOutlined /> &nbsp;Details\n          </NavLink>\n        </Button>\n      ),\n    },\n  ];\n\n  const renderImage = (src, alt) => (\n    src ? <img src={`http://194.164.72.21:5001${src}`} alt={alt} style={{ width: \"100%\", height: \"400px\", objectFit: \"cover\", marginBottom: \"10px\", cursor: 'pointer' }} onClick={() => handlePreview(`http://194.164.72.21:5001${src}`)} />\n      : <Avatar shape=\"square\" icon={<UserOutlined />} style={{ width: \"100%\", height: \"400px\", marginBottom: \"10px\" }} />\n  );\n\n  return (\n    <>\n      {passengerLoading || tripsLoading ? (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Driver Details\" key=\"1\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <div style={{ height: \"100%\" }}>\n                  <Card\n                    bordered={false}\n                    title={<h6 className=\"font-semibold m-0\">Driver Details</h6>}\n                    className=\"header-solid h-full card-profile-information\"\n                    bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                  >\n                    <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"First Name\" span={3}>\n                        {passenger && passenger.firstName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Last Name\" span={3}>\n                        {passenger && passenger.lastName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {passenger && passenger.phoneNumber}\n                      </Descriptions.Item>\n                      {/* <Descriptions.Item label=\"Email\" span={3}>\n                        {passenger && passenger.email}\n                      </Descriptions.Item> */}\n                     <Descriptions.Item label=\"Status\" span={3}>\n    {passenger && (\n      <Tag color={\n        passenger.status === 'Active' ? 'darkgreen' :\n        passenger.status === 'Pending' ? 'darkorange' :\n        passenger.status === 'Inactive' ? 'darkred' : 'gray'\n      }>\n        {passenger.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n                      {/* <Descriptions.Item label=\"Address\" span={3}>\n                        {passenger && passenger.address}\n                      </Descriptions.Item> */}\n                     <Descriptions.Item label=\"Rating\" span={3}>\n    {passenger && <Rate disabled value={5} />}\n  </Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </div>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Passenger Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Passenger Image\" key=\"1\">\n                      {renderImage(passenger?.passengerImage, \"Driver Image\")}\n                    </TabPane>\n                   \n                  </Tabs>\n                  <div className=\"mt-4\">\n                    <Upload\n                      beforeUpload={beforeUpload}\n                      fileList={fileList}\n                      maxCount={1}\n                      accept=\".jpg, .jpeg, .png\"\n                    >\n                      <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                        Upload File\n                      </Button>\n                    </Upload>\n                    <Button onClick={handleUpload} hidden={!fileList.length}>Submit</Button>\n                  </div>\n                </Card>\n              </Col>\n            </Row>\n            {/* Content */}\n          </TabPane>\n          <TabPane tab=\"Trips\" key=\"2\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Trips</h6>}\n                  className=\"header-solid h-full\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <Search\n                    placeholder=\"Search trips\"\n                    allowClear\n                    enterButton={<SearchOutlined />}\n                    onChange={e => setSearchQuery(e.target.value)}\n                    style={{ marginBottom: 16 }}\n                  />\n                  <Table columns={tripsColumns} dataSource={filteredTrips} rowKey=\"id\" />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      )}\n      <Modal\n        visible={previewVisible}\n        title=\"Image Preview\"\n        footer={null}\n        onCancel={() => setPreviewVisible(false)}\n      >\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n    </>\n  );\n}\n\nexport default PassengersDetail;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col,Tag, Rate, Card, Upload, message, Descriptions, Button, Collapse, Spin, Tabs, Avatar, Modal, Input } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { ToTopOutlined, UserOutlined, SearchOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nfunction VehiclesDetail() {\n  const [collapsed, setCollapsed] = useState(false);\n  const [fileList, setFileList] = useState([]);\n  const [imageFileList, setImageFileList] = useState([]);\n  const [docFileList, setDocFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const { id } = useParams();\n  const [vehicleData, setVehicleData] = useState(null);\n  const [driverData, setDriverData] = useState(null);\n  const [vehicleTypeData, setVehicleTypeData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchVehicleData();\n  }, [id]);\n\n  const fetchVehicleData = async () => {\n    try {\n      const vehicleResponse = await axios.get(`http://194.164.72.21:5001/vehicles/${id}`);\n      setVehicleData(vehicleResponse.data.vehicle);\n      setDriverData(vehicleResponse.data.driver);\n      setVehicleTypeData(vehicleResponse.data.vehicleType);\n      setLoading(false);\n    } catch (error) {\n      message.error(\"Unable to load vehicle details\");\n      setLoading(false);\n    }\n  };\n\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const beforeUpload = (file, type) => {\n    if (type === \"image\") {\n      setImageFileList([file]);\n    } else if (type === \"document\") {\n      setDocFileList([file]);\n    }\n    return false;\n  };\n\n  const handleUpload = async (type) => {\n    const formData = new FormData();\n    if (type === \"image\") {\n      formData.append(\"vehicleImage\", imageFileList[0]);\n    } else if (type === \"document\") {\n      formData.append(\"documents\", docFileList[0]);\n    }\n\n    try {\n      await axios.post(`http://194.164.72.21:5001/vehicles/${id}`, formData);\n      message.success(`${type === \"image\" ? \"Vehicle Image\" : \"Documents\"} uploaded successfully!`);\n      if (type === \"image\") {\n        setImageFileList([]);\n      } else if (type === \"document\") {\n        setDocFileList([]);\n      }\n    } catch (error) {\n      message.error(`Failed to upload ${type === \"image\" ? \"Vehicle Image\" : \"Documents\"}`);\n      if (type === \"image\") {\n        setImageFileList([]);\n      } else if (type === \"document\") {\n        setDocFileList([]);\n      }\n    }\n  };\n\n  const handlePreview = (src) => {\n    setPreviewImage(src);\n    setPreviewVisible(true);\n  };\n\n  const filteredTrips = vehicleData?.trips?.filter(trip => {\n    const lowerCaseQuery = searchQuery.toLowerCase();\n    return (\n      trip.from.toLowerCase().includes(lowerCaseQuery) ||\n      trip.to.toLowerCase().includes(lowerCaseQuery) ||\n      trip.status.toLowerCase().includes(lowerCaseQuery) ||\n      trip.passenger.firstName.toLowerCase().includes(lowerCaseQuery) ||\n      trip.passenger.lastName.toLowerCase().includes(lowerCaseQuery)\n    );\n  });\n\n  const renderImage = (src, alt) => (\n    src ? <img src={`http://194.164.72.21:5001${src}`} alt={alt} style={{ width: \"100%\", height: \"400px\", objectFit: \"cover\", marginBottom: \"10px\", cursor: 'pointer' }} onClick={() => handlePreview(`http://194.164.72.21:5001${src}`)} />\n      : <Avatar shape=\"square\" icon={<UserOutlined />} style={{ width: \"100%\", height: \"400px\", marginBottom: \"10px\" }} />\n  );\n\n  return (\n    <>\n      {loading ? (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Vehicle Details\" key=\"1\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <div style={{ height: \"100%\" }}>\n                  <Card\n                    bordered={false}\n                    title={<h6 className=\"font-semibold m-0\">Vehicle Details</h6>}\n                    className=\"header-solid h-full card-profile-information\"\n                    bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                  >\n                    <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"Plate Number\" span={3}>\n                        {vehicleData && vehicleData.plateNumber}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Model\" span={3}>\n                        {vehicleData && vehicleData.model}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Color\" span={3}>\n                        {vehicleData && vehicleData.color}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Manufactured Year\" span={3}>\n                        {vehicleData && vehicleData.manufacturedYear}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Vehicle Type\" span={3}>\n                        {vehicleTypeData && vehicleTypeData.typeName}\n                      </Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </div>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Vehicle Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Vehicle Image\" key=\"1\">\n                      {renderImage(vehicleData?.vehicleImage, \"Vehicle Image\")}\n                      <div className=\"mt-4\">\n                        <Upload\n                          beforeUpload={(file) => beforeUpload(file, \"image\")}\n                          fileList={imageFileList}\n                          maxCount={1}\n                          accept=\".png, .jpg, .jpeg\"\n                        >\n                          <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                            Upload Vehicle Image\n                          </Button>\n                        </Upload>\n                        <Button onClick={() => handleUpload(\"image\")} hidden={!imageFileList.length}>Submit</Button>\n                      </div>\n                    </TabPane>\n                    <TabPane tab=\"Documents\" key=\"2\">\n                      {renderImage(vehicleData?.documents, \"Vehicle Documents\")}\n                      <div className=\"mt-4\">\n                        <Upload\n                          beforeUpload={(file) => beforeUpload(file, \"document\")}\n                          fileList={docFileList}\n                          maxCount={1}\n                          accept=\".png, .jpg, .jpeg, .docx,.pdf\"\n                        >\n                          <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                            Upload Documents\n                          </Button>\n                        </Upload>\n                        <Button onClick={() => handleUpload(\"document\")} hidden={!docFileList.length}>Submit</Button>\n                      </div>\n                    </TabPane>\n                  </Tabs>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tab=\"Driver Details\" key=\"2\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <div style={{ height: \"100%\" }}>\n                  <Card\n                    bordered={false}\n                    title={<h6 className=\"font-semibold m-0\">Driver Details</h6>}\n                    className=\"header-solid h-full card-profile-information\"\n                    bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                  >\n                    <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"First Name\" span={3}>\n                        {driverData && driverData.firstName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Last Name\" span={3}>\n                        {driverData && driverData.lastName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {driverData && driverData.phoneNumber}\n                      </Descriptions.Item>\n                    \n                      <Descriptions.Item label=\"Status\" span={3}>\n    {driverData && (\n      <Tag color={\n        driverData.status === 'Active' ? 'darkgreen' :\n        driverData.status === 'Pending' ? 'darkorange' :\n        driverData.status === 'Inactive' ? 'darkred' : 'gray'\n      }>\n        {driverData.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n\n  <Descriptions.Item label=\"Rating\" span={3}>\n    {driverData && <Rate disabled value={driverData.rating} />}\n  </Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </div>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Driver Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Driver Image\" key=\"1\">\n                      {renderImage(driverData?.driverImage, \"Driver Image\")}\n                    </TabPane>\n                    <TabPane tab=\"Documents\" key=\"2\">\n                      {renderImage(driverData?.documents, \"Driver Documents\")}\n                    </TabPane>\n                    <TabPane tab=\"Driver Licence\" key=\"3\">\n                      {renderImage(driverData?.driverLicence, \"Driver Licence\")}\n                    </TabPane>\n                  </Tabs>\n                  {/* <div className=\"mt-4\">\n                    <Upload\n                      beforeUpload={beforeUpload}\n                      fileList={fileList}\n                      maxCount={1}\n                      accept=\".docx,.pdf\"\n                    >\n                      <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                        Upload File\n                      </Button>\n                    </Upload>\n                    <Button onClick={handleUpload} hidden={!fileList.length}>Submit</Button>\n                  </div> */}\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n       \n        </Tabs>\n      )}\n      <Modal\n        visible={previewVisible}\n        title=\"Image Preview\"\n        footer={null}\n        onCancel={() => setPreviewVisible(false)}\n      >\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n    </>\n  );\n}\n\nexport default VehiclesDetail;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Select, Row, Col, message } from 'antd';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst SubscriberForm = ({ companyId, closeModal, refetchData }) => {\n  const [form] = Form.useForm();\n  const [passengers, setPassengers] = useState([]);\n\n  useEffect(() => {\n    const fetchPassengers = async () => {\n      try {\n        const response = await axios.get('http://194.164.72.21:5001/passengers'); // Update with the correct endpoint to fetch passengers\n        setPassengers(response.data);\n      } catch (error) {\n        message.error('Failed to load passengers');\n      }\n    };\n\n    fetchPassengers();\n  }, []);\n\n  const onFinish = async (values) => {\n    try {\n      const response = await axios.post('http://194.164.72.21:5001/companies/subscribers', {\n        ...values,\n        companyId,\n      });\n\n      message.success('Subscriber added successfully');\n      form.resetFields();\n      closeModal();\n      refetchData(); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n      message.error('Failed to add subscriber');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item label=\"Passenger\" name=\"passengerId\" rules={[{ required: true, message: 'Please select a passenger' }]}>\n            <Select placeholder=\"Select a passenger\">\n              {passengers.map((passenger) => (\n                <Option key={passenger.id} value={passenger.id}>\n                  {`${passenger.firstName} ${passenger.lastName}`}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Usage Limit\" name=\"usageLimit\" rules={[{ required: true, message: 'Please enter a usage limit' }]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"Status\" name=\"status\" rules={[{ required: true, message: 'Please select a status' }]}>\n            <Select>\n              <Option value=\"Pending\">Pending</Option>\n              <Option value=\"Active\">Active</Option>\n              <Option value=\"Inactive\">Inactive</Option>\n            </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Form.Item label=\"Start Date\" name=\"startDate\" rules={[{ required: true, message: 'Please enter a start date' }]}>\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item label=\"End Date\" name=\"endDate\" rules={[{ required: true, message: 'Please enter an end date' }]}>\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n        <Button htmlType=\"button\" onClick={() => form.resetFields()}>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SubscriberForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card, Upload, message, Descriptions, Button, Spin, Table, Tabs, Avatar, Modal, Input } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { ToTopOutlined, UserOutlined, SearchOutlined, PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport SubscriberForm from './subscriberForm'; // Import the SubscriberForm component\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\nfunction CompanyDetails() {\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false); // State for modal visibility\n  const { id } = useParams();\n  const [companyData, setCompanyData] = useState(null);\n  const [subscribersData, setSubscribersData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCompanyDetails = async () => {\n      try {\n        const companyResponse = await axios.get(`http://194.164.72.21:5001/companies/${id}`);\n        setCompanyData(companyResponse.data);\n        const subscribersResponse = await axios.get(`http://194.164.72.21:5001/companies/subscribers/${id}`);\n        setSubscribersData(subscribersResponse.data);\n      } catch (error) {\n        message.error(\"Unable to load data!\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCompanyDetails();\n  }, [id]);\n\n  const beforeUpload = (file) => {\n    setFileList([file]);\n    return false; // Returning false prevents default upload behavior\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", fileList[0]);\n\n    try {\n      await axios.post(`http://194.164.72.21:5001/uploadCompanyDocument/${id}`, formData);\n      message.success(\"File uploaded successfully!\");\n      setFileList([]);\n    } catch (error) {\n      message.error(\"Failed to upload file\");\n      setFileList([]);\n    }\n  };\n\n  const handlePreview = (src) => {\n    setPreviewImage(src);\n    setPreviewVisible(true);\n  };\n\n  const handleAddSubscriber = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalVisible(false);\n  };\n\n  const refetchData = async () => {\n    try {\n      const subscribersResponse = await axios.get(`http://194.164.72.21:5001/companies/subscribers/${id}`);\n      setSubscribersData(subscribersResponse.data);\n    } catch (error) {\n      message.error(\"Unable to load data!\");\n    }\n  };\n\n  const filteredSubscribers = subscribersData.filter(subscriber => {\n    const lowerCaseQuery = searchQuery.toLowerCase();\n    return (\n      subscriber.firstName.toLowerCase().includes(lowerCaseQuery) ||\n      subscriber.lastName.toLowerCase().includes(lowerCaseQuery) ||\n      subscriber.phoneNumber.toLowerCase().includes(lowerCaseQuery)\n    );\n  });\n\n  const subscriberColumns = [\n    {\n      title: 'Subscriber ID',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'First Name',\n      dataIndex: 'firstName',\n      key: 'firstName',\n    },\n    {\n      title: 'Last Name',\n      dataIndex: 'lastName',\n      key: 'lastName',\n    },\n    {\n      title: 'Phone Number',\n      dataIndex: 'phoneNumber',\n      key: 'phoneNumber',\n    },\n    {\n      title: 'Usage Limit',\n      dataIndex: 'usageLimit',\n      key: 'usageLimit',\n    },\n  ];\n\n  const renderImage = (src, alt) => (\n    src ? <img src={`http://194.164.72.21:5001${src}`} alt={alt} style={{ width: \"100%\", height: \"400px\", objectFit: \"cover\", marginBottom: \"10px\", cursor: 'pointer' }} onClick={() => handlePreview(`http://194.164.72.21:5001${src}`)} />\n      : <Avatar shape=\"square\" icon={<UserOutlined />} style={{ width: \"100%\", height: \"400px\", marginBottom: \"10px\" }} />\n  );\n\n  return (\n    <>\n      {loading ? (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Company Details\" key=\"1\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <div style={{ height: \"100%\" }}>\n                  <Card\n                    bordered={false}\n                    title={<h6 className=\"font-semibold m-0\">Company Details</h6>}\n                    className=\"header-solid h-full card-profile-information\"\n                    bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                  >\n                    <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"Company Name\" span={3}>\n                        {companyData && companyData.companyName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Contact Person\" span={3}>\n                        {companyData && companyData.contactPerson}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {companyData && companyData.phoneNumber}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Balance\" span={3}>\n                        {companyData && companyData.balance}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Credit Limit\" span={3}>\n                        {companyData && companyData.creditLimit}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Status\" span={3}>\n                        {companyData && companyData.status}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Address\" span={3}>\n                        {companyData && companyData.address}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Start Date\" span={3}>\n                        {companyData && new Date(companyData.startDate).toLocaleDateString()}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"End Date\" span={3}>\n                        {companyData && new Date(companyData.endDate).toLocaleDateString()}\n                      </Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </div>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Company Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Company Image\" key=\"1\">\n                      {renderImage(companyData?.companyImage, \"Company Image\")}\n                    </TabPane>\n                    <TabPane tab=\"Documents\" key=\"2\">\n                      {renderImage(companyData?.documents, \"Company Documents\")}\n                    </TabPane>\n                    <TabPane tab=\"Company Licence\" key=\"3\">\n                      {renderImage(companyData?.companyLicence, \"Company Licence\")}\n                    </TabPane>\n                  </Tabs>\n                  <div className=\"mt-4\">\n                    <Upload\n                      beforeUpload={beforeUpload}\n                      fileList={fileList}\n                      maxCount={1}\n                      accept=\".docx,.pdf\"\n                    >\n                      <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                        Upload File\n                      </Button>\n                    </Upload>\n                    <Button onClick={handleUpload} hidden={!fileList.length}>Submit</Button>\n                  </div>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tab=\"Subscribers\" key=\"2\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Subscribers</h6>}\n                  extra={<Button icon={<PlusOutlined />} onClick={handleAddSubscriber}>Add Subscriber</Button>} // Add subscriber button\n                  className=\"header-solid h-full\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <Search\n                    placeholder=\"Search subscribers\"\n                    allowClear\n                    enterButton={<SearchOutlined />}\n                    onChange={e => setSearchQuery(e.target.value)}\n                    style={{ marginBottom: 16 }}\n                  />\n                  <Table columns={subscriberColumns} dataSource={filteredSubscribers} rowKey=\"id\" />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      )}\n      <Modal\n        visible={previewVisible}\n        title=\"Image Preview\"\n        footer={null}\n        onCancel={() => setPreviewVisible(false)}\n      >\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n      <Modal\n        visible={isModalVisible}\n        title=\"Add Subscriber\"\n        onCancel={handleModalClose}\n        footer={null}\n      >\n        <SubscriberForm companyId={id} closeModal={handleModalClose} refetchData={refetchData} />\n      </Modal>\n    </>\n  );\n}\n\nexport default CompanyDetails;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Select } from 'antd';\nimport Password from 'antd/lib/input/Password';\nimport useFetchWithToken from '../../services/api';\n\nconst { Option } = Select;\n\nconst UserForm = ({ formData, setFormData, closeModal }) => {\n  const [form] = Form.useForm();\n  const { data: roles, loading: rolesLoading, error: rolesError } = useFetchWithToken('roles');\n  const { postData, putData } = useFetchWithToken('users');\n  const [submitted, setSubmitted] = useState(false); // State to trigger refetch\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n  }, [formData, form]);\n\n  const onFinish = async (values) => {\n    try {\n      if (formData.id) {\n        await putData(values, formData.id);\n      } else {\n        await postData(values);\n      }\n      setFormData({});\n      closeModal();\n      setSubmitted(true); // Trigger refetch after successful form submission\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (submitted) {\n      setSubmitted(false); // Reset submitted state\n      // Refetch data here\n      // You may fetch data again using the same method you use in the User component\n    }\n  }, [submitted]);\n\n  if (rolesError) {\n    return <div>Error: {rolesError}</div>;\n  }\n\n  if (rolesLoading) {\n    return <div>Loading roles...</div>;\n  }\n\n  return (\n    <Form form={form} onFinish={onFinish} layout=\"vertical\">\n      <Form.Item label=\"First Name\" name=\"firstName\" rules={[{ required: true, message: 'Please enter a First Name' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Last Name\" name=\"lastName\" rules={[{ required: true, message: 'Please enter a Last Name' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Email\" name=\"email\" rules={[{ required: true, message: 'Please enter an Email' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Phone Number\" name=\"phoneNumber\" rules={[{ required: true, message: 'Please enter a Phone Number' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please enter a Password' }]}>\n        <Password />\n      </Form.Item>\n  <Form.Item label=\"Role\" name=\"RoleId\" rules={[{ required: true, message: 'Please select a Role' }]}>\n  <Select>\n    {roles && roles.map(role => (\n      <Option key={role.id} value={role.id}>{role.name}</Option>\n    ))}\n  </Select>\n  </Form.Item>\n  \n      <Form.Item label=\"Status\" name=\"status\" rules={[{ required: true, message: 'Please select a Status' }]}>\n        <Select>\n          <Option value=\"Active\">Active</Option>\n          <Option value=\"Inactive\">Inactive</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default UserForm;\n\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table, Card, Upload, message, Input, Row, Col,Dropdown, Modal, Button, Checkbox , Tag, Tabs, Spin} from \"antd\";\nimport { useHistory } from 'react-router-dom'; // Assuming you're using react-router for navigation\n\nconst useFetchWithToken = (endpoint) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory(); // Initialize useHistory hook for redirection\n\n  const token = localStorage.getItem('token');\n  if (!token) {\n    // Redirect to login page if token is not found\n    history.push('/login');\n  }  const apiUrl = process.env.API_URL || 'http://194.164.72.21:5001'; \n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.get(`${apiUrl}/${endpoint}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'tennant':'web'\n        },\n      });\n      setData(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 401 || error.response.status === 403) {\n        // Redirect to login page if status code is 401\n        history.push('/login');\n      } else {\n        setError(error.message);\n        message.error(\"Something went wrong!\");\n      }\n     \n      \n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(); // eslint-disable-next-line\n  }, [endpoint, token]);\n\n  const postData = async (postData) => {\n    try {\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.post(`${apiUrl}/${endpoint}`, postData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'tennant':'web'\n\n        },\n      });\n      setData(response.data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const postFormData = async (formData, endpoint) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      \n      const response = await axios.post(`${apiUrl}/${endpoint}`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data',\n          'tennant':'web'\n\n        },\n      });\n      \n      return response.data;\n    } catch (error) {\n      throw new Error(error.message || 'Failed to upload data');\n    }\n  };\n  const putFormData = async (formData, endpoint) => {\n    console.log(\"fff\", formData)\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      \n      const response = await axios.put(`${apiUrl}/${endpoint}`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data',\n          'tennant':'web'\n\n        },\n      });\n      \n      return response.data;\n    } catch (error) {\n      throw new Error(error.message || 'Failed to upload data');\n    }\n  };\n  \n  const putData = async (putData, urlParam) => {\n    console.log(\"url\",urlParam)\n    try {\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.put(`${apiUrl}/${endpoint}/${urlParam}`, putData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'tennant':'web'\n\n        },\n      });\n      setData(response.data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const refetchData = async () => {\n    // Simply refetch the data using the existing fetchData function\n    fetchData();\n  };\n\n  const deleteData = async (urlParam) => {\n    try {\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      const response = await axios.delete(`${apiUrl}/${endpoint}/${urlParam}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'tennant':'web'\n\n        },\n      });\n      setData(response.data); // No data returned after delete\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return { data, error, loading, postData, putData, deleteData, postFormData , putFormData, refetchData, token};\n};\n\nexport default useFetchWithToken;\n","// User.js\nimport React, { useState } from 'react';\nimport { Card, Row, Col, Button, Table, Modal , Spin} from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport UserForm from './userForm';\nimport useFetchWithToken from '../../services/api2';\n\nconst User = () => {\n  const [userModalVisible, setUserModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const { data: userData, loading, error, refetchData } = useFetchWithToken('users');\n\n  const handleAddUser = () => {\n    setFormData({});\n    setUserModalVisible(true);\n  };\n\n  const handleEditUser = (record) => {\n    setFormData(record);\n    setUserModalVisible(true);\n  };\n\n  const handleDeleteUser = (userId) => {\n    // Implement deletion logic\n  };\n\n  const closeModal = () => {\n    setUserModalVisible(false);\n  };\n\n  const userColumns = [\n    { title: 'ID', dataIndex: 'id', key: 'id' },\n    { title: 'First Name', dataIndex: 'firstName', key: 'firstName' },\n    { title: 'Last Name', dataIndex: 'lastName', key: 'lastName' },\n    { title: 'Email', dataIndex: 'email', key: 'email' },\n    { title: 'Phone', dataIndex: 'phoneNumber', key: 'phoneNumber' },\n    { \n      title: 'Role', \n      dataIndex: ['Role', 'name'],\n      key: 'role' \n    },    \n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button\n            type=\"primary\"\n            icon={<EditOutlined />}\n            onClick={() => handleEditUser(record)}\n            style={{ marginRight: 8 }}\n          >\n            Edit\n          </Button>\n          <Button\n            type=\"danger\"\n            icon={<DeleteOutlined />}\n            onClick={() => handleDeleteUser(record.id)}\n          >\n            Delete\n          </Button>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[16, 16]}>\n          <Col span={12}>\n            <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddUser}>\n              Add User\n            </Button>\n          </Col>\n          <Col span={24}>\n            {error && <div>Error: {error}</div>}\n            {loading ? (\n             <div style={{ textAlign: 'center', marginTop: '20px' }}>\n             <Spin size=\"large\" />\n           </div>  \n            ) : (\n              <Table dataSource={userData} columns={userColumns} pagination={{ pageSize: 5 }} />\n            )}\n          </Col>\n        </Row>\n      </Card>\n\n      <Modal\n  title={formData.id ? 'Edit User' : 'Add User'}\n  visible={userModalVisible}\n  onCancel={() => setUserModalVisible(false)}\n  footer={null}\n>\n  {/* Make sure refetchData is passed as a prop */}\n  <UserForm formData={formData} setFormData={setFormData} closeModal={closeModal} refetchData={refetchData} />\n</Modal>\n\n\n    </div>\n  );\n};\n\nexport default User;\n","import React, {  useEffect } from 'react';\nimport {  Button, Form, Input } from 'antd';\n\nconst PermissionForm = ({ formData, setFormData }) => {\n    const [form] = Form.useForm();\n  \n    useEffect(() => {\n      form.setFieldsValue(formData);\n    }, [formData, form]);\n  \n    const handleSavePermission = () => {\n    \n    };\n  \n    return (\n      <Form form={form} onFinish={handleSavePermission} layout=\"vertical\">\n        <Form.Item name=\"name\" label=\"Permission Name\" rules={[{ required: true, message: 'Please enter permission name' }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  export default PermissionForm;","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Table, Modal,  message , Spin} from 'antd';\nimport { PlusOutlined,  } from '@ant-design/icons';\nimport PermissionForm from './permissionForm';\n\nconst Permission = () => {\n  const [permissionData, setPermissionData] = useState([]);\n  const [permissionModalVisible, setPermissionModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const permissionColumns = [\n    { title: 'ID', dataIndex: 'id', key: 'id' },\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          {/* <Button\n            type=\"primary\"\n            icon={<EditOutlined />}\n            onClick={() => handleEditPermission(record)}\n            style={{ marginRight: 8 }}\n          >\n            Edit\n          </Button>\n          <Button\n            type=\"danger\"\n            icon={<DeleteOutlined />}\n            onClick={() => handleDeletePermission(record.id)}\n          >\n            Delete\n          </Button> */}\n        </>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    fetchPermissions();\n  }, []);\n\n  const fetchPermissions = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      setLoading(true);\n      const response = await fetch('http://194.164.72.21:5001/permissions', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setPermissionData(data);\n        setLoading(false)\n      } else {\n        throw new Error(data.message || 'Failed to fetch permissions');\n      }\n    } catch (error) {\n      console.error('Error fetching permissions:', error);\n      message.error('Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddPermission = () => {\n    setFormData({});\n    setPermissionModalVisible(true);\n  };\n\n \n\n\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button type='primary' icon={<PlusOutlined />} onClick={handleAddPermission}>\n              Add Permission\n            </Button>\n          </Col>\n          <Col span={24}>\n          {loading ? (\n  <div style={{ textAlign: 'center', marginTop: '20px' }}>\n  <Spin size=\"large\" />\n</div>      ) : (\n            <Table\n              dataSource={permissionData}\n              columns={permissionColumns}\n              loading={loading}\n              rowKey=\"id\"\n              pagination={{ pageSize: 5 }}\n\n            />\n            )}\n          </Col>\n        </Row>\n      </Card>\n\n      <Modal\n        title={formData.id ? 'Edit Permission' : 'Add Permission'}\n        visible={permissionModalVisible}\n        onCancel={() => setPermissionModalVisible(false)}\n        footer={null}\n      >\n        <PermissionForm formData={formData} setFormData={setFormData} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Permission;\n","import React from 'react';\nimport { Checkbox } from 'antd';\n\nconst PermissionSelection = ({ permissions, selectedPermissions, onChange }) => {\n  if (!permissions) {\n    return null; // or you can return a loading indicator or an error message\n  }\n\n  // const handleCheckboxChange = (permissionId) => {\n  //   const index = selectedPermissions.indexOf(permissionId);\n  //   if (index === -1) {\n  //     onChange([...selectedPermissions, permissionId]);\n  //   } else {\n  //     onChange(selectedPermissions.filter((id) => id !== permissionId));\n  //   }\n  // };\n\n  return (\n    <Checkbox.Group\n      value={selectedPermissions}\n      onChange={(values) => onChange(values)}\n      style={{ width: '100%' }}\n    >\n      {permissions.map((permission) => (\n        <Checkbox key={permission.id} value={permission.id}>\n          {permission.name}\n        </Checkbox>\n      ))}\n    </Checkbox.Group>\n  );\n};\n\nexport default PermissionSelection;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport PermissionSelection from './permissionSelection';\nimport useFetchWithToken from '../../services/api';\n\nconst RoleForm = ({ formData, setFormData, onClose }) => {\n  const [form] = Form.useForm();\n  const [selectedPermissions, setSelectedPermissions] = useState([]);\n  const { data: permissions, loading, error } = useFetchWithToken('permissions');\n  const { postData, putData } = useFetchWithToken('roles');\n\n  useEffect(() => {\n    form.setFieldsValue(formData);\n    setSelectedPermissions(formData.permissions || []);\n  }, [formData, form]);\n\n  const handleSaveRole = async (values) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token not found');\n      }\n      // let method = 'POST';\n      // let url = 'roles';\n      // if (formData.id) {\n      //   url = `roles/${formData.id}`;\n      //   method = 'PUT';\n      // }\n      const responseData = formData.id ? await putData(values, formData.id) : await postData(values);\n        message.success('Role saved successfully');\n        setFormData({});\n        onClose(); // Close the modal\n        console.log(responseData)\n    \n    } catch (error) {\n      console.error('Error saving role:', error);\n      message.error(error.message || 'Failed to save role');\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={handleSaveRole} layout=\"vertical\">\n      <Form.Item name=\"name\" label=\"Role Name\" rules={[{ required: true, message: 'Please enter role name' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"permissions\" label=\"Permissions\">\n        {loading ? (\n          <div>Loading permissions...</div>\n        ) : error ? (\n          <div>Error loading permissions: {error}</div>\n        ) : (\n          <PermissionSelection permissions={permissions} selectedPermissions={selectedPermissions} onChange={setSelectedPermissions} />\n        )}\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RoleForm;\n","import React, { useState } from 'react';\nimport { Card, Row, Col, Button, Table, Modal, Spin } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoleForm from './roleForm';\nimport useFetchWithToken from '../../services/api2';\n\nconst Role = () => {\n  const [roleModalVisible, setRoleModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const { data: roleData, loading, error, refetchData } = useFetchWithToken('roles');\n\n  const handleAddRole = () => {\n    setFormData({});\n    setRoleModalVisible(true);\n  };\n\n  const handleEditRole = (record) => {\n    setFormData(record);\n    setRoleModalVisible(true);\n  };\n\n  const handleDeleteRole = (roleId) => {\n    // Implement deletion logic\n  };\n\n  const closeModal = () => {\n    setRoleModalVisible(false);\n  };\n\n  const roleColumns = [\n    { title: 'ID', dataIndex: 'id', key: 'id' },\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    {\n      title: 'Permissions',\n      dataIndex: 'Permissions',\n      key: 'permissions',\n      render: (permissions) => (\n        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {permissions && permissions.map(permission => (\n            <div key={permission.id} style={{ marginRight: 8, marginBottom: 8, backgroundColor: 'lightblue', padding: '4px 8px', borderRadius: 4 }}>{permission.name}</div>\n          ))}\n        </div>\n      ),\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <>\n          <Button\n            type=\"primary\"\n            icon={<EditOutlined />}\n            onClick={() => handleEditRole(record)}\n            style={{ marginRight: 8 }}\n          >\n            Edit\n          </Button>\n          <Button\n            type=\"danger\"\n            icon={<DeleteOutlined />}\n            onClick={() => handleDeleteRole(record.id)}\n          >\n            Delete\n          </Button>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[16, 16]}>\n          <Col span={12}>\n            <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAddRole}>\n              Add Role\n            </Button>\n          </Col>\n          <Col span={24}>\n            {error && <div>Error: {error}</div>}\n            {loading ? (\n             <div style={{ textAlign: 'center', marginTop: '20px' }}>\n             <Spin size=\"large\" />\n           </div>  \n            ) : (\n              <Table dataSource={roleData} columns={roleColumns} pagination={{ pageSize: 5 }} />\n            )}\n          </Col>\n        </Row>\n      </Card>\n\n      <Modal\n        title={formData.id ? 'Edit Role' : 'Add Role'}\n        visible={roleModalVisible}\n        onCancel={() => setRoleModalVisible(false)}\n        footer={null}\n      >\n        {/* Make sure refetchData is passed as a prop */}\n        <RoleForm formData={formData} setFormData={setFormData} closeModal={closeModal} refetchData={refetchData} onClose={()=> setRoleModalVisible(false)} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Role;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport {\n  Layout,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Form,\n  Input,\n  Switch,\n  message\n} from \"antd\";\nimport signinbg from \"../../assets/images/wekil.jpg\";\n\n\nconst { Title } = Typography;\nconst { Header, Footer, Content } = Layout;\n\nclass Login extends Component {\n  onFinish = async (values) => {\n    try {\n        const apiUrl = process.env.API_URL || 'http://194.164.72.21:5001';\n        const response = await fetch(`${apiUrl}/login`, {\n    \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Store token and permissions in local storage\n        message.success(\"Logged In Successfully!\");\n\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('userData',JSON.stringify( data.userData));\n\n        const permissions = data.userData.Role.Permissions.map(permission => permission.name);\n        localStorage.setItem('permissions', JSON.stringify(permissions));\n        // Redirect programmatically\n        this.props.history.push('/dashboard');\n      } else {\n        // Handle error response, if any\n        message.error(\"Invalid Credentials!\");\n\n        console.error('Login failed:', data.message);\n      }\n    } catch (error) {\n      console.error('Error occurred during login:', error);\n    }\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  render() {\n    return (\n      <>\n        <Layout className=\"layout-default layout-signin\">\n          <Header>\n            <div className=\"header-col header-brand\">\n              <h5>Wekil Zewari</h5>\n            </div>\n          </Header>\n          <Content className=\"signin\">\n            <Row gutter={[24, 0]} justify=\"space-around\">\n              <Col\n                xs={{ span: 24, offset: 0 }}\n                lg={{ span: 6, offset: 2 }}\n                md={{ span: 12 }}\n              >\n                <Title className=\"mb-15\">Sign In</Title>\n                <Title className=\"font-regular text-muted\" level={5}>\n                  Enter your email and password to sign in\n                </Title>\n                <Form\n                  onFinish={this.onFinish}\n                  onFinishFailed={this.onFinishFailed}\n                  layout=\"vertical\"\n                  className=\"row-col\"\n                >\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your email!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Email\" />\n                  </Form.Item>\n\n                  <Form.Item\n                    className=\"username\"\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your password!\",\n                      },\n                    ]}\n                  >\n                    <Input.Password placeholder=\"Password\" />\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"remember\"\n                    className=\"aligin-center\"\n                    valuePropName=\"checked\"\n                  >\n                    <Switch />\n                    Remember me\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      style={{ width: \"100%\" }}\n                    >\n                      SIGN IN\n                    </Button>\n                  </Form.Item>\n                 \n                </Form>\n              </Col>\n              <Col\n                style={{ padding: 12 }}\n                xs={{ span: 24 }}\n                lg={{ span: 12 }}\n                md={{ span: 12 }}\n              >\n                <img src={signinbg} width={1200} height={600} alt=\"\" />\n              </Col>\n            </Row>\n          </Content>\n          <Footer>\n            <p className=\"copyright\" style={{ marginTop: 200 }}>\n              {\" \"}\n              Copyright © 2024 <a href=\"#frontieri.com\">Wekil Zewari</a>{\" \"}\n            </p>\n          </Footer>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col,Rate,Tag, Card, Upload, message, Descriptions, Button, Tabs, Avatar, Modal, Spin } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { ToTopOutlined, UserOutlined } from '@ant-design/icons';\nimport { GoogleMap, LoadScript, Marker, DirectionsRenderer } from '@react-google-maps/api';\nimport useFetchWithToken from '../../services/api';\n\nconst { TabPane } = Tabs;\n\nconst TripDetail = () => {\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const { id } = useParams();\n  const { data: tripData, loading: tripLoading } = useFetchWithToken(`trips/${id}`);\n  const [isMounted, setIsMounted] = useState(true);\n\n  const driver = tripData?.driver;\n  const passenger = tripData?.passenger;\n\n  const coordinates = tripData\n    ? [\n        { lat: parseFloat(tripData.fromLat), lng: parseFloat(tripData.fromLon) },\n        { lat: parseFloat(tripData.toLat), lng: parseFloat(tripData.toLon) },\n      ]\n    : [];\n\n  useEffect(() => {\n    if (coordinates.length === 2 && window.google && window.google.maps) {\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route(\n        {\n          origin: coordinates[0],\n          destination: coordinates[1],\n          travelMode: window.google.maps.TravelMode.DRIVING,\n        },\n        (result, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK && isMounted) {\n            setDirectionsResponse(result);\n          } else {\n            console.error(`Error fetching directions: ${status}`, result);\n          }\n        }\n      );\n    }\n    return () => setIsMounted(false); // Cleanup to avoid memory leaks\n  }, [coordinates]);\n\n  const beforeUpload = (file) => {\n    setFileList([file]);\n    return false;\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", fileList[0]);\n\n    try {\n      // await postFormData(formData, `uploadDriverDocument/${id}`);\n      message.success(\"File uploaded successfully!\");\n      setFileList([]);\n    } catch (error) {\n      message.error(\"Failed to upload file\");\n      setFileList([]);\n    }\n  };\n\n  const handlePreview = (src) => {\n    setPreviewImage(src);\n    setPreviewVisible(true);\n  };\n\n  const renderImage = (src, alt) => (\n    src ? <img src={`http://194.164.72.21:5001${src}`} alt={alt} style={{ width: \"100%\", height: \"400px\", objectFit: \"cover\", marginBottom: \"10px\", cursor: 'pointer' }} onClick={() => handlePreview(`http://194.164.72.21:5001${src}`)} />\n      : <Avatar shape=\"square\" icon={<UserOutlined />} style={{ width: \"100%\", height: \"400px\", marginBottom: \"10px\" }} />\n  );\n\n  return (\n    <>\n      {tripLoading ? (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"3\">\n          <TabPane tab=\"Trip Details\" key=\"3\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Trip Details-                       {tripData?.id}\n                  </h6>}\n                  className=\"header-solid h-full card-profile-information\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <Descriptions style={{ marginTop: '60px' }} column={2}>\n                  \n                    <Descriptions.Item label=\"Start Location\" span={1}>\n                      {tripData?.from}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"End Location\" span={1}>\n                      {tripData?.to}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Distance\" span={1}>\n                      {tripData?.distance} km\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Price\" span={1}>\n                      ${tripData?.price}\n                    </Descriptions.Item>\n                   \n                    <Descriptions.Item label=\"Status\" span={3}>\n    {tripData && (\n      <Tag color={\n        tripData.status === 'Ended' ? 'darkgreen' :\n        tripData.status === 'Active' ? 'darkorange' :\n        tripData.status === 'Cancelled' ? 'darkred' : 'gray'\n      }>\n        {tripData.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n                    <Descriptions.Item label=\"Pick Up Time\" span={1}>\n                      {new Date(tripData?.pickUpTime).toLocaleString()}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Drop Off Time\" span={1}>\n                      {new Date(tripData?.dropOffTime).toLocaleString()}\n                    </Descriptions.Item>\n                    {/* <Descriptions.Item label=\"Payment Finalized\" span={1}>\n                      {tripData?.paymentFinalized}\n                    </Descriptions.Item> */}\n                    <Descriptions.Item label=\"Driver Rating\" span={1}>\n                    {tripData && <Rate disabled value={tripData.driverRating} />}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Passenger Rating\" span={1}>\n                    {tripData && <Rate disabled value={tripData.passengerRatinf} />}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Driver Feedback\" span={1}>\n                      {tripData?.driverFeedback}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Passenger Feedback\" span={1}>\n                      {tripData?.passengerFeedback}\n                    </Descriptions.Item>\n                  </Descriptions>\n                </Card>\n              </Col>\n              {/* <Col span={24}>\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Trip Route</h6>}\n                  className=\"header-solid h-full\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <LoadScript googleMapsApiKey=\"AIzaSyBEnjVNXGgw757msw4v4Otk5nV9XYUOQCs\">\n                    <GoogleMap\n                      mapContainerStyle={{ height: \"500px\", width: \"100%\" }}\n                      center={coordinates.length ? coordinates[0] : { lat: 0, lng: 0 }}\n                      zoom={13}\n                    >\n                      {directionsResponse && (\n                        <DirectionsRenderer directions={directionsResponse} />\n                      )}\n                      {coordinates.map((coord, index) => (\n                        <Marker\n                          key={index}\n                          position={coord}\n                        />\n                      ))}\n                    </GoogleMap>\n                  </LoadScript>\n                </Card>\n              </Col> */}\n            </Row>\n          </TabPane>\n\n          <TabPane tab=\"Driver Details\" key=\"1\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Driver Details</h6>}\n                  className=\"header-solid h-full card-profile-information\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                   <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"First Name\" span={3}>\n                        {driver && driver.firstName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Last Name\" span={3}>\n                        {driver && driver.lastName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {driver && driver.phoneNumber}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Status\" span={3}>\n    {driver && (\n      <Tag color={\n        driver.status === 'Active' ? 'darkgreen' :\n        driver.status === 'Pending' ? 'darkorange' :\n        driver.status === 'Inactive' ? 'darkred' : 'gray'\n      }>\n        {driver.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n\n  <Descriptions.Item label=\"Rating\" span={3}>\n    {driver && <Rate disabled value={driver.rating} />}\n  </Descriptions.Item>\n  \n\n  \n                    </Descriptions>\n                </Card>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Driver Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Driver Image\" key=\"1\">\n                      {renderImage(driver?.driverImage, \"Driver Image\")}\n                    </TabPane>\n                    <TabPane tab=\"Driver Documents\" key=\"2\">\n                      {renderImage(driver?.documents, \"Driver Documents\")}\n                    </TabPane>\n                    <TabPane tab=\"Driver Licence\" key=\"3\">\n                      {renderImage(driver?.driverLicence, \"Driver Licence\")}\n                    </TabPane>\n                  </Tabs>\n                  {/* <div className=\"mt-4\">\n                    <Upload\n                      beforeUpload={beforeUpload}\n                      fileList={fileList}\n                      maxCount={1}\n                      accept=\".docx,.pdf\"\n                    >\n                      <Button type=\"dashed\" className=\"ant-full-box\" icon={<ToTopOutlined />} >\n                        Upload File\n                      </Button>\n                    </Upload>\n                    <Button onClick={handleUpload} hidden={!fileList.length}>Submit</Button>\n                  </div> */}\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tab=\"Passenger Details\" key=\"2\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Passenger Details</h6>}\n                  className=\"header-solid h-full card-profile-information\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                   <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"First Name\" span={3}>\n                        {passenger && passenger.firstName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Last Name\" span={3}>\n                        {passenger && passenger.lastName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {passenger && passenger.phoneNumber}\n                      </Descriptions.Item>\n                      {/* <Descriptions.Item label=\"Email\" span={3}>\n                        {passenger && passenger.email}\n                      </Descriptions.Item> */}\n                     <Descriptions.Item label=\"Status\" span={3}>\n    {passenger && (\n      <Tag color={\n        passenger.status === 'Active' ? 'darkgreen' :\n        passenger.status === 'Pending' ? 'darkorange' :\n        passenger.status === 'Inactive' ? 'darkred' : 'gray'\n      }>\n        {passenger.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n                      {/* <Descriptions.Item label=\"Address\" span={3}>\n                        {passenger && passenger.address}\n                      </Descriptions.Item> */}\n                        <Descriptions.Item label=\"Rating\" span={3}>\n    {passenger && <Rate disabled value={5} />}\n  </Descriptions.Item>\n                    </Descriptions>\n                </Card>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Passenger Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Passenger Image\" key=\"1\">\n                      {renderImage(passenger?.passengerImage, \"Passenger Image\")}\n                    </TabPane>\n                    {/* <TabPane tab=\"Passenger Documents\" key=\"2\">\n                      {renderImage(passenger?.passengerDocuments, \"Passenger Documents\")}\n                    </TabPane> */}\n                  </Tabs>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      )}\n      <Modal\n        visible={previewVisible}\n        title=\"Image Preview\"\n        footer={null}\n        onCancel={() => setPreviewVisible(false)}\n      >\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n    </>\n  );\n};\n\nexport default TripDetail;\n","import React, { useState } from \"react\";\nimport { Row, Col, Rate, Tag, Card, Upload, message, Descriptions, Button, Tabs, Avatar, Modal, Spin, Select } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { ToTopOutlined, UserOutlined } from '@ant-design/icons';\nimport useFetchWithToken from '../../services/api';\nimport axios from \"axios\";\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst ReservationDetail = () => {\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [selectedDriver, setSelectedDriver] = useState(null); // State to hold selected driver\n  const { id } = useParams();\n\n  // Fetch reservation data\n  const { data, loading: reservationLoading } = useFetchWithToken(`reservations/${id}`);\n  const { data: driversData, loading: driversLoading, postFormData } = useFetchWithToken(`drivers`);\n\n  // Combine the loading states\n  const isLoading = reservationLoading || driversLoading;\n\n  const tripData = data?.reservation; // Extracting the reservation data\n  const drivers = driversData || []; // Ensure drivers data is properly handled\n\n  const driver = tripData?.driver;\n  const passenger = tripData?.passenger;\n\n  const handleDriverSelect = (value) => {\n    setSelectedDriver(value);\n  };\n  const forwardToDriver = async () => {\n    if (!selectedDriver) {\n      message.warning(\"Please select a driver to forward the reservation.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(`http://194.164.72.21:5001/reservations/forward/${id}`, { driverId: selectedDriver }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      window.location.reload();\n\n      message.success(\"Reservation successfully forwarded to the selected driver.\");\n    } catch (error) {\n      message.error(\"Failed to forward reservation.\");\n      console.error('Error forwarding reservation:', error);\n    }\n  };\n  \n\n  const beforeUpload = (file) => {\n    setFileList([file]);\n    return false;\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", fileList[0]);\n\n    try {\n      message.success(\"File uploaded successfully!\");\n      setFileList([]);\n    } catch (error) {\n      message.error(\"Failed to upload file\");\n      setFileList([]);\n    }\n  };\n\n  const handlePreview = (src) => {\n    setPreviewImage(src);\n    setPreviewVisible(true);\n  };\n\n  const renderImage = (src, alt) => (\n    src ? <img src={`http://194.164.72.21:5001${src}`} alt={alt} style={{ width: \"100%\", height: \"400px\", objectFit: \"cover\", marginBottom: \"10px\", cursor: 'pointer' }} onClick={() => handlePreview(`http://194.164.72.21:5001${src}`)} />\n      : <Avatar shape=\"square\" icon={<UserOutlined />} style={{ width: \"100%\", height: \"400px\", marginBottom: \"10px\" }} />\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"3\">\n          <TabPane tab=\"Trip Details\" key=\"3\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Reservation Details - {tripData?.id}</h6>}\n                  className=\"header-solid h-full card-profile-information\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <Descriptions style={{ marginTop: '60px' }} column={2}>\n                    <Descriptions.Item label=\"Start Location\" span={1}>\n                      {tripData?.from || 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"End Location\" span={1}>\n                      {tripData?.to || 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Distance\" span={1}>\n                      {tripData?.distance || 'N/A'} km\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Price\" span={1}>\n                      ${tripData?.price || 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Status\" span={3}>\n                      {tripData && (\n                        <Tag color={\n                          tripData.status === 'Started' ? 'darkorange' :\n                          tripData.status === 'Accepted' ? 'darkorange' :\n                          // tripData.status === 'Pending' ? 'darkred' :\n                          tripData.status === 'Pending' ? 'darkred' : 'gray'\n                        }>\n                          {tripData.status.toUpperCase()}\n                        </Tag>\n                      )}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Pick Up Time\" span={1}>\n                      {tripData?.pickUpDate ? new Date(tripData.pickUpDate).toLocaleString() : 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Drop Off Time\" span={1}>\n                      {tripData?.updatedAt ? new Date(tripData.updatedAt).toLocaleString() : 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Driver Rating\" span={1}>\n                      {tripData && <Rate disabled value={tripData.driverRating} />}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Passenger Rating\" span={1}>\n                      {tripData && <Rate disabled value={tripData.passengerRating} />}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Driver Feedback\" span={1}>\n                      {tripData?.driverFeedback || 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Passenger Feedback\" span={1}>\n                      {tripData?.passengerFeedback || 'N/A'}\n                    </Descriptions.Item>\n                    {tripData?.status !== \"Started\" && drivers && (\n  <Descriptions.Item label=\"Assign or change Driver\" span={1}>\n    <Select\n      style={{ width: '50%', marginBottom: '10px' }}\n      placeholder=\"Select Driver\"\n      onChange={handleDriverSelect}\n    >\n      {drivers.map(driver => (\n        <Option key={driver.id} value={driver.id}>\n          {driver.firstName} {driver.lastName} - {driver.phoneNumber}\n        </Option>\n      ))}\n    </Select>\n    <Button type=\"primary\" onClick={forwardToDriver}>\n      Forward to Driver\n    </Button>\n  </Descriptions.Item>\n)}\n\n\n                  </Descriptions>\n\n              \n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          {driver && (  // Conditionally render the Driver Details tab if driver data is available\n            <TabPane tab=\"Driver Details\" key=\"1\">\n              <Row gutter={[24, 0]}>\n                <Col span={24} md={12} className=\"mb-24\">\n                  <Card\n                    bordered={false}\n                    title={<h6 className=\"font-semibold m-0\">Driver Details</h6>}\n                    className=\"header-solid h-full card-profile-information\"\n                    bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                  >\n                    <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"First Name\" span={3}>\n                        {driver?.firstName || 'N/A'}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Last Name\" span={3}>\n                        {driver?.lastName || 'N/A'}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {driver?.phoneNumber || 'N/A'}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Status\" span={3}>\n                        {driver && (\n                          <Tag color={\n                            driver.status === 'Active' ? 'darkgreen' :\n                            driver.status === 'Inactive' ? 'darkred' : 'gray'\n                          }>\n                            {driver.status.toUpperCase()}\n                          </Tag>\n                        )}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Rating\" span={3}>\n                        {driver && <Rate disabled value={driver.rating} />}\n                      </Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </Col>\n                <Col span={24} md={12} className=\"mb-24\">\n                  <Card\n                    bordered={false}\n                    className=\"header-solid h-full\"\n                    title={<h6 className=\"font-semibold m-0\">Driver Documents</h6>}\n                  >\n                    <Tabs defaultActiveKey=\"1\">\n                      <TabPane tab=\"Driver Image\" key=\"1\">\n                        {renderImage(driver?.driverImage, \"Driver Image\")}\n                      </TabPane>\n                      <TabPane tab=\"Driver Documents\" key=\"2\">\n                        {renderImage(driver?.documents, \"Driver Documents\")}\n                      </TabPane>\n                      <TabPane tab=\"Driver Licence\" key=\"3\">\n                        {renderImage(driver?.driverLicence, \"Driver Licence\")}\n                      </TabPane>\n                    </Tabs>\n                  </Card>\n                </Col>\n              </Row>\n            </TabPane>\n          )}\n\n          <TabPane tab=\"Passenger Details\" key=\"2\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Passenger Details</h6>}\n                  className=\"header-solid h-full card-profile-information\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <Descriptions style={{ marginTop: '60px' }}>\n                    <Descriptions.Item label=\"First Name\" span={3}>\n                      {passenger?.firstName || 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Last Name\" span={3}>\n                      {passenger?.lastName || 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Phone Number\" span={3}>\n                      {passenger?.phoneNumber || 'N/A'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Status\" span={3}>\n                      {passenger && (\n                        <Tag color={\n                          passenger.status === 'Active' ? 'darkgreen' :\n                          passenger.status === 'Inactive' ? 'darkred' : 'gray'\n                        }>\n                          {passenger.status.toUpperCase()}\n                        </Tag>\n                      )}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Rating\" span={3}>\n                      {passenger && <Rate disabled value={5} />}\n                    </Descriptions.Item>\n                  </Descriptions>\n                </Card>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Passenger Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Passenger Image\" key=\"1\">\n                      {renderImage(passenger?.passengerImage, \"Passenger Image\")}\n                    </TabPane>\n                  </Tabs>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      )}\n      <Modal\n        visible={previewVisible}\n        title=\"Image Preview\"\n        footer={null}\n        onCancel={() => setPreviewVisible(false)}\n      >\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n    </>\n  );\n};\n\nexport default ReservationDetail;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Input, Spin, Select, Card, Descriptions, Row, Col } from \"antd\";\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\n\nconst { Option } = Select;\n\nconst Dispatch = () => {\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [accepted, setAccepted] = useState(null);\n  const [fromPlace, setFromPlace] = useState(\"\");\n  const [toPlace, setToPlace] = useState(\"\");\n  const [fromCoords, setFromCoords] = useState({});\n  const [toCoords, setToCoords] = useState({});\n  const [passengers, setPassengers] = useState([]);\n  const [selectedPassenger, setSelectedPassenger] = useState(null);\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  const [selectedVehicleType, setSelectedVehicleType] = useState(null);\n\n  const fromAutocompleteRef = useRef(null);\n  const toAutocompleteRef = useRef(null);\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    const fetchPassengers = async () => {\n      try {\n        const res = await axios.get('http://194.164.72.21:5001/passengers');\n        setPassengers(res.data);\n      } catch (error) {\n        console.error('Failed to fetch passengers', error);\n      }\n    };\n\n    const fetchVehicleTypes = async () => {\n      try {\n        const res = await axios.get('http://194.164.72.21:5001/vehicleTypes');\n        setVehicleTypes(res.data);\n      } catch (error) {\n        console.error('Failed to fetch vehicle types', error);\n      }\n    };\n\n    fetchPassengers();\n    fetchVehicleTypes();\n\n    socketRef.current = io('http://194.164.72.21:3004');\n\n    socketRef.current.on('requested', (data) => {\n      console.log('Requested event received:', data);\n      setResponse(data);\n      setLoading(false);\n    });\n\n    socketRef.current.on('accepted', (data) => {\n      console.log('Accepted event received:', data);\n      setAccepted(data);\n      setLoading(false);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendRequest = () => {\n    setLoading(true);\n\n    const requestData = {\n      fromLat: String(fromCoords.lat),\n      fromLon: String(fromCoords.lng),\n      toLat: String(toCoords.lat),\n      toLon: String(toCoords.lng),\n      passengerId: String(selectedPassenger),\n      vehicleTypeId: String(selectedVehicleType)\n    };\n    console.log('Sending request with data:', requestData);\n\n    socketRef.current.emit('webRequest', requestData, (response) => {\n      console.log('Server response:', response);\n    });\n  };\n\n  const handlePlaceSelect = (autocomplete, setCoords, setPlace) => {\n    const place = autocomplete.getPlace();\n    const location = place.geometry.location;\n    setCoords({\n      lat: location.lat(),\n      lng: location.lng()\n    });\n    setPlace(place.formatted_address);\n  };\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyBEnjVNXGgw757msw4v4Otk5nV9XYUOQCs\" libraries={['places']}>\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        <Row gutter={16} justify=\"center\">\n          <Col span={12} style={{ marginBottom: '20px' }}>\n            <Autocomplete\n              onLoad={(autocomplete) => (fromAutocompleteRef.current = autocomplete)}\n              onPlaceChanged={() => handlePlaceSelect(fromAutocompleteRef.current, setFromCoords, setFromPlace)}\n            >\n              <Input placeholder=\"From Location\" value={fromPlace} onChange={(e) => setFromPlace(e.target.value)} />\n            </Autocomplete>\n            <br />\n            <Autocomplete\n              onLoad={(autocomplete) => (toAutocompleteRef.current = autocomplete)}\n              onPlaceChanged={() => handlePlaceSelect(toAutocompleteRef.current, setToCoords, setToPlace)}\n            >\n              <Input placeholder=\"To Location\" value={toPlace} onChange={(e) => setToPlace(e.target.value)} />\n            </Autocomplete>\n            <br />\n            <Select\n              showSearch\n              placeholder=\"Select Passenger\"\n              style={{ width: '100%' }}\n              onChange={(value) => setSelectedPassenger(value)}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {passengers.map(passenger => (\n                <Option key={passenger.id} value={passenger.id}>\n                  {`${passenger.firstName} ${passenger.lastName} - ${passenger.phoneNumber}`}\n                </Option>\n              ))}\n            </Select>\n            <br /><br />\n            <Select\n              placeholder=\"Select Vehicle Type\"\n              style={{ width: '100%' }}\n              onChange={(value) => setSelectedVehicleType(value)}\n            >\n              {vehicleTypes.map(vehicleType => (\n                <Option key={vehicleType.id} value={vehicleType.id}>\n                  {vehicleType.typeName}\n                </Option>\n              ))}\n            </Select>\n            <br />\n          </Col>\n        </Row>\n        {loading ? (\n          <Spin size=\"large\" />\n        ) : (\n          <div>\n            <Button type=\"primary\" onClick={sendRequest}>Send Request</Button>\n            {accepted && (\n              <Row gutter={16} style={{ marginTop: '20px' }}>\n                {console.log(accepted)}\n                <Col span={8}>\n                  <Card title=\"Driver Information\" bordered>\n                    <Descriptions bordered column={1}>\n                      <Descriptions.Item label=\"Name\">{`${accepted.driver.firstName} ${accepted.driver.lastName}`}</Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\">{accepted.driver.phoneNumber}</Descriptions.Item>\n                      <Descriptions.Item label=\"Rating\">{accepted.driver.rating}</Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </Col>\n                <Col span={8}>\n                  <Card title=\"Vehicle Information\" bordered>\n                    <Descriptions bordered column={1}>\n                      <Descriptions.Item label=\"Plate Number\">{accepted.vehicle.plateNumber}</Descriptions.Item>\n                      <Descriptions.Item label=\"Model\">{accepted.vehicle.model}</Descriptions.Item>\n                      <Descriptions.Item label=\"Color\">{accepted.vehicle.color}</Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </Col>\n                <Col span={8}>\n                  <Card title=\"Arriving Information\" bordered>\n                    <Descriptions bordered column={1}>\n                      <Descriptions.Item label=\"ETA\">{accepted.arrivingInfo.eta}</Descriptions.Item>\n                      <Descriptions.Item label=\"Distance\">{accepted.arrivingInfo.distance}</Descriptions.Item>\n                    </Descriptions>\n                  </Card>\n                </Col>\n              </Row>\n            )}\n          </div>\n        )}\n      </div>\n    </LoadScript>\n  );\n};\n\nexport default Dispatch;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, message, Input, Button, Table, Spin, Tag, Tooltip } from 'antd';\nimport { SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst { Search } = Input;\n\nconst TripRequests = () => {\n  const [irModalVisible, setProjectModalVisible] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [tripsData, setTripsData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const history = useHistory();\n\n  const defaultSelectedColumns = ['id', 'from', 'to', 'pickUpTime', 'distance', 'price', 'status', 'driverName', 'driverPhone', 'actions'];\n\n  useEffect(() => {\n    setSelectedColumns(defaultSelectedColumns);\n    fetchData();\n  }, [submitted]);\n\n  const handleAddTrip = () => {\n    setFormData({});\n    setProjectModalVisible(true);\n  };\n\n  const handleRowClick = (record) => {\n    setSelectedRow(record);\n    setDetailsVisible(true);\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedRow(null);\n    setDetailsVisible(false);\n  };\n\n  const handleUpload = async ({ file }) => {\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Simulate a successful upload\n      message.success(`${file.name} uploaded successfully`);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      message.error(`${file.name} upload failed.`);\n      setUploading(false);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('http://194.164.72.21:5001/tripRequests');\n      setTripsData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (error) {\n      message.error('Unable to load data!');\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    const filteredData = tripsData.filter((trip) =>\n      Object.keys(trip).some((key) =>\n        String(trip[key]).toLowerCase().includes(value.toLowerCase())\n      )\n    );\n    setFilteredData(filteredData);\n  };\n\n  const renderWithTooltip = (text, maxLength = 10) => {\n    const truncatedText = text.length > maxLength ? `${text.substring(0, maxLength)}...` : text;\n    return (\n      <Tooltip title={text}>\n        <span>{truncatedText}</span>\n      </Tooltip>\n    );\n  };\n\n  const tripsColumns = [\n    {\n      title: 'Trip ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: '10%',\n    },\n    // {\n    //   title: 'Driver Name',\n    //   dataIndex: ['driver', 'firstName'],\n    //   key: 'driverName',\n    //   width: '10%',\n    //   render: (text, record) => renderWithTooltip(`${record.driver.firstName} ${record.driver.lastName}`, 15),\n    // },\n    {\n      title: 'Passenger Name',\n      dataIndex: ['passenger', 'firstName'],\n      key: 'passengerName',\n      width: '10%',\n      render: (text, record) => renderWithTooltip(`${record.passenger.firstName} ${record.passenger.lastName}`, 15),\n    },\n    {\n      title: 'Start Location',\n      dataIndex: 'from',\n      key: 'from',\n      width: '10%',\n      render: (text) => renderWithTooltip(text, 20),\n    },\n    {\n      title: 'End Location',\n      dataIndex: 'to',\n      key: 'to',\n      width: '10%',\n      render: (text) => renderWithTooltip(text, 20),\n    },\n    {\n      title: 'Price',\n      dataIndex: 'estimatedPrice',\n      key: 'estimatedPrice',\n      width: '10%',\n      render: (text) => {\n        if (!text) {\n          return ''; // or any placeholder you want to display when text is empty\n        }\n        return renderWithTooltip(text, 20);\n      },\n    },\n    {\n      title: 'Date',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      width: '10%',\n      render: (text) => {\n        if (!text) {\n          return ''; // or any placeholder you want to display when text is empty\n        }\n        return renderWithTooltip(text, 20);\n      },\n    },\n    \n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '10%',\n      render: (status) => {\n        let color = '';\n        switch (status) {\n          case 'Ended':\n            color = 'darkgreen';\n            break;\n          case 'Active':\n            color = 'darkorange';\n            break;\n          case 'Pending':\n            color = 'darkred';\n            break;\n          default:\n            color = 'gray';\n        }\n        return (\n          <Tooltip title={status.toUpperCase()}>\n            <Tag color={color}>{renderWithTooltip(status.toUpperCase(), 7)}</Tag>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: '10%',\n      render: (_, record) => (\n        <Button type=\"link\">\n          <NavLink to={`/tripRequestDetails/${record.id}`} style={{ color: 'green' }}>\n            <InfoCircleOutlined /> &nbsp;Details\n          </NavLink>\n        </Button>\n      ),\n    },\n  ];\n\n  const DynamicTable = ({ columns: initialColumns, data }) => {\n    const defaultDisplayedColumns = initialColumns.map((column) => column.key);\n    const [displayedColumns, setDisplayedColumns] = useState(defaultDisplayedColumns);\n\n    useEffect(() => {\n      setDisplayedColumns(defaultDisplayedColumns);\n    }, [defaultDisplayedColumns]);\n\n    const filteredColumns = initialColumns.filter((column) => displayedColumns.includes(column.key));\n\n    return (\n      <div style={{ overflowX: 'auto' }}>\n        <Table\n          columns={filteredColumns}\n          dataSource={data}\n          pagination={{ pageSize: 5 }}\n          className=\"ant-border-space\"\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <Row gutter={[24, 0]}>\n          <Col span={12} />\n          <Col span={12}>\n            <Search\n              placeholder=\"Search Trips\"\n              allowClear\n              enterButton={<SearchOutlined />}\n              onSearch={handleSearch}\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} xl={selectedRow ? 12 : 24}>\n            {loading ? (\n              <div style={{ textAlign: 'center', marginTop: '20px' }}>\n                <Spin size=\"large\" />\n              </div>\n            ) : (\n              <DynamicTable columns={tripsColumns} data={filteredData} />\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default TripRequests;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col,Rate,Tag, Card, Upload, message, Descriptions, Button, Tabs, Avatar, Modal, Spin } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { ToTopOutlined, UserOutlined } from '@ant-design/icons';\nimport { GoogleMap, LoadScript, Marker, DirectionsRenderer } from '@react-google-maps/api';\nimport useFetchWithToken from '../../services/api';\n\nconst { TabPane } = Tabs;\n\nconst TripRequestDetail = () => {\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const { id } = useParams();\n  const { data: tripData, loading: tripLoading } = useFetchWithToken(`tripRequests/${id}`);\n  const [isMounted, setIsMounted] = useState(true);\n\n  const driver = tripData?.driver;\n  const passenger = tripData?.passenger;\n\n  const coordinates = tripData\n    ? [\n        { lat: parseFloat(tripData.fromLat), lng: parseFloat(tripData.fromLon) },\n        { lat: parseFloat(tripData.toLat), lng: parseFloat(tripData.toLon) },\n      ]\n    : [];\n\n  useEffect(() => {\n    if (coordinates.length === 2 && window.google && window.google.maps) {\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route(\n        {\n          origin: coordinates[0],\n          destination: coordinates[1],\n          travelMode: window.google.maps.TravelMode.DRIVING,\n        },\n        (result, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK && isMounted) {\n            setDirectionsResponse(result);\n          } else {\n            console.error(`Error fetching directions: ${status}`, result);\n          }\n        }\n      );\n    }\n    return () => setIsMounted(false); // Cleanup to avoid memory leaks\n  }, [coordinates]);\n\n  const beforeUpload = (file) => {\n    setFileList([file]);\n    return false;\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", fileList[0]);\n\n    try {\n      // await postFormData(formData, `uploadDriverDocument/${id}`);\n      message.success(\"File uploaded successfully!\");\n      setFileList([]);\n    } catch (error) {\n      message.error(\"Failed to upload file\");\n      setFileList([]);\n    }\n  };\n\n  const handlePreview = (src) => {\n    setPreviewImage(src);\n    setPreviewVisible(true);\n  };\n\n  const renderImage = (src, alt) => (\n    src ? <img src={`http://194.164.72.21:5001${src}`} alt={alt} style={{ width: \"100%\", height: \"400px\", objectFit: \"cover\", marginBottom: \"10px\", cursor: 'pointer' }} onClick={() => handlePreview(`http://194.164.72.21:5001${src}`)} />\n      : <Avatar shape=\"square\" icon={<UserOutlined />} style={{ width: \"100%\", height: \"400px\", marginBottom: \"10px\" }} />\n  );\n\n  return (\n    <>\n      {tripLoading ? (\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"3\">\n          <TabPane tab=\"Trip Details\" key=\"3\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Trip Request Details-                       {tripData?.id}\n                  </h6>}\n                  className=\"header-solid h-full card-profile-information\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <Descriptions style={{ marginTop: '60px' }} column={2}>\n                  \n                    <Descriptions.Item label=\"Start Location\" span={1}>\n                      {tripData?.from}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"End Location\" span={1}>\n                      {tripData?.to}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Distance\" span={1}>\n                      {tripData?.distance} km\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Price\" span={1}>\n                      ${tripData?.estimatedPrice}\n                    </Descriptions.Item>\n                   \n                    <Descriptions.Item label=\"Status\" span={3}>\n    {tripData && (\n      <Tag color={\n        tripData.status === 'Ended' ? 'darkgreen' :\n        tripData.status === 'Active' ? 'darkorange' :\n        tripData.status === 'Pending' ? 'darkred' : 'gray'\n      }>\n        {tripData.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n                    <Descriptions.Item label=\"Pick Up Time\" span={1}>\n                    ${tripData?.pickUpTime}\n                    </Descriptions.Item>\n                   \n                    {/* <Descriptions.Item label=\"Payment Finalized\" span={1}>\n                      {tripData?.paymentFinalized}\n                    </Descriptions.Item> */}\n                  </Descriptions>\n                </Card>\n              </Col>\n              {/* <Col span={24}>\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Trip Route</h6>}\n                  className=\"header-solid h-full\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                  <LoadScript googleMapsApiKey=\"AIzaSyBEnjVNXGgw757msw4v4Otk5nV9XYUOQCs\">\n                    <GoogleMap\n                      mapContainerStyle={{ height: \"500px\", width: \"100%\" }}\n                      center={coordinates.length ? coordinates[0] : { lat: 0, lng: 0 }}\n                      zoom={13}\n                    >\n                      {directionsResponse && (\n                        <DirectionsRenderer directions={directionsResponse} />\n                      )}\n                      {coordinates.map((coord, index) => (\n                        <Marker\n                          key={index}\n                          position={coord}\n                        />\n                      ))}\n                    </GoogleMap>\n                  </LoadScript>\n                </Card>\n              </Col> */}\n            </Row>\n          </TabPane>\n\n       \n          <TabPane tab=\"Passenger Details\" key=\"2\">\n            <Row gutter={[24, 0]}>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  title={<h6 className=\"font-semibold m-0\">Passenger Details</h6>}\n                  className=\"header-solid h-full card-profile-information\"\n                  bodyStyle={{ paddingTop: 0, paddingBottom: 16 }}\n                >\n                   <Descriptions style={{ marginTop: '60px' }}>\n                      <Descriptions.Item label=\"First Name\" span={3}>\n                        {passenger && passenger.firstName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Last Name\" span={3}>\n                        {passenger && passenger.lastName}\n                      </Descriptions.Item>\n                      <Descriptions.Item label=\"Phone Number\" span={3}>\n                        {passenger && passenger.phoneNumber}\n                      </Descriptions.Item>\n                      {/* <Descriptions.Item label=\"Email\" span={3}>\n                        {passenger && passenger.email}\n                      </Descriptions.Item> */}\n                     <Descriptions.Item label=\"Status\" span={3}>\n    {passenger && (\n      <Tag color={\n        passenger.status === 'Active' ? 'darkgreen' :\n        passenger.status === 'Pending' ? 'darkorange' :\n        passenger.status === 'Inactive' ? 'darkred' : 'gray'\n      }>\n        {passenger.status.toUpperCase()}\n      </Tag>\n    )}\n  </Descriptions.Item>\n                      {/* <Descriptions.Item label=\"Address\" span={3}>\n                        {passenger && passenger.address}\n                      </Descriptions.Item> */}\n                        <Descriptions.Item label=\"Rating\" span={3}>\n    {passenger && <Rate disabled value={5} />}\n  </Descriptions.Item>\n                    </Descriptions>\n                </Card>\n              </Col>\n              <Col span={24} md={12} className=\"mb-24\">\n                <Card\n                  bordered={false}\n                  className=\"header-solid h-full\"\n                  title={<h6 className=\"font-semibold m-0\">Passenger Documents</h6>}\n                >\n                  <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Passenger Image\" key=\"1\">\n                      {renderImage(passenger?.passengerImage, \"Passenger Image\")}\n                    </TabPane>\n                    {/* <TabPane tab=\"Passenger Documents\" key=\"2\">\n                      {renderImage(passenger?.passengerDocuments, \"Passenger Documents\")}\n                    </TabPane> */}\n                  </Tabs>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      )}\n      <Modal\n        visible={previewVisible}\n        title=\"Image Preview\"\n        footer={null}\n        onCancel={() => setPreviewVisible(false)}\n      >\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n    </>\n  );\n};\n\nexport default TripRequestDetail;\n","/*!\n=========================================================\n* Muse Ant Design Dashboard - v1.0.0\n=========================================================\n* Product Page: https://www.creative-tim.com/product/muse-ant-design-dashboard\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/muse-ant-design-dashboard/blob/main/LICENSE.md)\n* Coded by Creative Tim\n=========================================================\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\n\nimport Main from \"./components/layout/Main\";\nimport Drivers from \"./components/drivers/drivers\";\nimport ActiveDrivers from \"./components/drivers/activeDrivers\";\n\n\nimport Passengers from \"./components/passengers/passengers\";\nimport Trips from \"./components/trips/trips\";\nimport Companies from \"./components/company/companies\";\n\nimport Reservations from \"./components/trips/reservations\";\n\nimport Vehicles from \"./components/vehicles/vehicles\";\nimport VehicleTypes from \"./components/vehicleTypes/vehicleTypes\";\nimport InitialPrices from \"./components/initialPrices/initialPrices\";\nimport Transactions from \"./components/trips/transactions\";\n\nimport SearchRadiuses from \"./components/searchRadiuses/searchRadiuses\";\n\n\n\n\n\n\nimport DriversDetail from \"./components/drivers/detail\";\nimport PassengersDetail from \"./components/passengers/detail\";\nimport VehiclesDetail from \"./components/vehicles/detail\";\nimport CompanyDetails from \"./components/company/detail\";\n\n\n\n\nimport User from \"./components/userManagement/user\";\n\nimport Permission from \"./components/userManagement/permission\";\nimport Role from \"./components/userManagement/role\";\nimport Login from \"./components/userManagement/login\";\n\nimport \"antd/dist/antd.css\";\nimport \"./assets/styles/main.css\";\nimport \"./assets/styles/responsive.css\";\nimport UpdateProfile from \"./components/userManagement/updateProfile\";\nimport TripDetail from \"./components/trips/detail\";\nimport ReservationDetail from \"./components/trips/reservationDetail\";\nimport Dispatch from \"./components/dispatch/dispatch\";\nimport TripRequests from \"./components/trips/tripRequests\";\nimport TripRequestDetail from \"./components/trips/tripRequestDetail\";\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n\n        <Route path=\"/login\" exact component={Login} />\n\n        <Main>\n          <Route exact path=\"/dashboard\" component={Home} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/drivers\" component={Drivers} />\n          <Route exact path=\"/activeDrivers\" component={ActiveDrivers} />\n\n          <Route exact path=\"/driverDetails/:id\" component={DriversDetail} />\n          <Route exact path=\"/passengers\" component={Passengers} />\n          <Route exact path=\"/trips\" component={Trips} />\n          <Route exact path=\"/tripRequests\" component={TripRequests} />\n\n\n          <Route exact path=\"/companies\" component={Companies} />\n\n          <Route exact path=\"/reservations\" component={Reservations} />\n          <Route exact path=\"/vehicleTypes\" component={VehicleTypes} />\n          <Route exact path=\"/initialPrices\" component={InitialPrices} />\n          <Route exact path=\"/searchRadiuses\" component={SearchRadiuses} />\n          <Route exact path=\"/transactions\" component={Transactions} />\n          <Route exact path=\"/companyDetails/:id\" component={CompanyDetails} />\n          <Route exact path=\"/dispatch\" component={Dispatch} />\n\n\n\n          <Route exact path=\"/vehicles\" component={Vehicles} />\n\n          <Route exact path=\"/passengerDetails/:id\" component={PassengersDetail} />\n          <Route exact path=\"/tripDetails/:id\" component={TripDetail} />\n          <Route exact path=\"/tripRequestDetails/:id\" component={TripRequestDetail} />\n\n          <Route exact path=\"/reservationDetails/:id\" component={ReservationDetail} />\n\n\n          <Route exact path=\"/vehicleDetails/:id\" component={VehiclesDetail} />\n\n\n\n\n          <Route exact path=\"/users\" component={User} />\n\n\n          <Route exact path=\"/roles\" component={Role} />\n          <Route exact path=\"/permissions\" component={Permission} />\n\n          <Route exact path=\"/profile-update\" component={UpdateProfile} />\n\n\n          {/* <Redirect from=\"*\" to=\"/dashboard\" /> */}\n        </Main>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/*!\n=========================================================\n* Muse Ant Design Dashboard - v1.0.0\n=========================================================\n* Product Page: https://www.creative-tim.com/product/muse-ant-design-dashboard\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/muse-ant-design-dashboard/blob/main/LICENSE.md)\n* Coded by Creative Tim\n=========================================================\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/kms\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}